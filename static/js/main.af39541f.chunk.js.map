{"version":3,"sources":["reducers/buttons.reducer.ts","reducers/fills.reducer.ts","reducers/level.reducer.ts","reducers/reset.reducer.ts","reducers/score.reducer.ts","reducers/settings.reducer.ts","reducers/timestamp.reducer.ts","reducers/root.reducer.ts","utils/highScore.ts","reducers/index.ts","components/ButtonBar/ButtonBar.tsx","components/ButtonBar/index.ts","config.ts","components/SocketHandler.tsx","utils/randomName.ts","components/ResetButton/index.ts","components/ResetButton/ResetButton.tsx","levels/HighscoreScreen/HighscoreScreen.tsx","levels/HighscoreScreen/index.ts","components/Loop.tsx","components/Glass/index.ts","components/Glass/Glass.tsx","components/CocktailGlass/CocktailGlass.tsx","components/CocktailGlass/index.ts","components/Tap/index.ts","components/Tap/Tap.tsx","components/ColorTap/index.ts","components/ColorTap/ColorTap.tsx","components/Gopher/index.ts","components/Gopher/Gopher.tsx","components/ContinueButton/index.ts","components/ContinueButton/ContinueButton.tsx","components/ButtonLegend/index.ts","components/ButtonLegend/ButtonLegend.tsx","components/Modal/Modal.tsx","components/Modal/index.ts","components/SpeechBubble/index.ts","components/SpeechBubble/SpeechBubble.tsx","components/Drop.tsx","components/WaterParticle/WaterParticle.tsx","components/WaterParticle/index.ts","utils/calculateFillColor.ts","utils/Color.ts","utils/colorDistance.ts","utils/shuffleHelper.ts","utils/statsHelper.ts","components/ColorHints/ColorHintTutorial.tsx","components/ColorHints/ColorHintLevel1.tsx","components/ColorHints/ColorHintLevel2.tsx","components/ColorHints/ColorHintLevel3.tsx","components/EndOfLevelGopher/index.ts","components/EndOfLevelGopher/EndOfLevelGopher.tsx","components/LevelBox/index.ts","components/LevelBox/LevelBox.tsx","components/PreLevel/index.ts","components/PreLevel/PreLevel.tsx","components/ScoreHelper/index.ts","components/ScoreHelper/ScoreHelper.tsx","components/Spilled/Spilled.tsx","components/Spilled/index.ts","components/Table/index.ts","components/Table/Table.tsx","components/TimeBox/TimeBox.tsx","utils/randomDrink.ts","levels/Level1/Level1.tsx","levels/Level1/index.ts","levels/Level2/Level2.tsx","levels/Level2/index.ts","levels/Level3/Level3.tsx","levels/Level3/index.ts","components/ScoreScreenHelper/index.ts","components/ScoreScreenHelper/ScoreScreenHelper.tsx","levels/ScoreScreen/ScoreScreen.tsx","levels/ScoreScreen/index.ts","levels/Tutorial/Tutorial.tsx","levels/Tutorial/index.ts","components/ResetDialog/index.ts","components/ResetDialog/ResetDialog.tsx","components/World/World.tsx","components/World/index.ts","App.tsx","index.tsx"],"names":["ButtonsActionType","FillActionType","initialButtons","continue","cyan","magenta","reset","yellow","initialFills","Level","LevelActionType","ResetActionType","initialLevel","Tutorial","levelReducer","state","arguments","length","undefined","action","type","RESET","NEXT_LEVEL","SET_LEVEL","payload","ScoreActionType","resetReducer","SET_RESET_STATE","RootActions","SettingsActionType","initialScore","level1","level2","level3","initialSettings","capacity","fillRate","TimestampActionType","initialTimestamp","Date","now","toString","timestampReducer","SET_TIMESTAMP","HIGHSCORE","initialState","buttons","fills","level","score","settings","timestamp","rootReducer","combineReducers","SET_STATE","Object","assign","SET_BUTTON","key","value","defineProperty","INCREMENT","RESET_FILL","SET_SCORE","SET_SETTINGS","ButtonBar","_React$PureComponent","_getPrototypeOf2","_this","classCallCheck","this","_len","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","concat","handleKeyDown","e","props","dispatch","handleKeyUp","HighscoreScreen","console","log","resetState","inherits","createClass","document","addEventListener","removeEventListener","react","className","cx","ButtonBar__Cyan--active","ButtonBar__Magenta--active","ButtonBar__Yellow--active","ButtonBar__Continue--active","ButtonBar__Reset--active","React","connect","objectSpread","SERVER_IP","process","REACT_APP_SERVER_IP","SERVER_API_URL","SocketHandler","socket","_this2","io","path","transports","on","data","a","registerHandlers","continueVal","unregisterHandlers","compareFn","b","getHighScore","initialValue","localStorage","getItem","entries","setItem","JSON","stringify","parse","sort","getPosition","uuid","findIndex","entry","ANIMAL_NAMES","A","B","C","D","E","F","G","H","K","L","M","O","P","R","S","T","W","Z","ADJECTIVES","getRandomName","keys","randomKey","Math","random","randomAnimal","randomAdjective","ResetButton","width","height","viewBox","style","margin","id","stroke","strokeWidth","fill","fillRule","strokeLinecap","strokeLinejoin","x","y","rx","name","position","totalEntries","totalScore","round","uuidv1","hs","setState","slice","map","index","HighscoreScreen__Row--highlight","display","alignItems","justifyContent","components_ResetButton","LoopContext","destroy","particleIndex","register","callback","spawn","node","unregister","jobId","particleId","Loop","particleMap","Map","loopMap","loopId","lastLoopRun","set","nodes","_i","_nodes","particles","has","delete","renderParticles","forEach","push","performLoop","nextLoop","window","requestAnimationFrame","cancelAnimationFrame","Provider","children","Glass","transformY","min","fillPercent","renderedFillColor","fillColor","trim","version","d","data-fillpercent","transform","cy","ry","CocktailGlass","CocktailGlass--medium","isMedium","CocktailGlass--small","isSmall","components_Glass","defaultProps","Tap","color","ColorTap","lastColor","prevProps","prevState","active","classNames","components_Tap","Gopher","reach","speechBubble","Gopher--reaching","alt","src","ContinueButton","ButtonLegend","components_ContinueButton","Modal","timer","secondsLeft","prompt","setInterval","clearInterval","components_ButtonLegend","SpeechBubble","Drop","filename","marginLeft","WaterParticle","isInvisible","offsetX","size","targetX","posX","targetY","posY","setTimeout","context","incrementColor","fillValue","components_Drop","contextType","buttonKey","calculateFillColor","sumTotal","ratios","redValue","greenValue","blue","green","red","toColorString","colorDistanceNormalized","sqrt","color1","color2","distance","pow","colorDistance","calcTargetColor1","colors","_calculateFillColor","calcTargetColor2","_calculateFillColor2","calcTargetColor3","_calculateFillColor3","getShuffledColors","i","j","floor","_ref","shuffle","postSpill","fetch","method","then","postLevelStats","levelStats","body","ColorHintTutorial","ColorHintLevel1","colorResult","color60","color30","color10","ColorHintLevel2","color5","color9","color3","ColorHintLevel3","EndOfLevelGopher","finalScreen","doFill","r","opacity","LevelBox","levelElement","levelClasses","LevelBox__Level--Training","data-level","PreLevel","training","fontFamily","fontSize","fontWeight","title","ScoreHelper","titleText","colorAccuracy","colorScore","fillBonus","timeBonus","Spilled","Table","TimeBox","timeElement","time","timeClassNames","TimeBox--warn","DRINK_NAMES","getRandomDrink","randomSuffix","Level1","scoreSubmitted","TARGET_COLOR","COLORS","DRINK_NAME","intermediateScore","loop","dt","timeLeft","dispatchIntermediateScore","activeButton","components_WaterParticle","finalFillPercent","finalFills","next","timedMessaged","finalColor","max","abs","event","CustomEvent","detail","dispatchEvent","fillrate","components_Spilled","fillBonusScore","timeBonusScore","points","components_Modal","components_LevelBox","ColorHintLevel1_ColorHintLevel1","components_EndOfLevelGopher","components_ScoreHelper","components_PreLevel","components_Table","components_TimeBox_TimeBox","components_ColorTap","components_CocktailGlass","components_Gopher","message","components_SpeechBubble","reduce","acc","includes","Level2","ColorHintLevel2_ColorHintLevel2","Level3","ColorHintLevel3_ColorHintLevel3","ScoreScreenHelper","score1","score2","score3","ScoreScreen","components_ScoreScreenHelper","ColorHintTutorial_ColorHintTutorial","ResetDialog","World","CurrentLevel","components_Loop","resetDialog","components_ResetDialog","store","createStore","App","es","components_SocketHandler","components_World","components_ButtonBar","ReactDOM","src_App","getElementById"],"mappings":"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","file":"static/js/main.af39541f.chunk.js","sourcesContent":["// import { AnyAction } from 'redux';\n// import { RootActions } from './root.reducer';\n\nexport interface ButtonsState {\n    cyan: boolean;\n    magenta: boolean;\n    yellow: boolean;\n    reset: boolean;\n    continue: boolean;\n    [k: string]: boolean;\n}\n\nexport enum ButtonsActionType {\n    SET_STATE = 'SET_STATE',\n    SET_BUTTON = 'SET_BUTTON',\n    RESET = 'RESET'\n}\n\nexport interface ButtonsAction {\n    type: ButtonsActionType,\n    payload?: Partial<ButtonsState> | {\n        key: string;\n        value: boolean;\n    };\n}\n\nexport const initialButtons: ButtonsState = {\n    continue: false,\n    cyan: false,\n    magenta: false,\n    reset: false,\n    yellow: false\n}\n\nexport const buttonsReducer = (state = initialButtons, action: ButtonsAction) => {\n    switch (action.type) {\n        case ButtonsActionType.SET_STATE:\n            return Object.assign({}, initialButtons, action.payload);\n        \n        case ButtonsActionType.SET_BUTTON:\n            if (action.payload && 'key' in action.payload && state[action.payload.key as string] !== action.payload.value) {\n                return Object.assign({}, state, { [action.payload.key as string]: action.payload.value });\n            } else {\n                return state;\n            }\n        \n        case ButtonsActionType.RESET:\n            return Object.assign({}, initialButtons);\n\n        default:\n            return state;\n    }\n}","export interface FillState {\n    cyan: number;\n    magenta: number;\n    yellow: number;\n}\n\nexport const initialFills: FillState = {\n    cyan: 0,\n    magenta: 0,\n    yellow: 0\n}\n\nexport enum FillActionType {\n    INCREMENT = \"INCREMENT\",\n    RESET = \"RESET\",\n    RESET_FILL = \"RESET_FILL\"\n}\n\nexport const fillsReducer = (state = initialFills, action: { type: FillActionType, payload: { key: keyof FillState, value: number } }) => {\n    switch (action.type) {\n        case FillActionType.INCREMENT:\n            return Object.assign({}, state, { [action.payload.key]: state[action.payload.key] + action.payload.value })\n\n        case FillActionType.RESET:\n        case FillActionType.RESET_FILL:\n            return Object.assign({}, initialFills);\n\n        default:\n            return state;\n    }\n}","export enum Level {\n    Tutorial = 0,\n    Level1 = 1,\n    Level2 = 2,\n    Level3 = 3,\n    ScoreScreen = 4,\n    HighscoreScreen = 5\n}\n\nexport enum LevelActionType {\n    RESET = 'RESET',\n    NEXT_LEVEL = 'NEXT_LEVEL',\n    SET_LEVEL = 'SET_LEVEL'\n}\n\nexport interface LevelAction {\n    type: LevelActionType;\n    payload?: Level;\n}\n\nexport const initialLevel: Level = Level.Tutorial;\n\nexport const levelReducer = (state = initialLevel, action: LevelAction) => {\n    switch (action.type) {\n        case LevelActionType.RESET:\n            return initialLevel;\n\n        case LevelActionType.NEXT_LEVEL:\n            return Level[state + 1] ? (state + 1) : initialLevel;\n\n        case LevelActionType.SET_LEVEL:\n            return action.payload;\n        \n        default:\n            return state;\n    }\n}\n\nexport default levelReducer;\n","import { AnyAction } from 'redux';\nimport { RootActions } from './root.reducer';\n\nexport enum ResetActionType {\n    SET_RESET_STATE = 'SET_RESET_STATE'\n}\n\nexport const initialReset = false;\n\nexport const resetReducer = (state = initialReset, action: AnyAction): boolean => {\n    switch (action.type) {\n        case ResetActionType.SET_RESET_STATE:\n            return action.payload;\n\n        case RootActions.RESET:\n            return initialReset;\n\n        default:\n            return state;\n    }\n}\n\nexport default resetReducer;\n","export interface ScoreState {\n    level1: number;\n    level2: number;\n    level3: number;\n}\n\nexport enum ScoreActionType {\n    SET_SCORE = 'SET_SCORE',\n    RESET = 'RESET'\n}\n\nexport const initialScore: ScoreState = {\n    level1: 0,\n    level2: 0,\n    level3: 0\n}\n\nexport interface ScoreAction {\n    type: ScoreActionType,\n    payload: {\n        level: number;\n        score: number;\n    };\n}\n\nexport const scoreReducer = (state = initialScore, action: ScoreAction) => {\n    switch (action.type) {\n        case ScoreActionType.SET_SCORE:\n            return Object.assign({}, state, { [action.payload.level]: action.payload.score });\n        \n        case ScoreActionType.RESET:\n            return Object.assign({}, initialScore);\n\n        default:\n            return state;\n    }\n}","export interface Settings {\n    capacity: number;\n    fillRate: number;\n}\n\nexport const initialSettings: Settings = {\n    capacity: 400,\n    fillRate: 50\n}\n\nexport enum SettingsActionType {\n    SET_SETTINGS = 'SET_SETTINGS'\n}\n\nexport const settingsReducer = (state = initialSettings, action: { type: SettingsActionType, payload: Partial<Settings>}) => {\n    switch(action.type) {\n        case SettingsActionType.SET_SETTINGS:\n            return Object.assign({}, initialSettings, action.payload);\n\n        default:\n            return state;\n    }\n}","import { AnyAction } from 'redux';\nimport { RootActions } from './root.reducer';\n\nexport enum TimestampActionType {\n    SET_TIMESTAMP = 'SET_TIMESTAMP'\n}\n\nexport const initialTimestamp = Date.now().toString();\n\nexport const timestampReducer = (state = initialTimestamp, action: AnyAction): string => {\n    switch (action.type) {\n        case TimestampActionType.SET_TIMESTAMP:\n            return Date.now().toString();\n\n        case RootActions.RESET:\n            return initialTimestamp;\n\n        default:\n            return state;\n    }\n}\n\nexport default timestampReducer;\n","import { combineReducers } from 'redux';\nimport { buttonsReducer, ButtonsState, initialButtons } from './buttons.reducer';\nimport { fillsReducer, FillState, initialFills } from './fills.reducer';\nimport { initialLevel, Level, levelReducer } from './level.reducer';\nimport { initialReset, resetReducer } from './reset.reducer';\nimport { initialScore, scoreReducer, ScoreState } from './score.reducer';\nimport { initialSettings, Settings, settingsReducer } from './settings.reducer';\nimport { initialTimestamp, timestampReducer } from './timestamp.reducer';\n\nexport enum RootActions {\n    RESET = \"RESET\"\n}\n\nexport interface AppState {\n    buttons: ButtonsState;\n    fills: FillState;\n    level: Level;\n    reset: boolean;\n    score: ScoreState;\n    settings: Settings;\n    timestamp: string;\n}\n\nexport const initialState: AppState = {\n    buttons: initialButtons,\n    fills: initialFills,\n    level: initialLevel,\n    reset: initialReset,\n    score: initialScore,\n    settings: initialSettings,\n    timestamp: initialTimestamp\n}\n\nexport const rootReducer = combineReducers({\n    buttons: buttonsReducer,\n    fills: fillsReducer,\n    level: levelReducer,\n    reset: resetReducer,\n    score: scoreReducer,\n    settings: settingsReducer,\n    timestamp: timestampReducer\n  })\n\nexport default rootReducer;","let HIGHSCORE: HighScore;\nconst LOCAL_STORAGE_KEY = 'cocktail_mash_highscore';\n\nexport interface HighscoreEntry {\n    name: string;\n    score: number;\n    uuid: string;\n}\n\nexport interface HighScore {\n    entries: HighscoreEntry[];\n}\n\nconst compareFn = (a: HighscoreEntry, b: HighscoreEntry) => {\n    if (a.score > b.score) {\n        return -1;\n    } else if (a.score === b.score) {\n        return 0;\n    } else {\n        return 1;\n    }\n}\n\nexport const postHighScore = (entry: HighscoreEntry) => {\n    if (typeof HIGHSCORE === 'undefined') {\n        getHighScore();\n    }\n    HIGHSCORE.entries = HIGHSCORE.entries.concat(entry).sort(compareFn);\n    localStorage.setItem(LOCAL_STORAGE_KEY, JSON.stringify(HIGHSCORE));\n}\n\nexport const getHighScore = () => {\n    if (typeof HIGHSCORE === 'undefined') {\n        const initialValue = localStorage.getItem(LOCAL_STORAGE_KEY);\n        if (initialValue === null) {\n            HIGHSCORE = { entries: [] };\n            localStorage.setItem(LOCAL_STORAGE_KEY, JSON.stringify(HIGHSCORE));\n        } else {\n            HIGHSCORE = JSON.parse(initialValue);\n            HIGHSCORE.entries.sort(compareFn);\n        }\n    }\n    return HIGHSCORE;\n}\n\nexport const getPosition = (uuid: string) => {\n    return HIGHSCORE.entries.findIndex(entry => entry.uuid === uuid) + 1;\n}\n","import rootReducer from './root.reducer';\n\nexport * from './root.reducer';\nexport default rootReducer;\n","import * as React from 'react';\nimport { connect, DispatchProp } from 'react-redux';\n\nimport cx from 'classnames';\n\nimport { AppState, RootActions } from '../../reducers';\nimport { ButtonsActionType, ButtonsState } from '../../reducers/buttons.reducer';\nimport { Level } from '../../reducers/level.reducer';\nimport { ResetActionType } from '../../reducers/reset.reducer';\nimport { TimestampActionType } from '../../reducers/timestamp.reducer';\nimport './ButtonBar.css';\n\nexport class ButtonBar extends React.PureComponent<ButtonsState & { level: Level, resetState: boolean } & DispatchProp, {}> {\n\n    public handleKeyDown = (e: KeyboardEvent) => {\n        switch (e.key) {\n            case 'd':\n                this.props.dispatch({\n                    payload: {\n                        key: 'yellow',\n                        value: true\n                    },\n                    type: ButtonsActionType.SET_BUTTON\n                });\n                break;\n           \n            case 's':\n                this.props.dispatch({\n                    payload: {\n                        key: 'magenta',\n                        value: true\n                    },\n                    type: ButtonsActionType.SET_BUTTON\n                });\n                break;\n\n            case 'a':\n                this.props.dispatch({\n                    payload: {\n                        key: 'cyan',\n                        value: true\n                    },\n                    type: ButtonsActionType.SET_BUTTON\n                });\n                break;\n            default:\n                break;\n        }\n    }\n\n    public handleKeyUp = (e: KeyboardEvent) => {\n        switch (e.key) {\n            case 'o':\n                if (this.props.level === Level.HighscoreScreen) {\n                    console.log('highscore screen, resetting screen immediately');\n                    this.props.dispatch({\n                        type: TimestampActionType.SET_TIMESTAMP\n                    });\n                    this.props.dispatch({\n                        type: RootActions.RESET\n                    });\n                } else if (this.props.resetState === true) {\n                    console.log('cancel reset');\n                    this.props.dispatch({\n                        payload: false,\n                        type: ResetActionType.SET_RESET_STATE\n                    });\n                } else if (this.props.resetState === false) {\n                    console.log('initiating reset, confirm or cancel:');\n                    this.props.dispatch({\n                        payload: true,\n                        type: ResetActionType.SET_RESET_STATE\n                    });\n                }\n                break;\n\n            case 'j':\n                if (this.props.resetState === true) {\n                    console.log('reset confirm, resetting game');\n                    this.props.dispatch({\n                        type: TimestampActionType.SET_TIMESTAMP\n                    });\n                    this.props.dispatch({\n                        type: RootActions.RESET\n                    });\n                } else {\n                    this.props.dispatch({\n                        payload: {\n                            key: 'continue',\n                            value: true\n                        },\n                        type: ButtonsActionType.SET_BUTTON\n                    });\n                }\n                break;\n\n            case 'a':\n                this.props.dispatch({\n                    payload: {\n                        key: 'cyan',\n                        value: false\n                    },\n                    type: ButtonsActionType.SET_BUTTON\n                });\n                break;\n\n            case 's':\n                this.props.dispatch({\n                    payload: {\n                        key: 'magenta',\n                        value: false\n                    },\n                    type: ButtonsActionType.SET_BUTTON\n                });\n                break;\n\n            case 'd':\n                this.props.dispatch({\n                    payload: {\n                        key: 'yellow',\n                        value: false\n                    },\n                    type: ButtonsActionType.SET_BUTTON\n                });\n                break;\n            default:\n                break;\n        }\n    }\n\n    public componentDidMount() {\n        document.addEventListener('keydown', this.handleKeyDown);\n        document.addEventListener('keyup', this.handleKeyUp);\n    }\n\n    public componentWillUnmount() {\n        document.removeEventListener('keydown', this.handleKeyDown);\n        document.removeEventListener('keyup', this.handleKeyUp);\n    }\n\n    public render() {\n        return <div className=\"ButtonBar\">\n            <div className={cx(\"ButtonBar__Cyan\", {\n                \"ButtonBar__Cyan--active\": this.props.cyan\n            })}>a</div>\n            <div className={cx(\"ButtonBar__Magenta\", {\n                \"ButtonBar__Magenta--active\": this.props.magenta\n            })}>s</div>\n            <div className={cx(\"ButtonBar__Yellow\", {\n                \"ButtonBar__Yellow--active\": this.props.yellow\n            })}>d</div>\n            <div className={cx(\"ButtonBar__Continue\", {\n                \"ButtonBar__Continue--active\": this.props.continue\n            })}>continue: j</div>\n            <div className={cx(\"ButtonBar__Reset\", {\n                \"ButtonBar__Reset--active\": this.props.reset\n            })}>reset: o</div>\n        </div>;\n    }\n}\n\nconst mapStateToProps = (state: AppState) => {\n    return {\n      ...state.buttons,\n      level: state.level,\n      resetState: state.reset\n    }\n}\n\nexport default connect(mapStateToProps)(ButtonBar);\n","import ButtonBar from './ButtonBar';\nexport * from './ButtonBar';\nexport default ButtonBar;","export const SERVER_IP = process.env.REACT_APP_SERVER_IP || '';\nexport const SERVER_API_URL = `${SERVER_IP}/api/v1`;","import * as React from 'react';\nimport { connect, DispatchProp } from 'react-redux';\nimport io from 'socket.io-client';\nimport { SERVER_IP } from '../config';\nimport { AppState, RootActions } from '../reducers';\nimport { ButtonsActionType, ButtonsState } from '../reducers/buttons.reducer';\nimport { Level } from '../reducers/level.reducer';\nimport { ResetActionType } from '../reducers/reset.reducer';\nimport { TimestampActionType } from '../reducers/timestamp.reducer';\n\ninterface SocketHandlerProps {\n    buttons: ButtonsState;\n    level: Level,\n    reset: boolean;\n}\n\nclass SocketHandler extends React.PureComponent<SocketHandlerProps & DispatchProp> {\n    private socket: SocketIOClient.Socket | null = null;\n\n    public componentDidMount() {\n        console.log('attempting');\n        this.socket = io(SERVER_IP, {path: '/api/v1/socketio', transports: ['websocket']});\n        this.socket.on('init:states', (data: any) => {\n            console.log(\"init:states\", data);\n            this.props.dispatch({\n                payload: data,\n                type: ButtonsActionType.SET_STATE\n            });\n        });\n        this.socket.on('connect', (a: any) => {\n            console.log('connected');\n            this.registerHandlers();\n            \n        });\n        this.socket.on('key:states', (data: ButtonsState) => {\n            const reset = data.reset;\n            delete data.reset;\n\n            const continueVal = data.continue;\n\n            if (reset === true) {\n                delete data.continue;\n            }\n\n            if (this.props.level === Level.HighscoreScreen && reset === true) {\n                console.log('highscore screen, resetting screen immediately');\n                this.props.dispatch({\n                    type: TimestampActionType.SET_TIMESTAMP\n                });\n                this.props.dispatch({\n                    type: RootActions.RESET\n                });\n            } else if (reset === true && this.props.reset === true) {\n                console.log('Reset cancelled');\n                this.props.dispatch({\n                    payload: false,\n                    type: ResetActionType.SET_RESET_STATE\n                });\n            } else if (reset === true && this.props.reset === false) {\n                this.props.dispatch({\n                    payload: true,\n                    type: ResetActionType.SET_RESET_STATE\n                });\n                console.log('Init reset: confirm or cancel');\n            }\n\n            if (continueVal === true && this.props.reset === true) {\n                console.log('reset confirmed, resetting game');\n                this.props.dispatch({\n                    type: TimestampActionType.SET_TIMESTAMP\n                });\n                this.props.dispatch({\n                    type: RootActions.RESET\n                });\n            }\n            \n            this.props.dispatch({\n                payload: data,\n                type: ButtonsActionType.SET_STATE\n            });\n            \n\n            // console.log('event: key:states', data);\n        });\n\n        this.socket.on('disconnect', () => {\n            this.unregisterHandlers();\n        });\n    }\n\n    public componentWillUnmount() {\n        this.unregisterHandlers();\n    }\n\n    public render() {\n        return <></>;\n    }\n\n    private registerHandlers() {\n        // cleanup handlers\n    }\n\n    private unregisterHandlers() {\n        // setup handlers\n    }\n}\n\nconst mapStateToProps = (state: AppState) => {\n    return {\n        buttons: state.buttons,\n        level: state.level,\n        reset: state.reset\n    }\n}\n\nexport default connect(mapStateToProps)(SocketHandler);","// tslint:disable\nexport interface NameMap {\n    A: string[];\n    B: string[];\n    C: string[];\n    D: string[];\n    E: string[];\n    F: string[];\n    G: string[];\n    H: string[];\n    // I: string[],\n    // J: string[],\n    K: string[];\n    L: string[];\n    M: string[];\n    // N: string[],\n    O: string[];\n    P: string[];\n    // Q: string[],\n    R: string[];\n    S: string[];\n    T: string[];\n    // U: string[],\n    // V: string[],\n    W: string[];\n    // X: string[],\n    // Y: string[],\n    Z: string[];\n    [k: string]: string[];\n  }\n  \n  export const ANIMAL_NAMES: NameMap = {\n    A: ['Alligator', 'Alpaca', 'Antelope', 'Ape'],\n    B: ['Bat', 'Bear', 'Beaver', 'Bee', 'Bird', 'Butterfly'],\n    C: ['Camel', 'Cat', 'Chicken', 'Coyote', 'Crow'],\n    D: ['Deer', 'Dinosaur', 'Dog', 'Dolphin', 'Donkey', 'Duck'],\n    E: ['Eagle', 'Elephant', 'Emu'],\n    F: ['Falcon', 'Fish', 'Flamingo', 'Fly', 'Frog'],\n    G: ['Giraffe', 'Goat', 'Goose', 'Gorilla', 'Grasshopper'],\n    H: ['Hamster', 'Hedgehog', 'Hornet', 'Horse'],\n    K: ['Koala', 'Kangaroo'],\n    L: ['Leopard', 'Lion', 'Llama'],\n    M: ['Mole', 'Monkey', 'Moose', 'Mouse', 'Mule'],\n    O: ['Opossum', 'Owl'],\n    P: ['Panda', 'Parrot', 'Penguin', 'Pig', 'Pigeon'],\n    R: ['Rabbit', 'Raccoon', 'Rat', 'Raven', 'Reindeer'],\n    S: [\n      'Seal',\n      'Seastar',\n      'Shark',\n      'Sheep',\n      'Skunk',\n      'Snake',\n      'Spider',\n      'Squirrel',\n      'Swan'\n    ],\n    T: ['Termite', 'Tiger', 'Turkey', 'Turtle'],\n    W: ['Walrus', 'Wasp', 'Weasel', 'Whale', 'Wolf', 'Wombat'],\n    Z: ['Zebra']\n  };\n  \n  export const ADJECTIVES: NameMap = {\n    A: [\n      'Adorable',\n      'Adventurous',\n      'Acrobatic',\n      'Afraid',\n      'Aggressive',\n      'Agile',\n      'Amazing',\n      'Angry',\n      'Anxious',\n      'Ashamed',\n      'Awesome',\n      'Awful',\n      'Awkward'\n    ],\n    B: [\n      'Bad',\n      'Beautiful',\n      'Beloved',\n      'Best',\n      'Black',\n      'Bold',\n      'Brave',\n      'Brilliant',\n      'Busy'\n    ],\n    C: [\n      'Calm',\n      'Charming',\n      'Cheap',\n      'Cold',\n      'Concerned',\n      'Cool',\n      'Crazy',\n      'Creative',\n      'Critical',\n      'Curly',\n      'Cute'\n    ],\n    D: [\n      'Dangerous',\n      'Dark',\n      'Deadly',\n      'Delicious',\n      'Difficult',\n      'Digging',\n      'Direct',\n      'Dirty',\n      'Diving',\n      'Dizzy'\n    ],\n    E: ['Eager', 'Educated', 'Elegant', 'Epic', 'Excellent', 'Excited'],\n    F: [\n      'Fabulous',\n      'Fake',\n      'Fast',\n      'Fearless',\n      'Focused',\n      'Foolish',\n      'Fresh',\n      'Funky',\n      'Funny'\n    ],\n    G: ['Giant', 'Gifted', 'Good', 'Grand', 'Great', 'Grown', 'Grumpy'],\n    H: ['Hairy', 'Handsome', 'Happy', 'Heavy', 'Hot', 'Huge'],\n    K: ['Keen', 'Kind'],\n    L: ['Lame', 'Large', 'Lazy', 'Lean', 'Little', 'Lonely', 'Lovely', 'Loyal'],\n    M: ['Mad', 'Majestic', 'Major', 'Massive', 'Mean', 'Modern', 'Mysterious'],\n    O: ['Oily', 'Odd', 'Old', 'Optimistic', 'Ordinary', 'Outstanding'],\n    P: [\n      'Pale',\n      'Peaceful',\n      'Perfect',\n      'Phony',\n      'Pink',\n      'Polite',\n      'Poor',\n      'Positive',\n      'Pretty',\n      'Proud'\n    ],\n    R: ['Rare', 'Raw', 'Reckless', 'Remote', 'Rich', 'Rough', 'Royal', 'Rude'],\n    S: [\n      'Sad',\n      'Sarcastic',\n      'Scared',\n      'Scary',\n      'Secret',\n      'Sexy',\n      'Shiny',\n      'Silly',\n      'Sour',\n      'Spicy',\n      'Strong',\n      'Stylish',\n      'Super',\n      'Suspicious'\n    ],\n    T: ['Tasty', 'Tempting', 'Terrible', 'Thin', 'Tiny', 'Tough', 'Twin'],\n    W: [\n      'Wealthy',\n      'Weak',\n      'Weird',\n      'Wet',\n      'White',\n      'Wicked',\n      'Wild',\n      'Wise',\n      'Worst'\n    ],\n    Z: ['Zany', 'Zealous', 'Zigzag']\n  };\n  \n  export const getRandomName = () => {\n    const keys = Object.keys(ANIMAL_NAMES);\n    const randomKey = keys[(keys.length * Math.random()) << 0];\n  \n    const randomAnimal =\n      ANIMAL_NAMES[randomKey][\n        (ANIMAL_NAMES[randomKey].length * Math.random()) << 0\n      ];\n    const randomAdjective =\n      ADJECTIVES[randomKey][(ADJECTIVES[randomKey].length * Math.random()) << 0];\n  \n    return `${randomAdjective} ${randomAnimal}`;\n  };\n  \n  export default getRandomName;","import ResetButton from './ResetButton';\n\nexport * from './ResetButton';\nexport default ResetButton;","import * as React from 'react';\n\nimport './ResetButton.css';\n\nconst ResetButton = () => <svg width=\"50px\" height=\"50px\" viewBox=\"0 0 100 100\" style={{margin: '0 5px'}}>\n    <g id=\"Page-1\" stroke=\"none\" strokeWidth=\"1\" fill=\"none\" fillRule=\"evenodd\" strokeLinecap=\"round\" strokeLinejoin=\"round\">\n        <rect stroke=\"#000000\" strokeWidth=\"4\" fill=\"#ff454b\" x=\"2\" y=\"2\" width=\"96\" height=\"96\" rx=\"10\"/>\n        <text className=\"ResetButton__Text\" x=\"50\" y=\"80\">↻</text>\n    </g>\n</svg>;\n\nexport default ResetButton;\n","import cx from 'classnames';\nimport * as React from 'react';\nimport { connect } from 'react-redux';\n\nimport { v1 as uuidv1 } from 'uuid';\n\nimport { AppState } from '../../reducers';\nimport { getHighScore, getPosition, postHighScore } from '../../utils/highScore';\nimport getRandomName from '../../utils/randomName';\n\nimport ResetButton from '../../components/ResetButton';\nimport './HighscoreScreen.css';\n\ninterface HighscoreScreenState {\n    entries: any[];\n    position: number;\n    name: string;\n    totalEntries: number;\n    totalScore: number;\n    uuid: string;\n}\n\nclass HighscoreScreen extends React.PureComponent<any, HighscoreScreenState> {\n    constructor(props: any) {\n        super(props);\n\n        this.state = {\n            entries: [],\n            name: '',\n            position: 0,\n            totalEntries: 0,\n            totalScore: 0,\n            uuid: ''\n        }\n    }\n\n    public componentDidMount() {\n        const { score } = this.props;\n        const totalScore = Math.round(score.level1)\n                        + Math.round(score.level2)\n                        + Math.round(score.level3);\n        const name = getRandomName();\n        const uuid = uuidv1();\n        postHighScore({ name, uuid, score: totalScore });\n        const hs = getHighScore();\n        this.setState({\n            entries: hs.entries.slice(0, 10),\n            name,\n            position: getPosition(uuid),\n            totalEntries: hs.entries.length,\n            totalScore,\n            uuid,\n        });\n    }\n\n    public render() {\n        return <div className=\"HighscoreScreen\">\n            <div className=\"HighscoreScreen__Title\">Highscores</div>\n            <div className=\"HighscoreScreen__SubTitle\">({this.state.totalEntries} total)</div>\n\n            {this.state.entries.map((entry, index) => <div \n                    key={index} className={cx(\"HighscoreScreen__Row\", {\n                        'HighscoreScreen__Row--highlight': entry.uuid === this.state.uuid\n                    })}\n                >\n                <div>{index + 1}.</div>\n                <div>{entry.name}</div>\n                <div>{entry.score}</div>\n            </div>)}\n\n            {this.state.position > 10 && <div \n                    className=\"HighscoreScreen__Row HighscoreScreen__Row--highlight HighscoreScreen__Row--spacer\"\n                >\n                <div>{this.state.position}.</div>\n                <div>{this.state.name}</div>\n                <div>{this.state.totalScore}</div>\n            </div>}\n\n            <p style={{ display: 'flex', alignItems: 'center', justifyContent: 'center'}}>Press <ResetButton /> to play again</p>\n        </div>;\n    }\n}\n\nconst mapStateToProps = (state: AppState) => {\n    return {\n        continue: state.buttons.continue,\n        score: state.score\n    }\n}\n\nexport default connect(mapStateToProps)(HighscoreScreen);\n","import HighscoreScreen from './HighscoreScreen';\n\nexport * from './HighscoreScreen';\nexport default HighscoreScreen;\n","import * as React from 'react';\n\n/* tslint:disable:no-empty */\nexport const LoopContext = React.createContext({\n    destroy: (particleIndex: number) => {},\n    register: (callback: any) => {},\n    spawn: (node: React.ReactNode) => {},\n    unregister: (id: number) => {}\n});\n\nlet jobId = 0;\nlet particleId = 0;\n\ninterface LoopState {\n    particles: Map<number, React.ReactNode>\n}\n\nclass Loop extends React.PureComponent<{}, LoopState> {\n    private particleMap = new Map();\n    private loopMap = new Map();\n    private loopId: number | null = null;\n    private lastLoopRun: DOMHighResTimeStamp | null = null;\n    \n    constructor(props: any) {\n        super(props);\n\n        this.state = {\n            particles: new Map()\n        };\n    }\n\n    public componentWillUnmount() {\n        if (this.loopId) {\n            window.cancelAnimationFrame(this.loopId);\n        }\n    }\n\n    public componentDidMount() {\n        this.nextLoop();\n    }\n\n    public register = (callback: any) => {\n        this.loopMap.set(jobId, callback);\n        return jobId++;\n    };\n\n    public spawn = (...nodes: React.ReactNode[]) => {\n        for (const node of nodes) {\n            this.particleMap.set(particleId++, node);\n        }\n        this.setState({\n            particles: new Map(this.particleMap)\n        });\n    }\n\n    public unregister = (id: number) => {\n        if (this.loopMap.has(id)) {\n            this.loopMap.delete(id);\n        }\n    }\n\n    public destroy = (particleIndex: number) => {\n        this.particleMap.delete(particleIndex);\n        this.setState({\n            particles: new Map(this.particleMap)\n        });\n    }\n\n    public render() {\n        return <LoopContext.Provider value={{\n            destroy: this.destroy,\n            register: this.register,\n            spawn: this.spawn,\n            unregister: this.unregister\n        }}>\n            {this.renderParticles()}\n            {this.props.children}\n        </LoopContext.Provider>\n    }\n\n    private renderParticles = ()  => {\n        const particles: React.ReactNode[] = [];\n        this.particleMap.forEach((node, index) => {\n            particles.push(React.cloneElement(node, { key: index, particleIndex: index }));\n        });\n\n        return particles;\n    }\n\n    private performLoop = (timestamp: DOMHighResTimeStamp) => {\n        this.loopId = null;\n\n        this.loopMap.forEach(callback => {\n            callback(timestamp, timestamp - (this.lastLoopRun ? this.lastLoopRun : timestamp));\n        });\n\n        this.lastLoopRun = timestamp;\n        this.nextLoop();\n    }\n\n    private nextLoop = () => {\n        if (!this.loopId) {\n            this.loopId = window.requestAnimationFrame(this.performLoop);\n        }\n    }\n}\n\nexport default Loop;","import Glass from './Glass';\n\nexport * from './Glass';\nexport default Glass;\n","import * as React from 'react';\n\nimport './Glass.css';\n\nexport const Glass = (props: { fillPercent: number, fillColor: string }) => {\n\n    const transformY = 59-(243*Math.min(props.fillPercent, 107)/100);\n\n    const renderedFillColor = props.fillColor.trim() === 'rgba(0,0,0,1)' ? 'rgba(0,0,0,0)' : props.fillColor;\n\n    return <div className=\"Glass\">\n        <svg className=\"Glass__Back\" width=\"218px\" height=\"319px\" viewBox=\"0 0 218 319\" version=\"1.1\">\n            <g id=\"Page-1\" stroke=\"none\" strokeWidth=\"1\" fill=\"none\" fillRule=\"evenodd\">\n                <g id=\"gopher_game_glas\">\n                    <g id=\"glas_inhalt\">\n                        <path d=\"M13,302 C-9,280 4.1,16.6 4.1,16.6 C4.1,7.7 50.4,0.5 107.5,0.5 C164.6,0.5 210.9,7.7 210.9,16.6 C210.9,16.6 226.1,277 203.1,301 L204.1,298.8 C204.1,308.8 161.8,317 109.7,317 C57.6,317 12.1,309.1 12.1,299.1\" id=\"Path\" fill=\"#D3E3EF\"/>\n                    </g>\n                </g>\n            </g>\n        </svg>\n        <svg className=\"Glass__Filling\" width=\"218px\" height=\"319px\" viewBox=\"0 0 218 319\" version=\"1.1\" data-fillpercent={props.fillPercent}>\n            <g id=\"Page-1\" stroke=\"none\" strokeWidth=\"1\" fill=\"none\" fillRule=\"evenodd\">\n                <g id=\"gopher_game_glas\" style={{\n                    transform: `translate3d(0, ${transformY}px, 0)`\n                }}>\n                    <g id=\"glas_inhalt\">\n                        <rect id=\"CocktailGlassColor\" fill={renderedFillColor} x=\"10\" y=\"218\" width=\"197\" height=\"280\"/>\n                        <ellipse id=\"Oval\" stroke=\"#000000\" strokeWidth=\"2\" fill={renderedFillColor} cx=\"108\" cy=\"218\" rx=\"93\" ry=\"14\"/>\n                    </g>\n                </g>\n            </g>\n        </svg>\n        <svg className=\"Glass__Front\" width=\"218px\" height=\"319px\" viewBox=\"0 0 218 319\" version=\"1.1\">\n            <g id=\"Page-1\" stroke=\"none\" strokeWidth=\"1\" fill=\"none\" fillRule=\"evenodd\">\n                <g id=\"gopher_game_glas\">\n                    <g id=\"glas_hintergrund\">\n                        <rect id=\"Rectangle\" fill=\"#dad2a0\" x=\"7\" y=\"290\" width=\"203\" height=\"30\"/>\n                        <path d=\"M13,23 C13,23 8,245 15,277 C15,284.7 56.6,291 108,291 C159.4,291 201,284.7 201,277 C213,240 202,24 202,24 L210.8,16.6 C210.8,16.6 226,277 203,301 L204,298.8 C204,308.8 161.7,317 109.6,317 C57.5,317 12,309.1 12,299.1 L13,302 C-9,280 4.1,16.6 4.1,16.6\" id=\"Path\" fill=\"#D3E3EF\"/>\n                        <path d=\"M4.1,16.6 C4.1,7.7 50.4,0.5 107.5,0.5 C164.6,0.5 210.9,7.7 210.9,16.6 C210.9,25.5 164.6,32.7 107.5,32.7 C50.4,32.7 4.1,25.5 4.1,16.6 Z\" id=\"Path\" stroke=\"#000000\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\"/>\n                        <path d=\"M181,286 C195,289.2 204,294.3 204,298.8 C204,308.8 161.7,317 109.6,317 C57.5,317 12,309.1 12,299.1 C12,294.9 22.9,289.2 36,286\" id=\"Path\" stroke=\"#000000\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\"/>\n                        <path d=\"M4.1,16.6 C4.1,16.6 -9,280 13,302\" id=\"Path\" stroke=\"#000000\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\"/>\n                        <path d=\"M210.7,16.6 C210.7,16.6 226.1,277 203.1,301\" id=\"Path\" stroke=\"#000000\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\"/>\n                        <path d=\"M13,33.5 C13,33.5 8,245 15,277\" id=\"Path\" stroke=\"#000000\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\"/>\n                        <path d=\"M202.9,36.1 C202.9,36.1 213,240 201,277\" id=\"Path\" stroke=\"#000000\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\"/>\n                        <ellipse id=\"Oval\" stroke=\"#000000\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\" cx=\"108\" cy=\"277\" rx=\"93\" ry=\"14\"/>\n                    </g>\n                </g>\n            </g>\n        </svg>\n    </div>;\n}\n\nexport default Glass;\n","import cx from 'classnames';\nimport * as React from 'react';\n\nimport Glass from '../Glass';\nimport './CocktailGlass.css';\n\ninterface CocktailGlassProps {\n    fillColor: string;\n    fillPercent: number;\n    isMedium?: boolean;\n    isSmall?: boolean;\n}\nclass CocktailGlass extends React.PureComponent<CocktailGlassProps, {}> {\n    public static defaultProps: CocktailGlassProps = {\n        fillColor: 'skyblue',\n        fillPercent: 50,\n        isMedium: false,\n        isSmall: false\n    };\n\n    public render() {\n        return <>\n            <div className={cx('CocktailGlass', {\n                'CocktailGlass--medium': this.props.isMedium,\n                'CocktailGlass--small': this.props.isSmall\n            })}>\n                <Glass fillColor={this.props.fillColor} fillPercent={this.props.fillPercent} />\n            </div>\n        </>;\n    }\n}\n\nexport default CocktailGlass;","import CocktailGlass from './CocktailGlass';\n\nexport * from './CocktailGlass';\nexport default CocktailGlass;","import Tap from './Tap';\nexport * from './Tap';\nexport default Tap;","import * as React from 'react';\n\nimport './Tap.css';\n\nconst Tap = (props: { color: string }) => <div className=\"Tap\">\n    <svg className=\"Tap__Front\" width=\"178px\" height=\"208px\" viewBox=\"0 0 178 208\" version=\"1.1\">\n        <g id=\"Page-1\" stroke=\"none\" strokeWidth=\"1\" fill=\"none\" fillRule=\"evenodd\">\n            <path d=\"M153.4,141.5 C158.4,136.05 150.29,144.83 167.51,128.5 C168.84,127.24 172.13,122.91 172.13,120.73 L171.25,121.73 C171.502494,121.092805 171.637996,120.415294 171.65,119.73 C171.65,108.48 135.18,99.35 90.18,99.35 C45.18,99.35 8.71,108.48 8.71,119.73 C8.71,121.86 10.02,123.91 12.44,125.84 C12.44,125.91 12.52,125.99 12.56,126.05 C22.37,141.5 19.22,138.05 24.12,143.35\" id=\"Path\" stroke=\"#000000\" strokeWidth=\"2\" fill=\"#D6E1E8\"/>\n            <path d=\"M22,138.49 C22,129.11 51.77,121.49 88.48,121.49 C125.19,121.49 154.95,129.1 154.95,138.49 C154.95,147.88 125.19,155.49 88.48,155.49 C51.77,155.49 22,147.87 22,138.49 Z\" id=\"Path\" stroke=\"#000000\" strokeWidth=\"2\" fill=\"#D6E1E8\"/>\n            <path d=\"M165.58,4.22 C186.84,107.05 171.9,120.45 171.9,120.45 C171.8,117.9 163,97 87.12,98.91 C11.24,100.82 8.71,119.64 8.71,119.64 C8.71,119.64 -10.45,102.43 15.26,1\" id=\"Path\" stroke=\"#000000\" strokeWidth=\"2\" fill=\"#F2F2F2\" strokeLinecap=\"round\" strokeLinejoin=\"round\"/>\n            <path d=\"M170.34,26.35 C80.24,0.76 9.87,24.75 9.87,24.75 C1.24,60 2.94,83.75 2.94,83.75 C2.94,83.75 96.77,51.38 176.74,90.29 L170.34,26.35 Z\" id=\"Path\" stroke=\"#000000\" strokeWidth=\"2\" fill={props.color}/>\n            <path d=\"M123,198.72 C123,193.91 108.67,190 91,190 C73.33,190 59,193.91 59,198.72\" id=\"Path\" stroke=\"#000000\" strokeWidth=\"2\"/>\n            <path d=\"M132,193.25 C131.82,191.75 134.78,190.64 133.85,188.59 C133.21,187.17 130.47,186.59 131.47,184.59 C132.248073,183.251539 133.43685,182.199524 134.86,181.59 C135.66,181.16 137.03,180.93 137.13,179.75 C137.4,176.16 132.58,177.36 132.42,174.09 C132.3,171.48 135.99,171.79 136.56,169.99 C137.56,166.67 131.45,167.21 131.12,164.61 C130.98,163.5 132.21,162.88 132.95,162.48 C134.61,161.6 137.08,159.42 135.95,156.99 C135.3,155.55 132.19,155.99 131.23,154.27 C130.12352,152.630971 130.532578,150.407831 132.15,149.27 C133.02,148.7 134.65,147.9 134.81,146.6 C135.07,144.45 132.27,142.17 130.68,142.4 C129.87,145.4 137.49,130.4 90.49,131.4 C43.49,132.4 49.15,142.8 49.15,142.8 C49.69,142.22 48,143.33 47.74,143.55 C46.74,144.35 44.99,145.91 45.47,147.49 C46.22,149.96 51.36,148.65 51.11,151.82 C51,153.3 48.11,154.82 47.36,155.91 C47.12,156.26 46.36,157.73 46.77,158.22 C48,159.8 52.58,158.14 52.22,161.08 C51.97,163.18 47,165.08 48.11,167.57 C49.11,169.84 53.17,167.12 53.41,170.51 C53.59,173.01 48.75,174.51 49.53,177.08 C50.15,179.08 54.04,178.17 54.17,180.9 C54.17,181.7 52.88,182.37 52.41,182.78 C51.13,183.92 46.41,192.57 49.99,193.9 C49.99,193.9 55.99,181.9 93.99,182.9 C126.05,183.84 132,193.25 132,193.25 Z\" id=\"Path\" stroke=\"#000000\" strokeWidth=\"2\" fill=\"#E2E2E2\" strokeLinecap=\"round\" strokeLinejoin=\"round\"/>\n            <path d=\"M51.9,153.08 C54.72,150.08 52.17,152.74 62.41,148.52 C69.57,145.52 79.33,145.05 86.87,146.58\" id=\"Path\" stroke=\"#000000\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\"/>\n            <path d=\"M52.78,162.68 C52.52,162.58 55.78,160.94 56.52,160.68 C59.04,159.68 61.37,158.82 63.94,158.08 C71.41,155.93 79.81,152.92 87.64,154.03\" id=\"Path\" stroke=\"#000000\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\"/>\n            <path d=\"M53.43,172.18 C56.1,169.32 53.67,171.86 63.5,168.18 C72.86,164.67 83.01,162.66 92.82,163.54\" id=\"Path\" stroke=\"#000000\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\"/>\n            <path d=\"M54,183.5 C57.51,179.75 54.6,182.82 67.15,177.5 C70.71,176 75.23,175.64 79,175.27\" id=\"Path\" stroke=\"#000000\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\"/>\n            <path d=\"M122.25,200.06 C121.97705,200.434005 121.975623,200.941137 122.246464,201.316672 C122.517304,201.692207 122.998958,201.850935 123.44,201.71 C129.36,199.77 132.92,197.3 132.92,194.59 C132.92,188.42 114.36,183.42 91.48,183.42 C85.7716988,183.408195 80.0679226,183.74214 74.4,184.42 C60,186.16 50,190.06 50,194.59 C50,197.11 53.07,199.43 58.26,201.29 C58.6362931,201.45983 59.0801263,201.341815 59.3223718,201.007516 C59.5646174,200.673217 59.5385599,200.214701 59.26,199.91 C57.31,197.47 58.26,193.91 74,191 C84.9287192,189.229024 96.0712808,189.229024 107,191 C123.11,193.88 124.21,197.5 122.25,200.06 Z\" id=\"Path\" stroke=\"#000000\" strokeWidth=\"2\" fill=\"#E2E2E2\" strokeLinecap=\"round\" strokeLinejoin=\"round\"/>\n        </g>\n    </svg>\n    <svg className=\"Tap__Back\" width=\"178px\" height=\"208px\" viewBox=\"0 0 178 208\" version=\"1.1\">\n        <g id=\"Page-1\" stroke=\"none\" strokeWidth=\"1\" fill=\"none\" fillRule=\"evenodd\">\n            <path d=\"M59,199 C59,194.58 73.33,191 91,191 C108.67,191 123,194.58 123,199 C123,203.42 108.67,207 91,207 C73.33,207 59,203.42 59,199 Z\" id=\"Boden\" stroke=\"#000000\" strokeWidth=\"2\" fill=\"#5B5B63\"/>\n        </g>\n    </svg>\n</div>;\n\nexport default Tap;","import ColorTap from './ColorTap';\n\nexport * from './ColorTap';\nexport default ColorTap;\n","import cx from 'classnames';\nimport * as React from 'react';\nimport Tap from '../Tap';\n\nimport './ColorTap.css';\n\ninterface ColorTapProps {\n    active?: string;\n}\n\ninterface ColorTapState {\n    lastColor: string;\n}\n\nclass ColorTap extends React.Component<ColorTapProps, ColorTapState> {\n   \n    constructor(props: ColorTapProps) {\n        super(props);\n        this.state = {\n            lastColor: 'cyan'\n        };\n    }\n\n    // keep last active color\n    public componentDidUpdate(prevProps: ColorTapProps, prevState: ColorTapState) {\n        if (typeof this.props.active !== 'undefined' && this.props.active !== prevProps.active && this.state.lastColor !== this.props.active) {\n            this.setState({\n                lastColor: this.props.active!\n            });\n        }\n    }\n\n    public render() {\n        const classNames = cx('ColorTap', `ColorTap--${this.state.lastColor}`);\n\n        return <div className={classNames}>\n            <Tap color={this.state.lastColor}/>\n        </div>;\n    }\n}\n\nexport default ColorTap;","import Gopher from './Gopher';\n\nexport * from './Gopher';\nexport default Gopher;\n","import cx from 'classnames';\nimport * as React from 'react';\n\nimport './Gopher.css';\n\nconst Gopher = (props: { reach?: boolean, speechBubble?: any } = { reach: true }) => {\n    return <div>\n        {props.speechBubble}\n        <span className=\"Gopher__Wrapper\">\n            <span className={cx(\"Gopher\", { \"Gopher--reaching\": props.reach })}>\n                <img alt=\"\" className=\"Gopher__Frame\" src=\"/images/Gopher__Frame.png\"/>\n                <img alt=\"\" className=\"Gopher__LeftArm\" src=\"/images/Gopher__LeftArm.png\"/>\n                <img alt=\"\" className=\"Gopher__RightArm\" src=\"/images/Gopher__RightArm.png\"/>\n                <img alt=\"\" className=\"Gopher__Eyes--closed\" src=\"/images/Gopher__Eyes--closed.png\"/>\n            </span>\n        </span>\n    </div>;\n}\n\nexport default Gopher;","import ContinueButton from './ContinueButton';\n\nexport * from './ContinueButton';\nexport default ContinueButton;","import * as React from 'react';\n\nimport './ContinueButton.css';\n\nconst ContinueButton = () => <svg width=\"50px\" height=\"50px\" viewBox=\"0 0 100 100\" style={{margin: '0 5px'}}>\n    <g id=\"Page-1\" stroke=\"none\" strokeWidth=\"1\" fill=\"none\" fillRule=\"evenodd\" strokeLinecap=\"round\" strokeLinejoin=\"round\">\n        <rect stroke=\"#000000\" strokeWidth=\"4\" fill=\"#5b96ff\" x=\"2\" y=\"2\" width=\"96\" height=\"96\" rx=\"10\"/>\n        \n    </g>\n    <text className=\"ContinueButton__Text\" x=\"50\" y=\"70\">→</text>\n</svg>;\n\nexport default ContinueButton;\n","import ButtonLegend from './ButtonLegend';\nexport * from './ButtonLegend';\nexport default ButtonLegend;","import * as React from 'react';\n\nimport ContinueButton from '../ContinueButton';\nimport ResetButton from '../ResetButton';\n\nimport './ButtonLegend.css';\n\nconst ButtonLegend = (props: { continue?: string, reset?: string }) => {\n    return <div className=\"ButtonLegend\">\n        <ResetButton />\n        = {props.reset ? props.reset : 'Abort Game to Training'}\n        <ContinueButton />\n        = {props.continue ? props.continue : 'Hand over Drink'}\n    </div>;\n};\n\nexport default ButtonLegend;\n","import * as React from 'react';\nimport { connect, DispatchProp } from 'react-redux';\n\nimport { AppState } from '../../reducers';\nimport { ButtonsActionType } from '../../reducers/buttons.reducer';\nimport { FillActionType } from '../../reducers/fills.reducer';\nimport { LevelActionType } from '../../reducers/level.reducer';\n\nimport ButtonLegend from '../ButtonLegend';\n\nimport './Modal.css';\n\ninterface ModalProps extends DispatchProp {\n    continue: boolean;\n    prompt: boolean \n}\n\nclass Modal extends React.PureComponent<ModalProps, { secondsLeft: number }> {\n    private timer: any;\n    constructor(props: any) {\n        super(props);\n        this.state = {\n            secondsLeft: 5\n        };\n    }\n    public componentDidMount() {\n        if (this.props.prompt) {\n            this.props.dispatch({\n                payload: {\n                    key: 'continue',\n                    value: false\n                },\n                type: ButtonsActionType.SET_BUTTON\n            });\n        } else {\n            this.timer = setInterval(() => {\n                if (this.state.secondsLeft > 0) {\n                    this.setState((state) => ({\n                        secondsLeft: state.secondsLeft -1\n                    }));\n                } else {\n                    this.props.dispatch({\n                        type: LevelActionType.NEXT_LEVEL\n                    });\n                }\n            }, 1000);\n        }\n    }\n\n    public componentDidUpdate(prevProps: ModalProps) {\n        if (this.props.prompt && prevProps.continue === false && this.props.continue === true) {\n            this.props.dispatch({\n                type: LevelActionType.NEXT_LEVEL\n            });\n        }\n    }\n\n    public componentWillUnmount() {\n        this.props.dispatch({\n            type: FillActionType.RESET_FILL\n        });\n\n        this.props.dispatch({\n            payload: {\n                key: 'continue',\n                value: false\n            },\n            type: ButtonsActionType.SET_BUTTON\n        });\n\n        if (this.timer) {\n            clearInterval(this.timer);\n            this.timer = null;\n        }\n    }\n    public render() {\n        return <div className=\"Modal__Wrapper\">\n            <div className=\"Modal\">\n                {this.props.children}\n\n                {this.props.prompt\n                    ? <ButtonLegend continue=\"Continue\"/>\n                    : <p>Next level in {this.state.secondsLeft} seconds</p>\n                }\n            </div>\n            <div className=\"Modal__Backdrop\"/>\n        </div>;\n    }\n}\n\nconst mapStateToProps = (state: AppState) => {\n    return {\n        continue: state.buttons.continue,\n    }\n}\n\nexport default connect(mapStateToProps)(Modal);\n","import Modal from './Modal';\n\nexport * from './Modal';\nexport default Modal;","import SpeechBubble from './SpeechBubble';\nexport * from './SpeechBubble';\nexport default SpeechBubble;","import * as React from 'react';\n\nimport './SpeechBubble.css';\n\nconst SpeechBubble = (props: any) => <div className=\"SpeechBubble\" style={{ display: 'flex', alignItems: 'center', justifyContent: 'center'}}>\n    {props.children}\n</div>;\n\nexport default SpeechBubble;","import * as React from 'react';\n\nconst Drop = (props: { color: string }) => {\n    // const type = 1 // Math.floor(Math.random() * 8);\n\n    const filename = `/images/Drop1_${props.color}.png`;\n\n    return <img alt=\"0\" width=\"45px\" style={{marginLeft: \"-10px\"}} src={filename}/>;\n    // switch(type) {\n    //     case 1:\n    //         const filename = `assets/images/Drop1_${props.color}.png`;\n    //         return <img src={filename}/>;\n    //     case 2:\n    //         return <svg width=\"50px\" height=\"67px\" viewBox=\"0 0 50 67\" version=\"1.1\">\n    //             <g id=\"Page-1\" stroke=\"none\" strokeWidth=\"1\" fill=\"none\" fillRule=\"evenodd\">\n    //                 <g id=\"gopher_game-04\" transform=\"translate(-83.000000, -343.000000)\" fill={props.color} stroke=\"#000000\" strokeWidth=\"2\">\n    //                     <path d=\"M112.82,345.78 C109.06,342.23 102.28,345.24 99.06,350 C89.65,363.91 76.34,385.72 92.31,401.69 C106.9,416.27 126.76,403.82 131.08,386.52 C135.4,369.22 123.9,356.23 112.82,345.78 Z\" id=\"Path\"/>\n    //                 </g>\n    //             </g>\n    //         </svg>;\n    //     case 3:\n    //         return <svg width=\"58px\" height=\"72px\" viewBox=\"0 0 58 72\" version=\"1.1\">\n    //             <g id=\"Page-1\" stroke=\"none\" strokeWidth=\"1\" fill=\"none\" fillRule=\"evenodd\">\n    //                 <g id=\"gopher_game-04\" transform=\"translate(-50.000000, -367.000000)\" fill={props.color} stroke=\"#000000\" strokeWidth=\"2\">\n    //                     <path d=\"M73.39,368.18 C79.17,364.43 120.66,414.85 101.76,431.39 C84.33,446.63 59.19,432.89 52.88,413.97 C47.6,398.14 61,376.18 73.39,368.18 Z\" id=\"Path\"/>\n    //                 </g>\n    //             </g>\n    //         </svg>;\n    //     case 4:\n    //         return <svg width=\"53px\" height=\"74px\" viewBox=\"0 0 53 74\" version=\"1.1\">\n    //             <g id=\"Page-1\" stroke=\"none\" strokeWidth=\"1\" fill=\"none\" fillRule=\"evenodd\">\n    //                 <g id=\"gopher_game-04\" transform=\"translate(-73.000000, -471.000000)\" fill={props.color} stroke=\"#000000\" strokeWidth=\"2\">\n    //                     <path d=\"M99.56,472.72 C110.94,486.72 125.51,501.94 124.28,520.47 C123.91,526.05 120.51,531.1 116.97,535.08 C105.53,547.95 89.66,544.43 79.33,531.15 C66.49,514.64 82.92,501.57 91.13,487.89 C93,484.77 98.73,471.7 99.56,472.72 Z\" id=\"Path\"/>\n    //                 </g>\n    //             </g>\n    //         </svg>;\n    //     case 5:\n    //         return <svg width=\"33px\" height=\"57px\" viewBox=\"0 0 33 57\" version=\"1.1\">\n    //             <g id=\"Page-1\" stroke=\"none\" strokeWidth=\"1\" fill=\"none\" fillRule=\"evenodd\">\n    //                 <g id=\"gopher_game-04\" transform=\"translate(-86.000000, -681.000000)\" fill={props.color} stroke=\"#000000\" strokeWidth=\"2\">\n    //                     <path d=\"M103.19,682.77 C100.49,688.4 103.08,683.53 94.67,694.04 C89.06,701.04 85.99,713.98 87.52,723.17 C89.84,737.08 105.03,742.17 113.9,730.31 C121.35,720.39 117.3,706.12 111.71,696.79 C109.11,692.46 106.25,688.08 104.01,683.6 C103.4,682.38 103.53,682.05 103.19,682.77 Z\" id=\"Path\"/>\n    //                 </g>\n    //             </g>\n    //         </svg>;\n    //     case 6:\n    //         return <svg width=\"45px\" height=\"88px\" viewBox=\"0 0 45 88\" version=\"1.1\">\n    //             <g id=\"Page-1\" stroke=\"none\" strokeWidth=\"1\" fill=\"none\" fillRule=\"evenodd\">\n    //                 <g id=\"gopher_game-04\" transform=\"translate(-73.000000, -804.000000)\" fill={props.color} stroke=\"#000000\" strokeWidth=\"2\">\n    //                     <path d=\"M98.71,806.23 C89.92,824.93 72.33,841.69 74.8,864.06 C77.8,891.06 103.7,903.14 114.23,874.91 C119.99,859.48 111.05,842.38 106.23,828.37 C104.39,823.05 101.69,818.83 100.75,813.01 C100.48,811.52 100.26,803 98.71,806.23 Z\" id=\"Path\"/>\n    //                 </g>\n    //             </g>\n    //         </svg>;\n    //     case 7:\n    //         return <svg width=\"55px\" height=\"78px\" viewBox=\"0 0 55 78\" version=\"1.1\">\n    //             <g id=\"Page-1\" stroke=\"none\" strokeWidth=\"1\" fill=\"none\" fillRule=\"evenodd\">\n    //                 <g id=\"gopher_game-04\" transform=\"translate(-51.000000, -603.000000)\" fill={props.color} stroke=\"#000000\" strokeWidth=\"2\">\n    //                     <path d=\"M75.91,605 C65.96,611 49.15,641 52.62,654.22 C56.38,668.52 78.89,686.05 93.84,676.41 C117.17,661.35 95.11,635.34 85.06,620.41 C82.38,616.41 79.39,602.88 75.91,605 Z\" id=\"Path\"/>\n    //                 </g>\n    //             </g>\n    //         </svg>;\n    //     default:\n    //         return <svg width=\"38px\" height=\"81px\" viewBox=\"0 0 38 81\" version=\"1.1\">\n    //             <g id=\"Page-1\" stroke=\"none\" strokeWidth=\"1\" fill=\"none\" fillRule=\"evenodd\">\n    //                 <g id=\"gopher_game-04\" transform=\"translate(-103.000000, -752.000000)\" fill={props.color} stroke=\"#000000\" strokeWidth=\"2\">\n    //                     <path d=\"M118.25,758.56 C118.25,780.38 99.99,793.05 105.11,814.13 C108,826.05 120.27,833.84 129.94,830.85 C137.81,828.41 139.94,816.14 139.43,807.85 C138.21,788.18 118.25,737.63 118.25,758.56 Z\" id=\"Path\"/>\n    //                 </g>\n    //             </g>\n    //         </svg>;\n    // }    \n}\n\n\nexport default Drop;","import * as React from 'react';\nimport { connect } from 'react-redux';\n\nimport { LoopContext } from '../Loop';\n\nimport { FillActionType } from '../../reducers/fills.reducer';\nimport Drop from '../Drop';\nimport './WaterParticle.css';\n\ninterface WaterParticleProps {\n    posX: number;\n    posY: number;\n    color: string;\n    incrementColor: (buttonKey: string, value: number) => void;\n    fillValue: number;\n    particleIndex?: number;\n}\n\ninterface WaterParticleState {\n    // will be random\n    isInvisible: boolean;\n    size: number;\n    offsetX: number;\n\n    targetX: number;\n    targetY: number;\n}\n\nconst defaultProps: WaterParticleProps  = {\n    color: 'skyblue',\n    fillValue: 0,\n    incrementColor: () => { /* empty */ },\n    posX: 640,\n    posY: 140\n}\n\nclass WaterParticle extends React.PureComponent<WaterParticleProps, WaterParticleState> {\n    public static defaultProps = defaultProps;\n    public static contextType = LoopContext;\n\n    constructor(props: WaterParticleProps) {\n        super(props);\n\n        this.state = {\n            // this can be used to show only certain amounts of drops, if it becomes too crowded\n            isInvisible: false, //Math.floor(Math.random() * 100) < 70,\n            offsetX: Math.random()*20 - 10,\n            size: 10 + Math.random() *20,\n            targetX: this.props.posX,\n            targetY: this.props.posY + 20 * ( Math.random()*2 - 1)\n        };\n    }\n\n    public componentDidMount() {\n        setTimeout(() => {\n            this.setState({\n                targetY: 600\n            });\n        },10);\n        \n\n        setTimeout(() => {\n            this.context.destroy(this.props.particleIndex);\n            this.props.incrementColor(this.props.color, this.props.fillValue);\n        }, 400);\n    }\n\n    public render() {\n        return <span className=\"WaterParticle\" style={{\n            transform: `translate3d(${this.state.targetX - this.state.size / 2 + this.state.offsetX}px, ${this.state.targetY}px, 0)`,\n        }}>\n            {!this.state.isInvisible && <Drop color={this.props.color}/>}\n        </span>\n    }\n}\n\nconst mapDispatchToProps = (dispatch: any) => {\n    return {\n        incrementColor: (buttonKey: string, value: number) => {\n            dispatch({\n                payload: {\n                    key: buttonKey,\n                    value\n                },\n                type: FillActionType.INCREMENT\n            });\n        }\n      }\n    }\n\nexport default connect(null, mapDispatchToProps)(WaterParticle);","import WaterParticle from './WaterParticle';\n\nexport * from './WaterParticle';\nexport default WaterParticle;","import { FillState } from '../reducers/fills.reducer';\nimport { RGBColor } from './Color';\n\nexport const calculateFillColor = (fills: FillState): RGBColor => {\n    // color mixing logic goes here\n    // cyan: 00 FF FF\n    // magenta: FF 00 FF\n    // yellow: FF FF 00\n    // white: FF FF FF\n    /**\n     * example:\n     * 1x FF ED 00  // 255 237   0\n     * 2x 00 ED FF  //   0 237 255\n     * 1x FF FF FF  // 255 255 255\n     *  =\n     *    80 F2 BF  // 128 242 191 \n     */\n    const sumTotal = fills.cyan + fills.magenta + fills.yellow;\n    const ratios = {\n        cyan: fills.cyan / sumTotal || 0,\n        magenta: fills.magenta / sumTotal || 0,\n        yellow: fills.yellow / sumTotal || 0\n    };\n    const redValue = Math.round((ratios.magenta + ratios.yellow) * 255);\n    const greenValue = Math.round((ratios.cyan + ratios.yellow) * 255);\n    const blueValue = Math.round((ratios.cyan + ratios.magenta) * 255);\n    return {\n        blue: blueValue,\n        green: greenValue,\n        red: redValue\n    }\n}","export interface RGBColor {\n    red: number;\n    green: number;\n    blue: number;\n}\n\nexport const toColorString = (color: RGBColor) => {\n    return `rgba(${color.red},${color.green},${color.blue},1)`;\n}\n","import { RGBColor } from './Color';\n\nexport const COLOR_DISTANCE_MAX = Math.sqrt(195075);\nexport const COLOR_DISTANCE_ZERO = 150;\n\n// calculate euclidean color distance\nexport const colorDistance = (color1: RGBColor, color2: RGBColor): number => {\n    return Math.sqrt(\n        Math.pow(color1.red - color2.red, 2)\n        + Math.pow(color1.green - color2.green, 2)\n        + Math.pow(color1.blue - color2.blue, 2)\n    );\n}\n\nexport const colorDistanceNormalized = (color1: RGBColor, color2: RGBColor): number => {\n    const distance = colorDistance(color1, color2);\n\n    if (distance > COLOR_DISTANCE_ZERO) {\n        return 1;\n    } else {\n        return distance/COLOR_DISTANCE_ZERO;\n    }\n\n    // return colorDistance(color1, color2)/COLOR_DISTANCE_MAX;\n}\n","import { calculateFillColor } from './calculateFillColor';\n\nconst shuffle = (a: any[]) => {\n    for (let i = a.length - 1; i > 0; i--) {\n        const j = Math.floor(Math.random() * (i + 1));\n        [a[i], a[j]] = [a[j], a[i]];\n    }\n    return a;\n}\n\nexport const calcTargetColor1 = (colors: string[]) => {\n    return calculateFillColor({\n        [colors[0]]: 60,\n        [colors[1]]: 30,\n        [colors[2]]: 10\n    } as any);\n}\n\nexport const calcTargetColor2 = (colors: string[]) => {\n    return calculateFillColor({\n        [colors[0]]: 90,\n        [colors[1]]: 50,\n        [colors[2]]: 30\n    } as any);\n}\n\nexport const calcTargetColor3 = (colors: string[]) => {\n    return calculateFillColor({\n        [colors[0]]: 40,\n        [colors[1]]: 20,\n        [colors[2]]: 10\n    } as any);\n}\n\nexport const getShuffledColors = () => shuffle(['cyan', 'magenta', 'yellow']);\n","import { SERVER_API_URL } from '../config';\nimport { FillState } from '../reducers/fills.reducer';\nimport { Level } from '../reducers/level.reducer';\n\nexport const postSpill = () => {\n    fetch(`${SERVER_API_URL}/spilled`, {\n        method: \"POST\"\n    }).then(() => {\n        //\n    });\n}\n\nexport const postLevelStats = (levelStats: FillState & { level: Level, points: number }) => {\n    fetch(`${SERVER_API_URL}/stats/stages`, {\n        body: JSON.stringify(levelStats),\n        // headers: {\n        //     'Accept': 'application/json',\n        //     'Content-Type': 'application/json'\n        // },\n        method: \"POST\",\n    }).then(() => {\n        //\n    });\n}\n\nexport const postFinalScore = (levelStats: { points: number }) => {\n    fetch(`${SERVER_API_URL}/stats`, {\n        body: JSON.stringify(levelStats),\n        method: \"POST\",\n    }).then(() => {\n        //\n    });\n}\n","import * as React from 'react';\n\nexport const ColorHintTutorial = (props: any) => {\n    return <div className=\"ColorHint\">\n        <svg viewBox=\"0 0 283 485\" version=\"1.1\">\n            <g id=\"Page-1\" stroke=\"none\" strokeWidth=\"1\" fill=\"none\" fillRule=\"evenodd\">\n                <path d=\"M43.68,34.72 L239.34,34.72 C262.9,34.72 282,56.16 282,82.61 L282,436.11 C282,462.56 262.9,484 239.34,484 L43.68,484 C20.12,484 1,462.56 1,436.11 L1,82.61 C1,56.16 20.12,34.72 43.68,34.72 Z\" id=\"Path\" stroke=\"#020202\" strokeWidth=\"2\" fill=\"#BFB078\"/>\n                <path d=\"M26,53.15 L256.25,53.15 C262.37,53.15 267.33,57.84 267.33,63.62 L267.33,449.87 C267.33,455.65 262.33,460.34 256.25,460.34 L26,460.34 C19.87,460.34 14.91,455.65 14.91,449.87 L14.91,63.62 C14.91,57.84 19.87,53.15 26,53.15 Z\" id=\"Path\" stroke=\"#000000\" strokeWidth=\"2\" fill=\"#FFFFFF\" strokeLinecap=\"round\" strokeLinejoin=\"round\"/>\n                <path d=\"M81.18,62.91 L205.29,63.01 C205.29,63.01 210.17,30.11 165.79,23.56 C165.79,23.56 168.38,0.79 142.37,1.18 C116.66,1.58 114.65,20.28 116.51,23.35 C118.37,26.42 79.05,31.82 81.18,62.91 Z\" id=\"Path\" stroke=\"#000000\" strokeWidth=\"2\" fill=\"#898588\" strokeLinecap=\"round\" strokeLinejoin=\"round\"/>\n                <path d=\"M133.59,18.79 C133.59,14.65 137.52,11.3 142.36,11.3 C147.2,11.3 151.12,14.65 151.12,18.79 C151.12,22.93 147.2,26.28 142.36,26.28 C137.52,26.28 133.59,22.92 133.59,18.79 Z\" id=\"Path\" stroke=\"#000000\" strokeWidth=\"2\" fill=\"#FFFFFF\" strokeLinecap=\"round\" strokeLinejoin=\"round\"/>\n                <path d=\"M122.85,329.61 C122.85,326.66 103.73,324.27 80.13,324.27 C56.53,324.27 37.41,326.66 37.41,329.61 C37.41,329.61 34.41,408.61 42.06,423.15 C42.2442802,423.715221 42.5923399,424.212947 43.06,424.58 L43.21,424.72 L43.48,424.96 C48.1,428.43 62.97,430.96 80.63,430.96 C97.63,430.96 112.08,428.6 117.24,425.32 L117.24,425.39 C129.39,421.27 122.85,329.61 122.85,329.61 Z\" id=\"Path\" fill=\"#D3E3EF\"/>\n                <path d=\"M243.59,328.52 C243.59,325.57 224.46,323.18 200.87,323.18 C177.28,323.18 158.15,325.57 158.15,328.52 C158.15,328.52 155.09,407.52 162.79,422.05 C162.98054,422.612076 163.327442,423.108146 163.79,423.48 C163.837469,423.529307 163.88754,423.57604 163.94,423.62 C164.022576,423.707981 164.112945,423.788309 164.21,423.86 C168.83,427.33 183.71,429.86 201.36,429.86 C218.36,429.86 232.81,427.49 237.97,424.22 L237.97,424.29 C250.12,420.18 243.59,328.52 243.59,328.52 Z\" id=\"Path\" fill=\"#D3E3EF\"/>\n                <path d=\"M178.58,143.28 C178.58,140.33 159.45,137.94 135.86,137.94 C112.27,137.94 93.14,140.33 93.14,143.28 C93.14,143.28 90.08,222.28 97.78,236.82 C97.9695339,237.382584 98.3166195,237.878917 98.78,238.25 L98.93,238.38 C99.0125481,238.471037 99.1028915,238.554688 99.2,238.63 C103.82,242.1 118.7,244.63 136.35,244.63 C153.35,244.63 167.8,242.27 172.96,238.99 L172.96,239.06 C185.11,234.94 178.58,143.28 178.58,143.28 Z\" id=\"Path\" fill=\"#D3E3EF\"/>\n                <path d=\"M97.46,237.49 C97.46,232.91 114.76,229.2 136.1,229.2 C157.44,229.2 174.74,232.91 174.74,237.49 C174.74,242.07 157.44,245.78 136.1,245.78 C114.76,245.78 97.46,242.07 97.46,237.49 Z\" id=\"Path\" stroke=\"#000000\" strokeLinecap=\"round\" strokeLinejoin=\"round\"/>\n                <path d=\"M92.88,144.43 C92.88,144.43 89.47,232.77 98.95,239.81\" id=\"Path\" stroke=\"#000000\" strokeLinecap=\"round\" strokeLinejoin=\"round\"/>\n                <path d=\"M178.32,144.43 C178.32,144.43 184.86,236.09 172.7,240.22\" id=\"Path\" stroke=\"#000000\" strokeLinecap=\"round\" strokeLinejoin=\"round\"/>\n                <path d=\"M175.71,153.89 C175.71,153.89 178.71,219.51 170.14,230.34 C170.14,230.34 171.65,236.64 135.66,236.64 C99.67,236.64 101.01,230.34 101.01,230.34 C95.66,220.88 96.77,153.89 96.77,153.89\" id=\"Path\" stroke=\"#000000\" fill=\"rgba(138,144,245,1)\" strokeLinecap=\"round\" strokeLinejoin=\"round\"/>\n                <path d=\"M42,422.67 C42,418.09 59.3,414.38 80.64,414.38 C101.98,414.38 119.28,418.09 119.28,422.67 C119.28,427.25 102,431 80.63,431 C59.26,431 42,427.25 42,422.67 Z\" id=\"Path\" stroke=\"#000000\" strokeLinecap=\"round\" strokeLinejoin=\"round\"/>\n                <path d=\"M121,372 C121,372 123,403.66 114.39,414.49 C114.39,414.49 115.9,420.79 79.91,420.79 C43.92,420.79 45.26,414.49 45.26,414.49 C39.94,405 42.09,372 42.09,372\" id=\"Path\" fill=\"#84FCFC\"/>\n                <path d=\"M162.18,421.52 C162.18,416.94 179.48,413.23 200.82,413.23 C222.16,413.23 239.46,416.94 239.46,421.52 C239.46,426.1 222.16,429.81 200.82,429.81 C179.48,429.81 162.18,426.1 162.18,421.52 Z\" id=\"Path\" stroke=\"#000000\" strokeLinecap=\"round\" strokeLinejoin=\"round\"/>\n                <path d=\"M240.61,372 C240.61,372 242.61,403.66 233.99,414.49 C233.99,414.49 235.5,420.79 199.51,420.79 C163.52,420.79 164.86,414.49 164.86,414.49 C159.51,405 161.67,372 161.67,372\" id=\"Path\" fill=\"#EB52F5\"/>\n                <path d=\"M101,230.34 C101,227.16 116.48,224.58 135.57,224.58 C154.66,224.58 170.13,227.16 170.13,230.34 C170.13,233.52 154.66,236.1 135.57,236.1 C116.48,236.1 101,233.52 101,230.34 Z\" id=\"HINTGLASS\" stroke=\"#000000\" fill=\"rgba(138,144,245,1)\"/>\n                <path d=\"M96.79,153.38 C96.79,150.19 114.63,147.61 136.65,147.61 C158.67,147.61 176.5,150.19 176.5,153.38 C176.5,156.57 158.66,159.15 136.65,159.15 C114.64,159.15 96.79,156.57 96.79,153.38 Z\" id=\"Path\" stroke=\"#000000\" fill=\"rgba(138,144,245,1)\"/>\n                <path d=\"M92.88,144.43 C92.88,141.49 112.01,139.09 135.6,139.09 C159.19,139.09 178.32,141.49 178.32,144.43 C178.32,147.37 159.2,149.77 135.6,149.77 C112,149.77 92.88,147.38 92.88,144.43 Z\" id=\"Path\" stroke=\"#000000\" strokeLinecap=\"round\" strokeLinejoin=\"round\"/>\n                <path d=\"M37.41,329.61 C37.41,326.66 56.54,324.27 80.13,324.27 C103.72,324.27 122.85,326.66 122.85,329.61 C122.85,332.56 103.73,335 80.13,335 C56.53,335 37.41,332.56 37.41,329.61 Z\" id=\"Path\" stroke=\"#000000\" strokeLinecap=\"round\" strokeLinejoin=\"round\"/>\n                <path d=\"M37.41,329.61 C37.41,329.61 34,418 43.48,425\" id=\"Path\" stroke=\"#000000\" strokeLinecap=\"round\" strokeLinejoin=\"round\"/>\n                <path d=\"M122.85,329.61 C122.85,329.61 129.39,421.27 117.23,425.39\" id=\"Path\" stroke=\"#000000\" strokeLinecap=\"round\" strokeLinejoin=\"round\"/>\n                <path d=\"M45.54,415.52 C45.54,412.34 61.01,409.76 80.11,409.76 C99.21,409.76 114.67,412.34 114.67,415.52 C114.67,418.7 99.19,421.28 80.11,421.28 C61.03,421.28 45.54,418.7 45.54,415.52 Z\" id=\"Path\" stroke=\"#000000\" strokeLinecap=\"round\" strokeLinejoin=\"round\"/>\n                <path d=\"M41.12,335.2 C41.12,335.2 40.19,406.06 45.54,415.52\" id=\"Path\" stroke=\"#000000\" strokeLinecap=\"round\" strokeLinejoin=\"round\"/>\n                <path d=\"M119.62,336.08 C119.62,336.08 123.28,404.69 114.62,415.52\" id=\"Path\" stroke=\"#000000\" strokeLinecap=\"round\" strokeLinejoin=\"round\"/>\n                <path d=\"M41.32,372 C41.32,368.82 59.16,366.23 81.18,366.23 C103.2,366.23 121,368.81 121,372 C121,375.19 103.16,377.77 81.15,377.77 C59.14,377.77 41.32,375.18 41.32,372 Z\" id=\"Path\" stroke=\"#000000\" fill=\"#84FCFC\"/>\n                <path d=\"M157.6,328.47 C157.6,325.47 176.73,323.13 200.32,323.13 C223.91,323.13 243,325.52 243,328.47 C243,331.42 223.88,333.81 200.28,333.81 C176.68,333.81 157.6,331.41 157.6,328.47 Z\" id=\"Path\" stroke=\"#000000\" strokeLinecap=\"round\" strokeLinejoin=\"round\"/>\n                <path d=\"M157.6,328.47 C157.6,328.47 154.19,416.8 163.67,423.84\" id=\"Path\" stroke=\"#000000\" strokeLinecap=\"round\" strokeLinejoin=\"round\"/>\n                <path d=\"M243,328.47 C243,328.47 249.54,420.13 237.38,424.25\" id=\"Path\" stroke=\"#000000\" strokeLinecap=\"round\" strokeLinejoin=\"round\"/>\n                <path d=\"M165.73,414.37 C165.73,411.19 181.21,408.61 200.3,408.61 C219.39,408.61 234.86,411.19 234.86,414.37 C234.86,417.55 219.39,420.13 200.3,420.13 C181.21,420.13 165.73,417.55 165.73,414.37 Z\" id=\"Path\" stroke=\"#000000\" strokeLinecap=\"round\" strokeLinejoin=\"round\"/>\n                <path d=\"M161.31,334.06 C161.31,334.06 160.38,404.91 165.73,414.37\" id=\"Path\" stroke=\"#000000\" strokeLinecap=\"round\" strokeLinejoin=\"round\"/>\n                <path d=\"M239.81,334.94 C239.81,334.94 243.47,403.54 234.86,414.37\" id=\"Path\" stroke=\"#000000\" strokeLinecap=\"round\" strokeLinejoin=\"round\"/>\n                <path d=\"M161.51,372.44 C161.51,369.25 179.35,366.67 201.37,366.67 C223.39,366.67 241.23,369.25 241.23,372.44 C241.23,375.63 223.38,378.21 201.37,378.21 C179.36,378.21 161.51,375.62 161.51,372.44 Z\" id=\"Path\" stroke=\"#000000\" fill=\"#EB52F5\"/>\n                <path d=\"M96.77,153.89 C96.77,153.89 102.58,159.37 136.24,159.37 C169.9,159.37 176.87,153.89 176.87,153.89\" id=\"Path\" stroke=\"#000000\" strokeLinecap=\"round\" strokeLinejoin=\"round\"/>\n                \n                <text className=\"ColorHint__Title\" x=\"140\" y=\"113.2\">Purple Slurp</text>\n                <text className=\"ColorHint__Recipe\" x=\"140\" y=\"292.96\">Recipe:</text>\n            </g>\n        </svg>\n    </div>;\n}\n\nexport default ColorHintTutorial;\n","import * as React from 'react';\n\nexport const ColorHintLevel1 = (props: {\n    name: string,\n    color60: string,\n    color30: string,\n    color10: string,\n    colorResult: string,\n}) => {\n    return <div className=\"ColorHint\">\n            <svg width=\"283px\" height=\"485px\" viewBox=\"0 0 283 485\" version=\"1.1\">\n            <g id=\"Page-1\" stroke=\"none\" strokeWidth=\"1\" fill=\"none\" fillRule=\"evenodd\">\n                <path d=\"M43.68,34.72 L239.34,34.72 C262.9,34.72 282,56.16 282,82.61 L282,436.11 C282,462.56 262.9,484 239.34,484 L43.68,484 C20.12,484 1,462.56 1,436.11 L1,82.61 C1,56.16 20.12,34.72 43.68,34.72 Z\" id=\"Path\" stroke=\"#020202\" strokeWidth=\"2\" fill=\"#BFB078\"/>\n                <path d=\"M25,56.15 L255.25,56.15 C261.37,56.15 266.33,60.84 266.33,66.62 L266.33,452.87 C266.33,458.65 261.33,463.34 255.25,463.34 L25,463.34 C18.87,463.34 13.91,458.65 13.91,452.87 L13.91,66.62 C13.91,60.84 18.87,56.15 25,56.15 Z\" id=\"Path\" stroke=\"#000000\" strokeWidth=\"2\" fill=\"#FFFFFF\" strokeLinecap=\"round\" strokeLinejoin=\"round\"/>\n                <path d=\"M81.18,62.91 L205.29,63.01 C205.29,63.01 210.17,30.11 165.79,23.56 C165.79,23.56 168.38,0.79 142.37,1.18 C116.66,1.58 114.65,20.28 116.51,23.35 C118.37,26.42 79.05,31.82 81.18,62.91 Z\" id=\"Path\" stroke=\"#000000\" strokeWidth=\"2\" fill=\"#898588\" strokeLinecap=\"round\" strokeLinejoin=\"round\"/>\n                <path d=\"M133.59,18.79 C133.59,14.65 137.52,11.3 142.36,11.3 C147.2,11.3 151.12,14.65 151.12,18.79 C151.12,22.93 147.2,26.28 142.36,26.28 C137.52,26.28 133.59,22.92 133.59,18.79 Z\" id=\"Path\" stroke=\"#000000\" strokeWidth=\"2\" fill=\"#FFFFFF\" strokeLinecap=\"round\" strokeLinejoin=\"round\"/>\n                <path d=\"M178.58,143.28 C178.58,140.33 159.45,137.94 135.86,137.94 C112.27,137.94 93.14,140.33 93.14,143.28 C93.14,143.28 90.08,222.28 97.78,236.82 C97.9695339,237.382584 98.3166195,237.878917 98.78,238.25 L98.93,238.38 C99.0125481,238.471037 99.1028915,238.554688 99.2,238.63 C103.82,242.1 118.7,244.63 136.35,244.63 C153.35,244.63 167.8,242.27 172.96,238.99 L172.96,239.06 C185.11,234.94 178.58,143.28 178.58,143.28 Z\" id=\"Path\" fill=\"#D3E3EF\"/>\n                <path d=\"M97.46,237.49 C97.46,232.91 114.76,229.2 136.1,229.2 C157.44,229.2 174.74,232.91 174.74,237.49 C174.74,242.07 157.44,245.78 136.1,245.78 C114.76,245.78 97.46,242.07 97.46,237.49 Z\" id=\"Path\" stroke=\"#000000\" strokeLinecap=\"round\" strokeLinejoin=\"round\"/>\n                <path d=\"M92.88,144.43 C92.88,144.43 89.47,232.77 98.95,239.81\" id=\"Path\" stroke=\"#000000\" strokeLinecap=\"round\" strokeLinejoin=\"round\"/>\n                <path d=\"M178.32,144.43 C178.32,144.43 184.86,236.09 172.7,240.22\" id=\"Path\" stroke=\"#000000\" strokeLinecap=\"round\" strokeLinejoin=\"round\"/>\n                <path d=\"M175.71,153.89 C175.71,153.89 178.71,219.51 170.14,230.34 C170.14,230.34 171.65,236.64 135.66,236.64 C99.67,236.64 101.01,230.34 101.01,230.34 C95.66,220.88 96.77,153.89 96.77,153.89\" id=\"Path\" stroke=\"#000000\" fill={props.colorResult} strokeLinecap=\"round\" strokeLinejoin=\"round\"/>\n                <path d=\"M101,230.34 C101,227.16 116.48,224.58 135.57,224.58 C154.66,224.58 170.13,227.16 170.13,230.34 C170.13,233.52 154.66,236.1 135.57,236.1 C116.48,236.1 101,233.52 101,230.34 Z\" id=\"HINTGLASS\" stroke=\"#000000\" fill={props.colorResult} />\n                <path d=\"M96.79,153.38 C96.79,150.19 114.63,147.61 136.65,147.61 C158.67,147.61 176.5,150.19 176.5,153.38 C176.5,156.57 158.66,159.15 136.65,159.15 C114.64,159.15 96.79,156.57 96.79,153.38 Z\" id=\"Path\" stroke=\"#000000\" fill={props.colorResult}/>\n                <path d=\"M92.88,144.43 C92.88,141.49 112.01,139.09 135.6,139.09 C159.19,139.09 178.32,141.49 178.32,144.43 C178.32,147.37 159.2,149.77 135.6,149.77 C112,149.77 92.88,147.38 92.88,144.43 Z\" id=\"Path\" stroke=\"#000000\" strokeLinecap=\"round\" strokeLinejoin=\"round\"/>\n                <path d=\"M92.66,338 C92.66,335.79 78.31,334 60.66,334 C43.01,334 28.66,335.79 28.66,338 C28.66,338 26.37,397.27 32.14,408.15 C32.2752895,408.569487 32.5287642,408.941018 32.87,409.22 C32.9091286,409.254119 32.9458808,409.290871 32.98,409.33 C33.05,409.39 33.11,409.46 33.18,409.51 C36.64,412.11 47.8,414.02 61.04,414.02 C73.8,414.02 84.63,412.25 88.5,409.79 L88.5,409.84 C97.56,406.73 92.66,338 92.66,338 Z\" id=\"Path\" fill=\"#D3E3EF\"/>\n                <path d=\"M32,407.78 C32,404.35 45,401.56 61,401.56 C77,401.56 90,404.35 90,407.78 C90,411.21 77,414 61,414 C45,414 32,411.22 32,407.78 Z\" id=\"Path\" stroke=\"#000000\" strokeLinecap=\"round\" strokeLinejoin=\"round\"/>\n                <path d=\"M91.29,371 C91.29,371 92.45,395.11272 86,402.963192 C86,402.963192 87.46,406.37 60.47,406.37 C33.48,406.37 34.47,401.801602 34.47,401.801602 C30.47,394.94121 32.08,371 32.08,371\" id=\"Path\" fill={props.color60}/>\n                <path d=\"M28.58,338 C28.58,335.79 42.92,334 60.58,334 C78.24,334 92.58,335.79 92.58,338 C92.58,340.21 78.23,342 60.58,342 C42.93,342 28.58,340.2 28.58,338 Z\" id=\"Path\" stroke=\"#000000\" strokeLinecap=\"round\" strokeLinejoin=\"round\"/>\n                <path d=\"M28.58,338 C28.58,338 26.02,404.25 33.13,409.53\" id=\"Path\" stroke=\"#000000\" strokeLinecap=\"round\" strokeLinejoin=\"round\"/>\n                <path d=\"M92.66,338 C92.66,338 97.56,406.74 88.44,409.83\" id=\"Path\" stroke=\"#000000\" strokeLinecap=\"round\" strokeLinejoin=\"round\"/>\n                <path d=\"M34.67,402.42 C34.67,400.03 46.28,398.1 60.6,398.1 C74.92,398.1 86.52,400.03 86.52,402.42 C86.52,404.81 74.91,406.74 60.6,406.74 C46.29,406.74 34.67,404.8 34.67,402.42 Z\" id=\"Path\" stroke=\"#000000\" strokeLinecap=\"round\" strokeLinejoin=\"round\"/>\n                <path d=\"M31.36,342.18 C31.36,342.18 30.66,395.32 34.67,402.42\" id=\"Path\" stroke=\"#000000\" strokeLinecap=\"round\" strokeLinejoin=\"round\"/>\n                <path d=\"M90.23,342.84 C90.23,342.84 92.97,394.3 86.52,402.42\" id=\"Path\" stroke=\"#000000\" strokeLinecap=\"round\" strokeLinejoin=\"round\"/>\n                <path d=\"M32,370.33 C32,367.94 45.1561793,366 61.39,366 C77.6238207,366 90.78,367.94 90.78,370.33 C90.78,372.72 77.6238207,374.65 61.39,374.65 C45.1561793,374.65 32,372.72 32,370.33 Z\" id=\"Path\" stroke=\"#000000\" fill={props.color60}/>\n                <path d=\"M173.72,337.17 C173.72,334.96 159.37,333.17 141.72,333.17 C124.07,333.17 109.72,334.97 109.72,337.17 C109.72,337.17 107.43,396.44 113.2,407.32 C113.337803,407.738251 113.590832,408.109129 113.93,408.39 C113.969129,408.424119 114.005881,408.460871 114.04,408.5 C114.11,408.56 114.17,408.63 114.24,408.68 C117.7,411.28 128.86,413.19 142.1,413.19 C154.86,413.19 165.69,411.42 169.56,408.96 L169.56,409 C178.62,405.91 173.72,337.17 173.72,337.17 Z\" id=\"Path\" fill=\"#D3E3EF\"/>\n                <path d=\"M112.67,406.92 C112.67,403.49 125.67,400.7 141.67,400.7 C157.67,400.7 170.67,403.49 170.67,406.92 C170.67,410.35 157.67,413.14 141.67,413.14 C125.67,413.14 112.67,410.35 112.67,406.92 Z\" id=\"Path\" stroke=\"#000000\" strokeLinecap=\"round\" strokeLinejoin=\"round\"/>\n                <path d=\"M170.48504,386 C170.48504,386 170.927439,390.359127 170.13,394.806642 C169.61104,397.701012 168.749756,400.636292 166.273626,402.42 C166.273626,402.070919 166.745445,406.37 140.664906,406.37 C128.780406,406.37 123.468171,405.10949 120.464732,404.345598 C116.877125,403.433129 116.874508,402.990732 116.874508,402.990732 C113.009293,399.038814 113.279858,386 113.279858,386\" id=\"Path\" fill={props.color30}/>\n                <path d=\"M109.23,337.13 C109.23,334.92 123.58,333.13 141.23,333.13 C158.88,333.13 173.23,334.92 173.23,337.13 C173.23,339.34 158.89,341.13 141.23,341.13 C123.57,341.13 109.23,339.34 109.23,337.13 Z\" id=\"Path\" stroke=\"#000000\" strokeLinecap=\"round\" strokeLinejoin=\"round\"/>\n                <path d=\"M109.23,337.13 C109.23,337.13 106.67,403.38 113.79,408.66\" id=\"Path\" stroke=\"#000000\" strokeLinecap=\"round\" strokeLinejoin=\"round\"/>\n                <path d=\"M173.31,337.13 C173.31,337.13 178.21,405.87 169.1,408.96\" id=\"Path\" stroke=\"#000000\" strokeLinecap=\"round\" strokeLinejoin=\"round\"/>\n                <path d=\"M115.33,401.56 C115.33,399.17 126.93,397.24 141.25,397.24 C155.57,397.24 167.18,399.17 167.18,401.56 C167.18,403.95 155.57,405.88 141.25,405.88 C126.93,405.88 115.33,403.94 115.33,401.56 Z\" id=\"Path\" stroke=\"#000000\" strokeLinecap=\"round\" strokeLinejoin=\"round\"/>\n                <path d=\"M112,341.32 C112,341.32 111.31,394.46 115.32,401.56\" id=\"Path\" stroke=\"#000000\" strokeLinecap=\"round\" strokeLinejoin=\"round\"/>\n                <path d=\"M170.88,342 C170.88,342 173.63,393.45 167.18,401.58\" id=\"Path\" stroke=\"#000000\" strokeLinecap=\"round\" strokeLinejoin=\"round\"/>\n                <path d=\"M113,385.33 C113,382.94 125.946173,381 141.92,381 C157.893827,381 170.84,382.94 170.84,385.33 C170.84,387.72 157.893827,389.66 141.92,389.66 C125.946173,389.66 113,387.72 113,385.33 Z\" id=\"Path\" stroke=\"#000000\" fill={props.color30}/>\n                <path d=\"M255.42,337.17 C255.42,334.96 241.08,333.17 223.42,333.17 C205.76,333.17 191.42,334.97 191.42,337.17 C191.42,337.17 189.13,396.44 194.9,407.32 C195.037803,407.738251 195.290832,408.109129 195.63,408.39 L195.74,408.5 C195.801835,408.56516 195.868709,408.625346 195.94,408.68 C199.4,411.28 210.56,413.19 223.8,413.19 C236.56,413.19 247.39,411.42 251.25,408.96 L251.25,409 C260.33,405.91 255.42,337.17 255.42,337.17 Z\" id=\"Path\" fill=\"#D3E3EF\"/>\n                <path d=\"M194.37,406.92 C194.37,403.49 207.37,400.7 223.37,400.7 C239.37,400.7 252.37,403.49 252.37,406.92 C252.37,410.35 239.37,413.14 223.37,413.14 C207.37,413.14 194.37,410.35 194.37,406.92 Z\" id=\"Path\" stroke=\"#000000\" strokeLinecap=\"round\" strokeLinejoin=\"round\"/>\n                <path d=\"M251,397 C250.799897,399.056545 249.526501,401.022076 247.362281,402.614948 C247.362281,402.614948 248.452632,405.37 222.409649,405.37 C196.366667,405.37 197,401.58 197,401.58 C196.169709,399.749385 196.047485,398.89777 196,397\" id=\"Path\" fill={props.color10}/>\n                <path d=\"M190.94,337.13 C190.94,334.92 205.29,333.13 222.94,333.13 C240.59,333.13 254.94,334.92 254.94,337.13 C254.94,339.34 240.59,341.13 222.94,341.13 C205.29,341.13 190.94,339.34 190.94,337.13 Z\" id=\"Path\" stroke=\"#000000\" strokeLinecap=\"round\" strokeLinejoin=\"round\"/>\n                <path d=\"M190.94,337.13 C190.94,337.13 188.38,403.38 195.49,408.66\" id=\"Path\" stroke=\"#000000\" strokeLinecap=\"round\" strokeLinejoin=\"round\"/>\n                <path d=\"M255,337.13 C255,337.13 259.9,405.87 250.78,408.96\" id=\"Path\" stroke=\"#000000\" strokeLinecap=\"round\" strokeLinejoin=\"round\"/>\n                <path d=\"M197,401.56 C197,399.17 208.6,397.24 222.92,397.24 C237.24,397.24 248.84,399.17 248.84,401.56 C248.84,403.95 237.24,405.88 222.92,405.88 C208.6,405.88 197,403.94 197,401.56 Z\" id=\"Path\" stroke=\"#000000\" strokeLinecap=\"round\" strokeLinejoin=\"round\"/>\n                <path d=\"M193.72,341.32 C193.72,341.32 193,394.46 197,401.56\" id=\"Path\" stroke=\"#000000\" strokeLinecap=\"round\" strokeLinejoin=\"round\"/>\n                <path d=\"M252.59,342 C252.59,342 255.34,393.45 248.88,401.58\" id=\"Path\" stroke=\"#000000\" strokeLinecap=\"round\" strokeLinejoin=\"round\"/>\n                <path d=\"M196,396.33 C196,393.94 208.312281,392 223.5,392 C238.687719,392 251,393.94 251,396.33 C251,398.72 238.687719,400.66 223.5,400.66 C208.312281,400.66 196,398.72 196,396.33 Z\" id=\"Path\" stroke=\"#000000\" fill={props.color10}/>\n                <path d=\"M96.77,153.89 C96.77,153.89 102.58,159.37 136.24,159.37 C169.9,159.37 176.87,153.89 176.87,153.89\" id=\"Path\" stroke=\"#000000\" strokeLinecap=\"round\" strokeLinejoin=\"round\"/>\n                \n                <path d=\"M101.45,366.12 L101.45,377\" id=\"Path\" stroke=\"#000000\" strokeWidth=\"2\" fill=\"#FFFFFF\"/>\n                <path d=\"M95.84,371.39 L106.98,371.39\" id=\"Path\" stroke=\"#000000\" strokeWidth=\"2\" fill=\"#FFFFFF\"/>\n                <path d=\"M182.45,365.12 L182.45,376\" id=\"Path\" stroke=\"#000000\" strokeWidth=\"2\" fill=\"#FFFFFF\"/>\n                <path d=\"M176.84,370.39 L187.98,370.39\" id=\"Path\" stroke=\"#000000\" strokeWidth=\"2\" fill=\"#FFFFFF\"/>\n                <path d=\"M101.45,366.12 L101.45,377\" id=\"Path\" stroke=\"#000000\"/>\n                <path d=\"M95.84,371.39 L106.98,371.39\" id=\"Path\" stroke=\"#000000\"/>\n                <path d=\"M182.45,365.12 L182.45,376\" id=\"Path\" stroke=\"#000000\"/>\n                <path d=\"M176.84,370.39 L187.98,370.39\" id=\"Path\" stroke=\"#000000\"/>\n\n                <text className=\"ColorHint__Title\" x=\"140\" y=\"113.2\">{props.name}</text>\n                <text className=\"ColorHint__Recipe\" x=\"140\" y=\"292.96\">Recipe:</text>\n            </g>\n        </svg>\n    </div>;\n}\n\nexport default ColorHintLevel1;\n","import * as React from 'react';\n\nexport const ColorHintLevel2 = (props: {\n    name: string,\n    colorResult: string,\n    color9: string,\n    color5: string,\n    color3: string\n}) => {\n    return <div className=\"ColorHint\">\n        <svg width=\"283px\" height=\"485px\" viewBox=\"0 0 283 485\" version=\"1.1\">\n            <g id=\"Page-1\" stroke=\"none\" strokeWidth=\"1\" fill=\"none\" fillRule=\"evenodd\">\n                <path d=\"M43.68,34.72 L239.34,34.72 C262.9,34.72 282,56.16 282,82.61 L282,436.11 C282,462.56 262.9,484 239.34,484 L43.68,484 C20.12,484 1,462.56 1,436.11 L1,82.61 C1,56.16 20.12,34.72 43.68,34.72 Z\" id=\"Path\" stroke=\"#020202\" strokeWidth=\"2\" fill=\"#BFB078\"/>\n                <path d=\"M25,56.15 L255.25,56.15 C261.37,56.15 266.33,60.84 266.33,66.62 L266.33,452.87 C266.33,458.65 261.33,463.34 255.25,463.34 L25,463.34 C18.87,463.34 13.91,458.65 13.91,452.87 L13.91,66.62 C13.91,60.84 18.87,56.15 25,56.15 Z\" id=\"Path\" stroke=\"#000000\" strokeWidth=\"2\" fill=\"#FFFFFF\" strokeLinecap=\"round\" strokeLinejoin=\"round\"/>\n                <path d=\"M81.18,62.91 L205.29,63.01 C205.29,63.01 210.17,30.11 165.79,23.56 C165.79,23.56 168.38,0.79 142.37,1.18 C116.66,1.58 114.65,20.28 116.51,23.35 C118.37,26.42 79.05,31.82 81.18,62.91 Z\" id=\"Path\" stroke=\"#000000\" strokeWidth=\"2\" fill=\"#898588\" strokeLinecap=\"round\" strokeLinejoin=\"round\"/>\n                <path d=\"M133.59,18.79 C133.59,14.65 137.52,11.3 142.36,11.3 C147.2,11.3 151.12,14.65 151.12,18.79 C151.12,22.93 147.2,26.28 142.36,26.28 C137.52,26.28 133.59,22.92 133.59,18.79 Z\" id=\"Path\" stroke=\"#000000\" strokeWidth=\"2\" fill=\"#FFFFFF\" strokeLinecap=\"round\" strokeLinejoin=\"round\"/>\n                <path d=\"M178.58,143.28 C178.58,140.33 159.45,137.94 135.86,137.94 C112.27,137.94 93.14,140.33 93.14,143.28 C93.14,143.28 90.08,222.28 97.78,236.82 C97.9695339,237.382584 98.3166195,237.878917 98.78,238.25 L98.93,238.38 C99.0125481,238.471037 99.1028915,238.554688 99.2,238.63 C103.82,242.1 118.7,244.63 136.35,244.63 C153.35,244.63 167.8,242.27 172.96,238.99 L172.96,239.06 C185.11,234.94 178.58,143.28 178.58,143.28 Z\" id=\"Path\" fill=\"#D3E3EF\"/>\n                <path d=\"M97.46,237.49 C97.46,232.91 114.76,229.2 136.1,229.2 C157.44,229.2 174.74,232.91 174.74,237.49 C174.74,242.07 157.44,245.78 136.1,245.78 C114.76,245.78 97.46,242.07 97.46,237.49 Z\" id=\"Path\" stroke=\"#000000\" strokeLinecap=\"round\" strokeLinejoin=\"round\"/>\n                <path d=\"M92.88,144.43 C92.88,144.43 89.47,232.77 98.95,239.81\" id=\"Path\" stroke=\"#000000\" strokeLinecap=\"round\" strokeLinejoin=\"round\"/>\n                <path d=\"M178.32,144.43 C178.32,144.43 184.86,236.09 172.7,240.22\" id=\"Path\" stroke=\"#000000\" strokeLinecap=\"round\" strokeLinejoin=\"round\"/>\n                <path d=\"M175.71,153.89 C175.71,153.89 178.71,219.51 170.14,230.34 C170.14,230.34 171.65,236.64 135.66,236.64 C99.67,236.64 101.01,230.34 101.01,230.34 C95.66,220.88 96.77,153.89 96.77,153.89\" id=\"Path\" stroke=\"#000000\" fill={props.colorResult} strokeLinecap=\"round\" strokeLinejoin=\"round\"/>\n                <path d=\"M101,230.34 C101,227.16 116.48,224.58 135.57,224.58 C154.66,224.58 170.13,227.16 170.13,230.34 C170.13,233.52 154.66,236.1 135.57,236.1 C116.48,236.1 101,233.52 101,230.34 Z\"id=\"HINTGLASS\" stroke=\"#000000\" fill={props.colorResult}/>\n                <path d=\"M96.79,153.38 C96.79,150.19 114.63,147.61 136.65,147.61 C158.67,147.61 176.5,150.19 176.5,153.38 C176.5,156.57 158.66,159.15 136.65,159.15 C114.64,159.15 96.79,156.57 96.79,153.38 Z\" id=\"Path\" stroke=\"#000000\" fill={props.colorResult}/>\n                <path d=\"M92.88,144.43 C92.88,141.49 112.01,139.09 135.6,139.09 C159.19,139.09 178.32,141.49 178.32,144.43 C178.32,147.37 159.2,149.77 135.6,149.77 C112,149.77 92.88,147.38 92.88,144.43 Z\" id=\"Path\" stroke=\"#000000\" strokeLinecap=\"round\" strokeLinejoin=\"round\"/>\n                <path d=\"M173.66,361 C173.66,358.79 159.31,357 141.66,357 C124.01,357 109.66,358.79 109.66,361 C109.66,361 107.37,420.27 113.14,431.15 C113.275289,431.569487 113.528764,431.941018 113.87,432.22 C113.909129,432.254119 113.945881,432.290871 113.98,432.33 C114.05,432.39 114.11,432.46 114.18,432.51 C117.64,435.11 128.8,437.02 142.04,437.02 C154.8,437.02 165.63,435.25 169.5,432.79 L169.5,432.84 C178.56,429.73 173.66,361 173.66,361 Z\" id=\"Path\" fill=\"#D3E3EF\"/>\n                <path d=\"M113,430.78 C113,427.35 126,424.56 142,424.56 C158,424.56 171,427.35 171,430.78 C171,434.21 158,437 142,437 C126,437 113,434.22 113,430.78 Z\" id=\"Path\" stroke=\"#000000\" strokeLinecap=\"round\" strokeLinejoin=\"round\"/>\n                <path d=\"M172.29,375 C172.29,375 174.45,412.93 168,425 C168,425 168.46,429.37 141.47,429.37 C114.48,429.37 115,424 115,424 C111,413.46 113.09,375 113.09,375\" id=\"Path\" fill={props.color5}/>\n                <path d=\"M109.58,361 C109.58,358.79 123.92,357 141.58,357 C159.24,357 173.58,358.79 173.58,361 C173.58,363.21 159.23,365 141.58,365 C123.93,365 109.58,363.2 109.58,361 Z\" id=\"Path\" stroke=\"#000000\" strokeLinecap=\"round\" strokeLinejoin=\"round\"/>\n                <path d=\"M109.58,361 C109.58,361 107.02,427.25 114.13,432.53\" id=\"Path\" stroke=\"#000000\" strokeLinecap=\"round\" strokeLinejoin=\"round\"/>\n                <path d=\"M173.66,361 C173.66,361 178.56,429.74 169.44,432.83\" id=\"Path\" stroke=\"#000000\" strokeLinecap=\"round\" strokeLinejoin=\"round\"/>\n                <path d=\"M115.67,425.42 C115.67,423.03 127.28,421.1 141.6,421.1 C155.92,421.1 167.52,423.03 167.52,425.42 C167.52,427.81 155.91,429.74 141.6,429.74 C127.29,429.74 115.67,427.8 115.67,425.42 Z\" id=\"Path\" stroke=\"#000000\" strokeLinecap=\"round\" strokeLinejoin=\"round\"/>\n                <path d=\"M112.36,365.18 C112.36,365.18 111.66,418.32 115.67,425.42\" id=\"Path\" stroke=\"#000000\" strokeLinecap=\"round\" strokeLinejoin=\"round\"/>\n                <path d=\"M171.23,365.84 C171.23,365.84 173.97,417.3 167.52,425.42\" id=\"Path\" stroke=\"#000000\" strokeLinecap=\"round\" strokeLinejoin=\"round\"/>\n                <path d=\"M112.51,374.78 C112.51,372.39 125.89,370.45 142.4,370.45 C158.91,370.45 171.5,372.11 171.5,374.5 C171.5,376.89 158.91,379.1 142.4,379.1 C125.89,379.1 112.51,377.17 112.51,374.78 Z\" id=\"Path\" stroke=\"#000000\" fill={props.color5}/>\n                <path d=\"M92.66,361 C92.66,358.79 78.31,357 60.66,357 C43.01,357 28.66,358.79 28.66,361 C28.66,361 26.37,420.27 32.14,431.15 C32.2752895,431.569487 32.5287642,431.941018 32.87,432.22 C32.9091286,432.254119 32.9458808,432.290871 32.98,432.33 C33.05,432.39 33.11,432.46 33.18,432.51 C36.64,435.11 47.8,437.02 61.04,437.02 C73.8,437.02 84.63,435.25 88.5,432.79 L88.5,432.84 C97.56,429.73 92.66,361 92.66,361 Z\" id=\"Path\" fill=\"#D3E3EF\"/>\n                <path d=\"M32,430.78 C32,427.35 45,424.56 61,424.56 C77,424.56 90,427.35 90,430.78 C90,434.21 77,437 61,437 C45,437 32,434.22 32,430.78 Z\" id=\"Path\" stroke=\"#000000\" strokeLinecap=\"round\" strokeLinejoin=\"round\"/>\n                <path d=\"M91.29,375 C91.29,375 93.45,412.93 87,425 C87,425 87.46,429.37 60.47,429.37 C33.48,429.37 34,424 34,424 C30,413.46 32.09,375 32.09,375\" id=\"Path\" fill={props.color9}/>\n                <path d=\"M28.58,361 C28.58,358.79 42.92,357 60.58,357 C78.24,357 92.58,358.79 92.58,361 C92.58,363.21 78.23,365 60.58,365 C42.93,365 28.58,363.2 28.58,361 Z\" id=\"Path\" stroke=\"#000000\" strokeLinecap=\"round\" strokeLinejoin=\"round\"/>\n                <path d=\"M28.58,361 C28.58,361 26.02,427.25 33.13,432.53\" id=\"Path\" stroke=\"#000000\" strokeLinecap=\"round\" strokeLinejoin=\"round\"/>\n                <path d=\"M92.66,361 C92.66,361 97.56,429.74 88.44,432.83\" id=\"Path\" stroke=\"#000000\" strokeLinecap=\"round\" strokeLinejoin=\"round\"/>\n                <path d=\"M34.67,425.42 C34.67,423.03 46.28,421.1 60.6,421.1 C74.92,421.1 86.52,423.03 86.52,425.42 C86.52,427.81 74.91,429.74 60.6,429.74 C46.29,429.74 34.67,427.8 34.67,425.42 Z\" id=\"Path\" stroke=\"#000000\" strokeLinecap=\"round\" strokeLinejoin=\"round\"/>\n                <path d=\"M31.36,365.18 C31.36,365.18 30.66,418.32 34.67,425.42\" id=\"Path\" stroke=\"#000000\" strokeLinecap=\"round\" strokeLinejoin=\"round\"/>\n                <path d=\"M90.23,365.84 C90.23,365.84 92.97,417.3 86.52,425.42\" id=\"Path\" stroke=\"#000000\" strokeLinecap=\"round\" strokeLinejoin=\"round\"/>\n                <path d=\"M31.51,374.78 C31.51,372.39 44.89,370.45 61.4,370.45 C77.91,370.45 90.5,372.11 90.5,374.5 C90.5,376.89 77.91,379.1 61.4,379.1 C44.89,379.1 31.51,377.17 31.51,374.78 Z\" id=\"Path\" stroke=\"#000000\" fill={props.color9}/>\n                <path d=\"M255.66,361 C255.66,358.79 241.31,357 223.66,357 C206.01,357 191.66,358.79 191.66,361 C191.66,361 189.37,420.27 195.14,431.15 C195.275289,431.569487 195.528764,431.941018 195.87,432.22 C195.909129,432.254119 195.945881,432.290871 195.98,432.33 C196.05,432.39 196.11,432.46 196.18,432.51 C199.64,435.11 210.8,437.02 224.04,437.02 C236.8,437.02 247.63,435.25 251.5,432.79 L251.5,432.84 C260.56,429.73 255.66,361 255.66,361 Z\" id=\"Path\" fill=\"#D3E3EF\"/>\n                <path d=\"M195,430.78 C195,427.35 208,424.56 224,424.56 C240,424.56 253,427.35 253,430.78 C253,434.21 240,437 224,437 C208,437 195,434.22 195,430.78 Z\" id=\"Path\" stroke=\"#000000\" strokeLinecap=\"round\" strokeLinejoin=\"round\"/>\n                <path d=\"M254.29,375 C254.29,375 256.45,412.93 250,425 C250,425 250.46,429.37 223.47,429.37 C196.48,429.37 197,424 197,424 C193,413.46 195.09,375 195.09,375\" id=\"Path\" fill={props.color3}/>\n                <path d=\"M191.58,361 C191.58,358.79 205.92,357 223.58,357 C241.24,357 255.58,358.79 255.58,361 C255.58,363.21 241.23,365 223.58,365 C205.93,365 191.58,363.2 191.58,361 Z\" id=\"Path\" stroke=\"#000000\" strokeLinecap=\"round\" strokeLinejoin=\"round\"/>\n                <path d=\"M191.58,361 C191.58,361 189.02,427.25 196.13,432.53\" id=\"Path\" stroke=\"#000000\" strokeLinecap=\"round\" strokeLinejoin=\"round\"/>\n                <path d=\"M255.66,361 C255.66,361 260.56,429.74 251.44,432.83\" id=\"Path\" stroke=\"#000000\" strokeLinecap=\"round\" strokeLinejoin=\"round\"/>\n                <path d=\"M197.67,425.42 C197.67,423.03 209.28,421.1 223.6,421.1 C237.92,421.1 249.52,423.03 249.52,425.42 C249.52,427.81 237.91,429.74 223.6,429.74 C209.29,429.74 197.67,427.8 197.67,425.42 Z\" id=\"Path\" stroke=\"#000000\" strokeLinecap=\"round\" strokeLinejoin=\"round\"/>\n                <path d=\"M194.36,365.18 C194.36,365.18 193.66,418.32 197.67,425.42\" id=\"Path\" stroke=\"#000000\" strokeLinecap=\"round\" strokeLinejoin=\"round\"/>\n                <path d=\"M253.23,365.84 C253.23,365.84 255.97,417.3 249.52,425.42\" id=\"Path\" stroke=\"#000000\" strokeLinecap=\"round\" strokeLinejoin=\"round\"/>\n                <path d=\"M194.51,374.78 C194.51,372.39 207.89,370.45 224.4,370.45 C240.91,370.45 253.5,372.11 253.5,374.5 C253.5,376.89 240.91,379.1 224.4,379.1 C207.89,379.1 194.51,377.17 194.51,374.78 Z\" id=\"Path\" stroke=\"#000000\" fill={props.color3}/>\n                <path d=\"M96.77,153.89 C96.77,153.89 102.58,159.37 136.24,159.37 C169.9,159.37 176.87,153.89 176.87,153.89\" id=\"Path\" stroke=\"#000000\" strokeLinecap=\"round\" strokeLinejoin=\"round\"/>\n                \n                \n                <path d=\"M101.45,390.12 L101.45,401\" id=\"Path\" stroke=\"#000000\" strokeWidth=\"2\" fill=\"#FFFFFF\"/>\n                <path d=\"M95.84,395.39 L106.98,395.39\" id=\"Path\" stroke=\"#000000\" strokeWidth=\"2\" fill=\"#FFFFFF\"/>\n                <path d=\"M182.45,389.12 L182.45,400\" id=\"Path\" stroke=\"#000000\" strokeWidth=\"2\" fill=\"#FFFFFF\"/>\n                <path d=\"M176.84,394.39 L187.98,394.39\" id=\"Path\" stroke=\"#000000\" strokeWidth=\"2\" fill=\"#FFFFFF\"/>\n                <path d=\"M101.45,390.12 L101.45,401\" id=\"Path\" stroke=\"#000000\"/>\n                <path d=\"M95.84,395.39 L106.98,395.39\" id=\"Path\" stroke=\"#000000\"/>\n                <path d=\"M182.45,389.12 L182.45,400\" id=\"Path\" stroke=\"#000000\"/>\n                <path d=\"M176.84,394.39 L187.98,394.39\" id=\"Path\" stroke=\"#000000\"/>\n\n                <text className=\"ColorHint__Title\" x=\"140\" y=\"113.2\">{props.name}</text>\n                <text className=\"ColorHint__Recipe\" x=\"140\" y=\"292.96\">Recipe:</text>\n\n                <text className=\"ColorHint__Ratio\" x=\"51\" y=\"412\">9</text>\n                <text className=\"ColorHint__Ratio\" x=\"132\" y=\"412\">5</text>\n                <text className=\"ColorHint__Ratio\" x=\"214.41\" y=\"412\">3</text>\n            </g>\n        </svg>\n    </div>;\n}\n\nexport default ColorHintLevel2;\n","import * as React from 'react';\n\nexport const ColorHintLevel3 = (props: {\n    name: string,\n    colorResult: string\n}) => {\n    return <div className=\"ColorHint\">\n        <svg width=\"283px\" height=\"485px\" viewBox=\"0 0 283 485\" version=\"1.1\">\n            <g id=\"Page-1\" stroke=\"none\" strokeWidth=\"1\" fill=\"none\" fillRule=\"evenodd\">\n                <path d=\"M43.68,34.72 L239.34,34.72 C262.9,34.72 282,56.16 282,82.61 L282,436.11 C282,462.56 262.9,484 239.34,484 L43.68,484 C20.12,484 1.02,462.56 1.02,436.11 L1.02,82.61 C1,56.16 20.12,34.72 43.68,34.72 Z\" id=\"Path\" stroke=\"#020202\" strokeWidth=\"2\" fill=\"#BFB078\"/>\n                <path d=\"M25,56.15 L255.25,56.15 C261.37,56.15 266.33,60.84 266.33,66.62 L266.33,452.87 C266.33,458.65 261.33,463.34 255.25,463.34 L25,463.34 C18.87,463.34 13.91,458.65 13.91,452.87 L13.91,66.62 C13.91,60.84 18.87,56.15 25,56.15 Z\" id=\"Path\" stroke=\"#000000\" strokeWidth=\"2\" fill=\"#FFFFFF\" strokeLinecap=\"round\" strokeLinejoin=\"round\"/>\n                <path d=\"M81.18,62.91 L205.29,63.01 C205.29,63.01 210.17,30.11 165.79,23.56 C165.79,23.56 168.38,0.79 142.37,1.18 C116.66,1.58 114.65,20.28 116.51,23.35 C118.37,26.42 79.05,31.82 81.18,62.91 Z\" id=\"Path\" stroke=\"#000000\" strokeWidth=\"2\" fill=\"#898588\" strokeLinecap=\"round\" strokeLinejoin=\"round\"/>\n                <path d=\"M133.59,18.79 C133.59,14.65 137.52,11.3 142.36,11.3 C147.2,11.3 151.12,14.65 151.12,18.79 C151.12,22.93 147.2,26.28 142.36,26.28 C137.52,26.28 133.59,22.92 133.59,18.79 Z\" id=\"Path\" stroke=\"#000000\" strokeWidth=\"2\" fill=\"#FFFFFF\" strokeLinecap=\"round\" strokeLinejoin=\"round\"/>\n                <path d=\"M178.58,143.28 C178.58,140.33 159.45,137.94 135.86,137.94 C112.27,137.94 93.14,140.33 93.14,143.28 C93.14,143.28 90.08,222.28 97.78,236.82 C97.9695339,237.382584 98.3166195,237.878917 98.78,238.25 L98.93,238.38 C99.0125481,238.471037 99.1028915,238.554688 99.2,238.63 C103.82,242.1 118.7,244.63 136.35,244.63 C153.35,244.63 167.8,242.27 172.96,238.99 L172.96,239.06 C185.11,234.94 178.58,143.28 178.58,143.28 Z\" id=\"Path\" fill=\"#D3E3EF\"/>\n                <path d=\"M97.46,237.49 C97.46,232.91 114.76,229.2 136.1,229.2 C157.44,229.2 174.74,232.91 174.74,237.49 C174.74,242.07 157.44,245.78 136.1,245.78 C114.76,245.78 97.46,242.07 97.46,237.49 Z\" id=\"Path\" stroke=\"#000000\" strokeLinecap=\"round\" strokeLinejoin=\"round\"/>\n                <path d=\"M92.88,144.43 C92.88,144.43 89.47,232.77 98.95,239.81\" id=\"Path\" stroke=\"#000000\" strokeLinecap=\"round\" strokeLinejoin=\"round\"/>\n                <path d=\"M178.32,144.43 C178.32,144.43 184.86,236.09 172.7,240.22\" id=\"Path\" stroke=\"#000000\" strokeLinecap=\"round\" strokeLinejoin=\"round\"/>\n                <path d=\"M175.71,153.89 C175.71,153.89 178.71,219.51 170.14,230.34 C170.14,230.34 171.65,236.64 135.66,236.64 C99.67,236.64 101.01,230.34 101.01,230.34 C95.66,220.88 96.77,153.89 96.77,153.89\" id=\"Path\" stroke=\"#000000\" fill={props.colorResult} strokeLinecap=\"round\" strokeLinejoin=\"round\"/>\n                <path d=\"M101,230.34 C101,227.16 116.48,224.58 135.57,224.58 C154.66,224.58 170.13,227.16 170.13,230.34 C170.13,233.52 154.66,236.1 135.57,236.1 C116.48,236.1 101,233.52 101,230.34 Z\" id=\"HINTGLASS\" stroke=\"#000000\" fill={props.colorResult}/>\n                <path d=\"M96.79,153.38 C96.79,150.19 114.63,147.61 136.65,147.61 C158.67,147.61 176.5,150.19 176.5,153.38 C176.5,156.57 158.66,159.15 136.65,159.15 C114.64,159.15 96.79,156.57 96.79,153.38 Z\" id=\"Path\" stroke=\"#000000\" fill={props.colorResult}/>\n                <path d=\"M92.88,144.43 C92.88,141.49 112.01,139.09 135.6,139.09 C159.19,139.09 178.32,141.49 178.32,144.43 C178.32,147.37 159.2,149.77 135.6,149.77 C112,149.77 92.88,147.38 92.88,144.43 Z\" id=\"Path\" stroke=\"#000000\" strokeLinecap=\"round\" strokeLinejoin=\"round\"/>\n                <path d=\"M96.77,153.89 C96.77,153.89 102.58,159.37 136.24,159.37 C169.9,159.37 176.87,153.89 176.87,153.89\" id=\"Path\" stroke=\"#000000\" strokeLinecap=\"round\" strokeLinejoin=\"round\"/>\n\n                <text className=\"ColorHint__Title\" x=\"140\" y=\"113.2\">{props.name}</text>\n                <text className=\"ColorHint__Recipe\" x=\"140\" y=\"292.96\">Recipe:</text>\n\n                <text className=\"ColorHint__Question\" x=\"110\" y=\"420\">?</text>\n            </g>\n        </svg>\n    </div>;\n}\n\nexport default ColorHintLevel3;\n","import EndOfLevelGopher from './EndOfLevelGopher';\n\nexport * from './EndOfLevelGopher';\nexport default EndOfLevelGopher;\n","import * as React from 'react';\n\nimport './EndOfLevelGopher.css';\n\nconst EndOfLevelGopher = (props: { color: string, finalScreen?: boolean } = { color: 'cyan', finalScreen: false }) => {\n    const doFill = props.color !== 'rgb(0, 0, 0)';\n\n    return <svg className={props.finalScreen ? \"EndOfLevelGopher EndOfLevelGopher--final\" : \"EndOfLevelGopher\"} width=\"174px\" height=\"178px\" viewBox=\"0 0 174 178\" version=\"1.1\">\n        <g id=\"Page-1\" stroke=\"none\" strokeWidth=\"1\" fill=\"none\" fillRule=\"evenodd\">\n            <g id=\"gopher_game-02\" transform=\"translate(-268.000000, -32.000000)\">\n                <g id=\"glas\" transform=\"translate(269.000000, 33.000000)\">\n                    <circle id=\"Oval\" stroke=\"#000000\" strokeWidth=\"2\" fill=\"#5277FF\" cx=\"83.26\" cy=\"91.77\" r=\"82.58\"/>\n                    <path d=\"M32.73,57 C32.73,57 9.47,43.28 25,66.5\" id=\"Path\" stroke=\"#000000\" fill=\"#B9CAD8\"/>\n                    <path d=\"M89.26,45 C89.26,45 88.62,17.93 78.1,42\" id=\"Path\" stroke=\"#1D1D1B\" fill=\"#FDEA90\"/>\n                    <path d=\"M33,116.5 C33,116.5 -10.78,114.3 34.49,127.28\" id=\"Path\" stroke=\"#000000\" fill=\"#B9CAD8\"/>\n                    <path d=\"M112.29,82.79 C112.29,82.79 131.03,59.07 127.21,75.22 C124.1,88.37 116.86,95.22 116.86,95.22\" id=\"Path\" stroke=\"#1D1D1B\" fill=\"#FDEA90\" strokeLinecap=\"round\" strokeLinejoin=\"round\"/>\n                    <path d=\"M104.85,151.32 C104.85,151.32 108.14,166.58 102.93,168.5 C98.27,170.22 93.18,157.19 93.18,157.19\" id=\"Path\" stroke=\"#1D1D1B\" fill=\"#D9BFA5\"/>\n                    <path d=\"M67.39,161.08 C67.39,161.08 61.85,179.08 56.39,175.53 C54.29,174.16 54.75,159.53 54.75,159.53\" id=\"Path\" stroke=\"#1D1D1B\" fill=\"#D9BFA5\"/>\n                    <path d=\"M119.4,105 C119.4,105 110.57,79.92 109.83,76.5 C109.09,73.08 104.83,41.37 73.01,41.79 C41.19,42.21 25.01,66.53 25.01,66.53 C25.01,66.53 14.76,84.29 28.08,104.44 C35.86,116.21 35.61,131.92 36.74,135.93 C37.87,139.94 37.83,165.47 77.74,160.24 C117.65,155.01 125.29,129.47 119.4,105 Z\" id=\"Path\" stroke=\"#000000\" fill=\"#B9CAD8\"/>\n                    <ellipse id=\"Oval\" stroke=\"#1D1D1B\" fill=\"#FFFFFF\" strokeLinecap=\"round\" strokeLinejoin=\"round\" transform=\"translate(94.399428, 71.745045) rotate(-7.020000) translate(-94.399428, -71.745045) \" cx=\"94.3994283\" cy=\"71.745045\" rx=\"18.68\" ry=\"18.55\"/>\n                    <ellipse id=\"Oval\" stroke=\"#1D1D1B\" fill=\"#FFFFFF\" strokeLinecap=\"round\" strokeLinejoin=\"round\" transform=\"translate(40.513221, 89.745096) rotate(-7.020000) translate(-40.513221, -89.745096) \" cx=\"40.5132214\" cy=\"89.7450962\" rx=\"18.68\" ry=\"18.55\"/>\n                    <path d=\"M75.21,90.69 L76.27,97.69 C76.27,97.69 72.6,96.69 70.74,98.94 L68,93.24\" id=\"Path\" stroke=\"#1D1D1B\" fill=\"#FFFFFF\" strokeLinecap=\"round\" strokeLinejoin=\"round\"/>\n                    <path d=\"M73.69,82.74 C73.69,82.74 83.53,90.52 75.21,90.69 C70.21,90.79 69.56,91.69 68.33,92.78 C67.1,93.87 61.73,96.65 63.25,89.65 L65.25,85.51\" id=\"Path\" stroke=\"#1D1D1B\" fill=\"#D9BFA5\"/>\n                    <ellipse id=\"Oval\" stroke=\"#1D1D1B\" fill=\"#1D1D1B\" strokeLinecap=\"round\" strokeLinejoin=\"round\" transform=\"translate(69.135971, 83.261826) rotate(-16.050000) translate(-69.135971, -83.261826) \" cx=\"69.1359714\" cy=\"83.2618264\" rx=\"4.55\" ry=\"2.08\"/>\n                    <ellipse id=\"Oval\" stroke=\"#1D1D1B\" fill=\"#1D1D1B\" transform=\"translate(104.411551, 63.781337) rotate(-7.020000) translate(-104.411551, -63.781337) \" cx=\"104.411551\" cy=\"63.7813366\" rx=\"2.58\" ry=\"2.7\"/>\n                    <circle id=\"Oval\" stroke=\"#1D1D1B\" fill=\"#1D1D1B\" cx=\"49.87\" cy=\"85.2\" r=\"2.81\"/>\n                    <path d=\"M112.16,83 C112.16,83 130.9,59.28 127.08,75.42 C123.96,88.58 116.72,95.42 116.72,95.42\" id=\"Path\" stroke=\"#000000\" fill=\"#B9CAD8\"/>\n                    <path d=\"M105,151.6 C105,151.6 108.28,166.85 103.08,168.78 C98.42,170.5 93.33,157.47 93.33,157.47\" id=\"Path\" stroke=\"#1D1D1B\" fill=\"#1D1D1B\" opacity=\"0.2\"/>\n                    <path d=\"M61,161.18 C61,161.18 60,172.86 56.09,173.03 C52.18,173.2 57.09,176.76 59.48,175.03 C61.87,173.3 67.48,161.03 67.48,161.03\" id=\"Path\" fill=\"#1D1D1B\" opacity=\"0.2\"/>\n                    <path d=\"M89.14,44.39 C89.14,44.39 88.51,17.32 77.98,41.39\" id=\"Path\" stroke=\"#000000\" fill=\"#B9CAD8\"/>\n                    <path d=\"M75.89,42.64 C75.89,42.64 89.99,42.79 98.42,52.75 C98.42,52.75 92.23,52.15 87.69,53.53 C87.69,53.53 91,49 75.89,42.64 Z\" id=\"Path\" fill=\"#000000\" opacity=\"0.1\"/>\n                    <path d=\"M110.76,82.26 C106.765399,88.2001221 99.9006926,91.5523872 92.76,91.05 C92.76,91.05 105.88,92.38 109.14,101.05 C117.87,124.25 110.77,149.47 82.89,158.52 C82.89,158.52 130.07,152.89 118.64,105.59 L110.76,82.26 Z\" id=\"Path\" fill=\"#000000\" opacity=\"0.1\"/>\n                    <path d=\"M74.9,91.18 L75.7,97.01 C75.1479141,96.9574541 74.5920859,96.9574541 74.04,97.01 L72.65,91.29 L74.9,91.18 Z\" id=\"Path\" fill=\"#000000\" opacity=\"0.1\"/>\n                    <path d=\"M97.08,54.14 C97.08,54.14 114.44,55.88 112.18,74.43 C110.34,89.6 94,89.5700002 94,89.5700002 C94,89.5700002 114.51,81.57 104.36,61.07 C103.06,58.37 99.69,56.49 97.08,54.14 Z\" id=\"Path\" fill=\"#000000\" opacity=\"0.1\"/>\n                    <path d=\"M43.35,72.33 C43.35,72.33 60.71,74.06 58.46,92.61 C56.61,107.78 40.3,107.75 40.3,107.75 C40.3,107.75 60.81,99.75 50.67,79.25 C49.34,76.56 46,74.67 43.35,72.33 Z\" id=\"Path\" fill=\"#000000\" opacity=\"0.1\"/>\n                    <path d=\"M149.25,26.74 C148.47,25.45 139.5,29.42 129.25,35.6 C119,41.78 111.25,47.84 112,49.13 C112,49.13 131.38,84.43 138.54,88.75 C138.767057,88.9453487 139.044107,89.0734844 139.34,89.12 L139.44,89.12 L139.62,89.12 C142.55,89.43 149.71,86.64 157.42,82.01 C164.84,77.55 170.53,72.74 171.92,69.95 C176.12,65 149.25,26.74 149.25,26.74 Z\" id=\"Path\" fill=\"#D3E3EF\"/>\n                    <path d=\"M138.08,88.68 C136.88,86.68 143.46,80.52 152.78,74.93 C162.1,69.34 170.62,66.42 171.78,68.42 C172.94,70.42 166.4,76.58 157.09,82.17 C147.78,87.76 139.28,90.68 138.08,88.68 Z\" id=\"Path\" stroke=\"#000000\" strokeWidth=\"0.5\" strokeLinecap=\"round\" strokeLinejoin=\"round\"/>\n                    {doFill && <path d=\"M163.22,53.69 C163.22,53.69 168.51,59.8 167.59,66.78 C167.59,66.78 169.9,69.14 154.19,78.57 C138.48,88 137.41,84.9 137.41,84.9 C132.59,82.17 120.41,60.12 120.41,60.12\" id=\"Path\" className=\"EndOfLevelGopherFill\" fill={props.color}/>}\n                    <path d=\"M111.7,49.25 C110.92,47.96 118.65,41.91 128.95,35.72 C139.25,29.53 148.22,25.57 148.95,26.86 C149.68,28.15 141.95,34.2 131.7,40.39 C121.45,46.58 112.47,50.54 111.7,49.25 Z\" id=\"Path\" stroke=\"#000000\" strokeWidth=\"0.5\" strokeLinecap=\"round\" strokeLinejoin=\"round\"/>\n                    <path d=\"M111.7,49.25 C111.7,49.25 133.36,88.71 139.34,89.3\" id=\"Path\" stroke=\"#000000\" strokeWidth=\"0.5\" strokeLinecap=\"round\" strokeLinejoin=\"round\"/>\n                    <path d=\"M149,26.86 C149,26.86 175.87,65.16 171.65,70.15\" id=\"Path\" stroke=\"#000000\" strokeWidth=\"0.5\" strokeLinecap=\"round\" strokeLinejoin=\"round\"/>\n                    <path d=\"M137.76,84.62 C136.93,83.24 143.01,78.05 151.34,73.05 C159.67,68.05 167.11,65.12 167.94,66.51 C168.77,67.9 162.69,73.08 154.36,78.08 C146.03,83.08 138.59,86 137.76,84.62 Z\" id=\"Path\" stroke=\"#000000\" strokeWidth=\"0.5\" strokeLinecap=\"round\" strokeLinejoin=\"round\"/>\n                    <path d=\"M114.78,50.72 C114.78,50.72 132.95,81.89 137.78,84.62\" id=\"Path\" stroke=\"#000000\" strokeWidth=\"0.5\" strokeLinecap=\"round\" strokeLinejoin=\"round\"/>\n                    <path d=\"M149.28,30.53 C149.28,30.53 168.86,59.53 167.94,66.53\" id=\"Path\" stroke=\"#000000\" strokeWidth=\"0.5\" strokeLinecap=\"round\" strokeLinejoin=\"round\"/>\n                    {doFill && <path d=\"M120.09,59.8 C119.86,58.19 129.34,55.53 141.25,53.86 C153.16,52.19 163,52.13 163.25,53.74 C163.5,55.35 154,58 142.07,59.68 C130.14,61.36 120.31,61.41 120.09,59.8 Z\" id=\"Path\" stroke=\"#000000\" strokeWidth=\"0.5\" className=\"EndOfLevelGopherFill\" fill={props.color}/>}\n                    {doFill && <path d=\"M144.28,17.8 C145.08,15.2 145.75,12.15 148.17,10.45 C148.899707,9.9914837 149.748464,9.75842341 150.61,9.78 C153.18,9.72 154.08,11.78 153.28,14.17 C152.28,17.17 149.28,16.71 146.89,17.17 C146.039008,17.4521252 145.165988,17.6628542 144.28,17.8 Z\" id=\"Path\" stroke=\"#000000\" strokeWidth=\"0.5\" className=\"EndOfLevelGopherFill\" fill={props.color}/>}\n                    {doFill && <path d=\"M156.62,3.39 C158.88,1.88 161.34,-0.05 164.29,0.17 C165.140194,0.274071347 165.942287,0.621298002 166.6,1.17 C168.6,2.76 168.02,4.9 165.88,6.26 C163.22,7.95 161.18,5.69 159.02,4.54 C158.188742,4.22563978 157.385828,3.84091042 156.62,3.39 Z\" id=\"Path\" stroke=\"#000000\" strokeWidth=\"0.5\" className=\"EndOfLevelGopherFill\" fill={props.color}/>}\n                </g>\n            </g>\n        </g>\n    </svg>;\n}\n\nexport default EndOfLevelGopher;\n","import LevelBox from './LevelBox';\n\nexport * from './LevelBox';\nexport default LevelBox;\n","import cx from 'classnames';\nimport * as React from 'react';\n\nimport { Level } from '../../reducers/level.reducer';\n\nimport './LevelBox.css';\n\nconst LevelBox = (props: { level: Level }) => {\n    const levelElement = props.level > 0\n        ? `${props.level}/3`\n        : 'Training';\n    const levelClasses = cx('LevelBox__Level', {\n        'LevelBox__Level--Training': props.level === 0\n    });\n\n    return <svg className=\"LevelBox\" width=\"137px\" height=\"108px\" viewBox=\"0 0 137 108\" version=\"1.1\">\n        <g id=\"Page-1\" stroke=\"none\" strokeWidth=\"1\" fill=\"none\" fillRule=\"evenodd\">\n            <g id=\"gopher_game_Zeichenfläche-1\" transform=\"translate(-854.000000, -24.000000)\">\n                <g id=\"timer\" transform=\"translate(684.000000, 25.000000)\">\n                    <rect id=\"Rectangle\" stroke=\"#000000\" strokeWidth=\"2\" fill=\"#898588\" strokeLinecap=\"round\" strokeLinejoin=\"round\" x=\"179\" y=\"0\" width=\"127\" height=\"100\" rx=\"17.2\"/>\n                    <rect id=\"Rectangle\" stroke=\"#000000\" strokeWidth=\"2\" fill=\"#FFFFFF\" strokeLinecap=\"round\" strokeLinejoin=\"round\" x=\"171.32\" y=\"6\" width=\"127\" height=\"100\" rx=\"17.2\"/>\n                    <text className=\"LevelBox__Title\" x=\"210\" y=\"34\">\n                        Level:\n                    </text>\n                    <text className={levelClasses} x=\"232\" y=\"81\" data-level={props.level}>\n                        {levelElement}\n                    </text>\n                    <path d=\"M178,9 L189.23,1\" id=\"Path\" stroke=\"#000000\" strokeWidth=\"2\" fill=\"#898588\" strokeLinecap=\"round\" strokeLinejoin=\"round\"/>\n                    <path d=\"M291.39,103.49 L302.03,94.47\" id=\"Path\" stroke=\"#000000\" strokeWidth=\"2\" fill=\"#898588\" strokeLinecap=\"round\" strokeLinejoin=\"round\"/>\n                </g>\n            </g>\n        </g>\n    </svg>;\n};\n\nexport default LevelBox;\n","import PreLevel from './PreLevel';\n\nexport * from './PreLevel';\nexport default PreLevel;","import * as React from 'react';\n\nimport './PreLevel.css';\n\nconst PreLevel = (props: { title: string, training?: boolean }) => {\n    return <div className=\"PreLevel\">\n        {props.training ? <svg width=\"520px\" height=\"372px\" viewBox=\"0 0 520 372\" version=\"1.1\">\n                <g id=\"Page-1\" stroke=\"none\" strokeWidth=\"1\" fill=\"none\" fillRule=\"evenodd\">\n                    <path d=\"M513.224461,316.757826 L513.224461,331.694735 C497.224461,355.694735 480.84,371 462,371 L35.11,371 C16.2715672,371 1,355.728433 1,336.89 L1,58.11 C1,39.27 4.17563262,42.0267284 25.1756326,13.0267284\" id=\"Path\" stroke=\"#000000\" strokeWidth=\"2\" fill=\"#AAAAAA\" strokeLinecap=\"round\" strokeLinejoin=\"round\"/>\n                    <rect id=\"Rectangle\" stroke=\"#000000\" strokeWidth=\"2\" fill=\"#5277FF\" x=\"17.02\" y=\"1\" width=\"501\" height=\"347\" rx=\"34.11\"/>\n                    <text id=\"Level-2\" fill=\"#FFFFFF\" fontFamily=\"LeckerliOne\" fontSize=\"72\" fontWeight=\"normal\">\n                        <tspan x=\"131\" y=\"211\">Training</tspan>\n                    </text>\n                    <text id=\"Level-2\" fill=\"#FFFFFF\" fontFamily=\"LeckerliOne\" fontSize=\"28\" fontWeight=\"normal\">\n                        <tspan x=\"157\" y=\"128\">let’s start with a</tspan>\n                    </text>\n                    <path d=\"M411.015306,225.826145 C386.348639,224.592812 361.641972,223.969478 336.895306,223.956145 C312.195306,223.846145 287.495306,224.336145 262.895306,225.746145 C250.595306,226.466145 238.315306,227.456145 226.085306,228.816145 C213.855306,230.176145 201.675306,231.546145 189.525306,233.196145 C183.445306,233.986145 177.395306,234.936145 171.375306,235.996145 C165.355306,237.056145 159.375306,238.256145 153.375306,239.596145 C141.485306,242.396145 129.715306,245.826145 118.595306,251.226145 C118.408381,251.330698 118.172271,251.269462 118.059723,251.08724 C117.947174,250.905019 117.998128,250.666479 118.175306,250.546145 C123.235456,246.843443 128.656234,243.660662 134.355306,241.046145 C140.046338,238.409024 145.890122,236.114921 151.855306,234.176145 C157.855306,232.176145 163.855306,230.566145 169.925306,229.076145 C175.995306,227.586145 182.145306,226.416145 188.285306,225.286145 C200.569253,223.175876 212.956752,221.720487 225.395306,220.926145 C231.595306,220.516145 237.805306,220.216145 244.015306,219.926145 C250.225306,219.636145 256.425306,219.466145 262.625306,219.316145 C287.435306,218.706145 312.235306,219.016145 336.985306,219.926145 C349.365306,220.446145 361.728639,221.112812 374.075306,221.926145 C386.435306,222.746145 398.775306,223.716145 411.075306,224.986145 C411.296219,225.002714 411.461874,225.195231 411.445306,225.416145 C411.428737,225.637059 411.236219,225.802714 411.015306,225.786145 L411.015306,225.826145 Z\" id=\"Path\" fill=\"#FFFFFF\"/>\n                </g>\n            </svg> : <svg width=\"520px\" height=\"372px\" viewBox=\"0 0 520 372\" version=\"1.1\">\n                <g id=\"Page-1\" stroke=\"none\" strokeWidth=\"1\" fill=\"none\" fillRule=\"evenodd\">\n                    <path d=\"M513.224461,316.757826 L513.224461,331.694735 C497.224461,355.694735 480.84,371 462,371 L35.11,371 C16.2715672,371 1,355.728433 1,336.89 L1,58.11 C1,39.27 4.17563262,42.0267284 25.1756326,13.0267284\" id=\"Path\" stroke=\"#000000\" strokeWidth=\"2\" fill=\"#AAAAAA\" strokeLinecap=\"round\" strokeLinejoin=\"round\"/>\n                    <rect id=\"Rectangle\" stroke=\"#000000\" strokeWidth=\"2\" fill=\"#5277FF\" x=\"17.02\" y=\"1\" width=\"501\" height=\"347\" rx=\"34.11\"/>\n                    <text id=\"Level-2\" fill=\"#FFFFFF\" fontFamily=\"LeckerliOne\" fontSize=\"72\" fontWeight=\"normal\">\n                        <tspan x=\"140.06\" y=\"138.14\">{props.title}</tspan>\n                    </text>\n                    <path d=\"M405,157.94 C380.333333,156.706667 355.626667,156.083333 330.88,156.07 C306.18,155.96 281.48,156.45 256.88,157.86 C244.58,158.58 232.3,159.57 220.07,160.93 C207.84,162.29 195.66,163.66 183.51,165.31 C177.43,166.1 171.38,167.05 165.36,168.11 C159.34,169.17 153.36,170.37 147.36,171.71 C135.47,174.51 123.7,177.94 112.58,183.34 C112.393075,183.444553 112.156966,183.383317 112.044417,183.201095 C111.931868,183.018873 111.982822,182.780334 112.16,182.66 C117.22015,178.957298 122.640928,175.774517 128.34,173.16 C134.031033,170.522878 139.874817,168.228776 145.84,166.29 C151.84,164.29 157.84,162.68 163.91,161.19 C169.98,159.7 176.13,158.53 182.27,157.4 C194.553948,155.289731 206.941446,153.834342 219.38,153.04 C225.58,152.63 231.79,152.33 238,152.04 C244.21,151.75 250.41,151.58 256.61,151.43 C281.42,150.82 306.22,151.13 330.97,152.04 C343.35,152.56 355.713333,153.226667 368.06,154.04 C380.42,154.86 392.76,155.83 405.06,157.1 C405.280914,157.116569 405.446568,157.309086 405.43,157.53 C405.413431,157.750914 405.220914,157.916569 405,157.9 L405,157.94 Z\" id=\"Path\" fill=\"#FFFFFF\"/>\n                    <text id=\"points-are-counting\" fill=\"#FFFFFF\" fontFamily=\"ArialMT, Arial\" fontSize=\"26\" fontWeight=\"normal\">\n                        <tspan x=\"141.28\" y=\"228.3\">points are counting</tspan>\n                    </text>\n                    <text id=\"time-is-running\" fill=\"#FFFFFF\" fontFamily=\"ArialMT, Arial\" fontSize=\"26\" fontWeight=\"normal\">\n                        <tspan x=\"141\" y=\"266\">time is running</tspan>\n                    </text>\n                    <path d=\"M384.61,211.5 C384.61,211.5 384.52,245.56 390.45,246.92 C396.38,248.28 390.23,217.85 402.64,211.6 C402.64,211.6 387.73,209.69 384.61,211.5 Z\" id=\"Path\" stroke=\"#000000\" fill=\"#D000C2\"/>\n                    <ellipse id=\"Oval\" stroke=\"#000000\" fill=\"#D000C2\" transform=\"translate(392.201675, 259.465756) rotate(-2.140000) translate(-392.201675, -259.465756) \" cx=\"392.201675\" cy=\"259.465756\" rx=\"3.5\" ry=\"6.5\"/>\n                </g>\n            </svg>}\n    </div>;\n};\n\nexport default PreLevel;","import ScoreHelper from './ScoreHelper';\n\nexport * from './ScoreHelper';\nexport default ScoreHelper;","import * as React from 'react';\n\nimport './ScoreHelper.css';\n\nexport const ScoreHelper = (props: { colorAccuracy: number, colorScore: number, fillBonus: number, totalScore: number, timeBonus?: number }) => {\n    let titleText = '';\n    const { totalScore: score } = props;\n\n    if (score > 10500) {\n        titleText = 'Holy Moly! That was Epic!';\n    } else if (score > 10000) {\n        titleText = 'Fantastic!';\n    } else if (score > 9000) {\n        titleText = 'Awesome!'\n    } else if (score > 8000) {\n        titleText = 'Great work!';\n    } else if (score > 5000) {\n        titleText = 'Not bad!';\n    } else if (score > 2000) {\n        titleText = 'Gopher says you can do better!'\n    } else {\n        titleText = \"Gopher won't touch your drink!\";\n    }\n    return <div className=\"ScoreHelper\">\n        <div className=\"ScoreHelper__Title\">{titleText}</div>\n\n        <div className=\"ScoreHelper__Taste\">{props.colorAccuracy}% Taste</div>\n\n        <div className=\"ScoreHelper__DetailScoreWrapper\">\n            <div className=\"ScoreHelper__DetailsScoreWrapperTaste\">\n                <div>taste:</div>\n                <div>{props.colorScore}</div>\n            </div>\n            <div className=\"ScoreHelper__DetailsScoreWrapperFill\">\n                <div>+ generousity:</div>\n                <div \n                    className={props.fillBonus<0 ? 'ScoreHelper__FillBonus--Penalty ScoreHelper__Gauge' : 'ScoreHelper__Gauge'}\n                >{props.fillBonus}</div>\n            </div>\n            {typeof props.timeBonus !== 'undefined' && <div className=\"ScoreHelper__DetailsScoreWrapperTime\">\n                <div>+ speed</div>\n                <div>{props.timeBonus}</div>\n            </div>}\n            <div className=\"ScoreHelper__DetailsScoreWrapperTotal\">\n                <div>total score</div>\n                <div>{props.totalScore}</div>\n            </div>\n        </div>\n    </div>;\n}\n\nexport default ScoreHelper;\n","import * as React from 'react';\nimport { LoopContext } from '../Loop';\n\nimport './Spilled.css';\n\nclass Spilled extends React.PureComponent<any, any> {\n    public static contextType = LoopContext;\n\n    public componentDidMount() {       \n        setTimeout(() => {\n            this.context.destroy(this.props.particleIndex);\n        }, 2000);\n    }\n\n    public render() {\n        return <svg className=\"Spilled\" width=\"344px\" height=\"404px\" viewBox=\"0 0 344 404\" version=\"1.1\">\n            <g stroke=\"none\" strokeWidth=\"1\" fill=\"none\" fillRule=\"evenodd\">\n                <text stroke=\"#000000\" transform=\"translate(216.766947, 35.925425) rotate(-12.000000) translate(-216.766947, -35.925425) \" fontFamily=\"LeckerliOne\" fontSize=\"50\" fontWeight=\"bold\" fill=\"#FF0000\">\n                    <tspan x=\"126.266947\" y=\"54.9254247\">Spilled!</tspan>\n                </text>\n                <path d=\"M2.93496713,375.79524 L23.6780159,398.832729 L172.156024,265.142531 L318.278202,401.403666 L339.420151,378.731702 L195.281513,244.320247 L341.744001,112.44483 L321.000952,89.4073404 L172.522945,223.097539 L26.4007666,86.8364035 L5.25881745,109.508368 L149.397456,243.919823 L2.93496713,375.79524 Z\" id=\"Combined-Shape\" stroke=\"#000000\" strokeWidth=\"3\" fill=\"#EC0000\"/>\n            </g>\n        </svg>\n    }\n}\n\nexport default Spilled;\n","import Spilled from './Spilled';\nexport * from './Spilled';\nexport default Spilled;","import Table from './Table';\nexport * from './Table';\nexport default Table;","import * as React from 'react';\n\nimport './Table.css';\n\nconst Table = () => <svg className=\"Table\" width=\"1280px\" height=\"176px\" viewBox=\"0 0 1280 176\">\n    <g stroke=\"none\" strokeWidth=\"1\" fill=\"none\" fillRule=\"evenodd\">\n        <g transform=\"translate(2.000000, -595.000000)\" fill=\"#D9D2A6\" stroke=\"#000000\" strokeWidth=\"2\">\n            <g id=\"Ebene_1\" transform=\"translate(0.000000, 595.000000)\">\n                <path d=\"M1280,175 L0,174 L0.624390244,141.6 L186.917463,13.91 C199.273355,5.44820007 215.041874,0.86135957 231.299122,1 L711.804878,5.24 L1280,10.47 L1280,175 Z\" id=\"Path\"/>\n            </g>\n        </g>\n    </g>\n</svg>;\n\nexport default Table;\n","import cx from 'classnames';\nimport * as React from 'react';\n\nimport './TimeBox.css';\n\nconst TimeBox = (props: { time: number }) => {\n\n    const timeElement = Math.floor(props.time/100)/10;\n    const timeClassNames = cx('TimeBox', {\n        'TimeBox--warn': props.time < 5000\n    });\n\n    return <svg className={timeClassNames} width=\"137px\" height=\"108px\" viewBox=\"0 0 137 108\" version=\"1.1\">\n        <g id=\"Page-1\" stroke=\"none\" strokeWidth=\"1\" fill=\"none\" fillRule=\"evenodd\">\n            <g id=\"gopher_game_Zeichenfläche-1\" transform=\"translate(-854.000000, -24.000000)\">\n                <g id=\"timer\" transform=\"translate(684.000000, 25.000000)\">\n                    <rect id=\"Rectangle\" stroke=\"#000000\" strokeWidth=\"2\" fill=\"#898588\" strokeLinecap=\"round\" strokeLinejoin=\"round\" x=\"179\" y=\"0\" width=\"127\" height=\"100\" rx=\"17.2\"/>\n                    <rect id=\"Rectangle\" stroke=\"#000000\" strokeWidth=\"2\" fill=\"#FFFFFF\" strokeLinecap=\"round\" strokeLinejoin=\"round\" x=\"171.32\" y=\"6\" width=\"127\" height=\"100\" rx=\"17.2\"/>\n                    <text className=\"TimeBox__Title\" x=\"195\" y=\"34\">\n                        Time left:\n                    </text>\n                    <text className=\"TimeBox__Time\" x=\"232\" y=\"81\">\n                        {timeElement}\n                    </text>\n                    <path d=\"M178,9 L189.23,1\" id=\"Path\" stroke=\"#000000\" strokeWidth=\"2\" fill=\"#898588\" strokeLinecap=\"round\" strokeLinejoin=\"round\"/>\n                    <path d=\"M291.39,103.49 L302.03,94.47\" id=\"Path\" stroke=\"#000000\" strokeWidth=\"2\" fill=\"#898588\" strokeLinecap=\"round\" strokeLinejoin=\"round\"/>\n                </g>\n            </g>\n        </g>\n    </svg>;\n};\n\nexport default TimeBox;\n","// tslint:disable\n\nconst ADJECTIVES = [\n    'Funky',\n    'Prancing',\n    'Light',\n    'Long',\n    'Neat',\n    'Sparkling',\n    'Stiff',\n    'Still',\n    'Vintage',\n    'Soft',\n    'Cool',\n    'Bitter',\n    'Quick',\n    'Fuzzy'\n];\n\nconst DRINK_NAMES = [\n    'Fizzer',\n    'Gulp',\n    'Slurp',\n    'Crush',\n    'Punch',\n    'Buzz',\n    'Flash',\n    'Splash',\n    'Sour',\n    'Shot',\n    'Delight',\n    'Stinger',\n    'Dream',\n    'Shandy',\n    'Sunset',\n    'Tincture',\n    'Goblet',\n    'Royale',\n    'Grog',\n    'Toddy',\n    'Blitz',\n    'Chiller',\n    'Spritz'\n];\n\nexport const getRandomDrink = () => {\n    const randomSuffix = DRINK_NAMES[(DRINK_NAMES.length * Math.random()) << 0];\n  \n    const randomAdjective =\n      ADJECTIVES[(ADJECTIVES.length * Math.random()) << 0];\n  \n    return `${randomAdjective} ${randomSuffix}`;\n  };\n  \nexport default getRandomDrink;\n","import * as React from 'react';\nimport { connect, DispatchProp } from 'react-redux';\nimport { LoopContext } from '../../components/Loop';\n\nimport {\n    CocktailGlass,\n    ColorTap,\n    Gopher,\n    Modal,\n    SpeechBubble,\n    WaterParticle\n} from '../../components';\n\nimport { AppState } from '../../reducers';\nimport { ButtonsActionType } from '../../reducers/buttons.reducer';\nimport { ScoreActionType } from '../../reducers/score.reducer';\nimport { SettingsActionType } from '../../reducers/settings.reducer';\n\nimport { calcTargetColor1, calculateFillColor, colorDistanceNormalized, getShuffledColors, postLevelStats, postSpill, RGBColor, toColorString } from '../../utils';\n\nimport ButtonLegend from '../../components/ButtonLegend';\nimport { ColorHintLevel1 } from '../../components/ColorHints';\nimport ContinueButton from '../../components/ContinueButton';\nimport EndOfLevelGopher from '../../components/EndOfLevelGopher';\nimport LevelBox from '../../components/LevelBox';\nimport PreLevel from '../../components/PreLevel';\nimport ScoreHelper from '../../components/ScoreHelper';\nimport Spilled from '../../components/Spilled';\nimport Table from '../../components/Table';\nimport TimeBox from '../../components/TimeBox/TimeBox';\nimport { FillActionType, FillState } from '../../reducers/fills.reducer';\nimport getRandomDrink from '../../utils/randomDrink';\n\ninterface Level1State {\n    next: boolean;\n    timeLeft: number;\n    timedMessaged: string | null;\n\n    finalFills: FillState | null;\n    finalFillPercent: number | null;\n}\n\nclass Level1 extends React.Component<any & DispatchProp, Level1State> {\n    public static contextType = LoopContext;\n    private loopId: number | null = null;\n    private scoreSubmitted = false;\n    private TARGET_COLOR: RGBColor;\n    private COLORS: string[];\n    private DRINK_NAME: string;\n    \n    private intermediateScore = -1;\n\n    constructor(props: any) {\n        super(props);\n\n        this.COLORS = getShuffledColors();\n        this.TARGET_COLOR = calcTargetColor1(this.COLORS);\n        this.DRINK_NAME = getRandomDrink();\n\n        this.state = {\n            finalFillPercent: null,\n            finalFills: null,\n            next: false,\n            timeLeft: 27000,\n            timedMessaged: null,\n        }\n    }\n\n    public dispatchIntermediateScore() {\n        // calculate score\n        if (!this.state.finalFills) {\n            const finalColor = calculateFillColor(this.props.fills);\n            const colorAccuracy = 1 - colorDistanceNormalized(finalColor, this.TARGET_COLOR);\n            const fillBonus = this.props.fillPercent < 85\n                ? -(85 - this.props.fillPercent)/85*50\n                : Math.max(Math.abs(this.props.fillPercent - 90)/17*5, 0);\n\n            const timeBonus = Math.min(this.state.timeLeft/1000, 15) / 15 * 5;\n\n            const colorScore = Math.round(colorAccuracy*10000);\n            const fillBonusScore = Math.round(colorAccuracy*10000*fillBonus/100);\n            const timeBonusScore = Math.round(colorAccuracy*10000*timeBonus/100); \n\n            const totalScore = colorScore\n                            + fillBonusScore\n                            + timeBonusScore;\n\n            if (this.intermediateScore !== totalScore) {\n                const event = new CustomEvent('intermediateScore', { detail: { totalScore, level: this.props.level }});\n                window.dispatchEvent(event);\n            }\n\n            this.intermediateScore = totalScore;\n        }\n    }\n\n    public componentDidMount() {\n        this.loopId = this.context.register(this.loop);\n        this.props.dispatch({\n            payload: {\n                capacity: 400,\n                fillrate: 50\n            },\n            type: SettingsActionType.SET_SETTINGS\n        });\n    }\n\n    public componentWillUnmount() {\n        this.context.unregister(this.loopId);\n    }\n\n    public loop = (timestamp: DOMHighResTimeStamp, dt: number) => {\n        if (this.state.timeLeft > 0 && this.state.timeLeft > dt) {\n            this.setState(state => ({\n                timeLeft: state.timeLeft - dt\n            }), () => this.dispatchIntermediateScore());\n        } else {\n            this.setState({\n                timeLeft: 0\n            });\n        }\n        if (this.props.activeButton !== null) {\n            this.context.spawn(<WaterParticle fillValue={this.props.settings.fillRate*dt/1000} color={this.props.activeButton}/>)\n        }\n    }\n\n    private get speechBubble() {\n        const { fillPercent } = this.props;\n        let message;\n        if ( this.state.timedMessaged) {\n            message = this.state.timedMessaged;\n        } else if (fillPercent < 10) {\n            message = \"I'm thirsty, go pour me a drink\";\n        } else if (fillPercent < 40) {\n            message = \"Nice, keep going\";\n        } else if (fillPercent < 80) {\n            message = \"Getting there\";\n        } else if (fillPercent < 93) {\n            message = \"Almost there\";\n        } else {\n            message = <>Hand me the drink with <ContinueButton/></>;\n        }\n        return <SpeechBubble>\n            {message}\n        </SpeechBubble>;\n    }\n\n    public componentDidUpdate(prevProps: any, prevState: Level1State) {\n        if (this.props.fillPercent > 107 && prevProps.fillPercent <= 107) {\n            this.context.spawn(<Spilled />);\n            postSpill();\n            this.props.dispatch({\n                type: FillActionType.RESET_FILL\n            });\n\n            this.setState({\n                timedMessaged: \"Oh no, you spilled over!\"\n            }, () => {\n                setTimeout(() => {\n                    this.setState({ timedMessaged: null });\n                }, 3000)\n            });\n        }\n        if (this.state.timeLeft === 0 && prevState.timeLeft > 0) {\n            this.setState({ finalFills: this.props.fills, finalFillPercent: this.props.fillPercent, next: true });\n        }\n        if (this.props.continue === true && prevProps.continue === false) {\n            if (this.props.fillPercent < 10) {\n                this.props.dispatch({\n                    payload: {\n                        key: 'continue',\n                        value: false\n                    },\n                    type: ButtonsActionType.SET_BUTTON\n                });\n                this.setState({\n                    timedMessaged: \"MORE pls!\"\n                }, () => {\n                    setTimeout(() => {\n                        this.setState({ timedMessaged: null });\n                    }, 3000)\n                });\n            } else {\n                this.setState({ finalFills: this.props.fills, finalFillPercent: this.props.fillPercent, next: true });\n            }\n        }\n    }\n\n    public render() {\n\n        const { next } = this.state;\n\n        if (next) {\n            this.context.unregister(this.loopId);\n\n            // calculate score\n            const finalColor = calculateFillColor(this.state.finalFills!);\n            const colorAccuracy = 1 - colorDistanceNormalized(finalColor, this.TARGET_COLOR);\n            const fillBonus = this.state.finalFillPercent! < 85\n                ? -(85 - this.state.finalFillPercent!)/85*50\n                : Math.max(Math.abs(this.state.finalFillPercent! - 90)/17*5, 0);\n\n            const timeBonus = Math.min(this.state.timeLeft/1000, 15) / 15 * 5;\n            \n            const colorScore = Math.round(colorAccuracy*10000);\n            const fillBonusScore = Math.round(colorAccuracy*10000*fillBonus/100);\n            const timeBonusScore = Math.round(colorAccuracy*10000*timeBonus/100); \n\n            const totalScore = colorScore\n                            + fillBonusScore\n                            + timeBonusScore;\n\n            if (this.scoreSubmitted === false) {\n                this.scoreSubmitted = true;\n                this.props.dispatch({\n                    payload: {\n                        level: 'level1',\n                        score: totalScore,\n                    },\n                    type: ScoreActionType.SET_SCORE\n                });\n                postLevelStats(Object.assign({}, this.state.finalFills, {\n                    level: this.props.level,\n                    points: totalScore\n                }));\n\n                const event = new CustomEvent('finalScore', { detail: { totalScore, level: this.props.level }});\n                window.dispatchEvent(event);\n            }\n            \n            return <div>\n                <Modal prompt={true}>\n                <LevelBox level={this.props.level} />\n                    <ColorHintLevel1\n                        name={this.DRINK_NAME}\n                        color60={this.COLORS[0]}\n                        color30={this.COLORS[1]}\n                        color10={this.COLORS[2]}\n                        colorResult={toColorString(this.TARGET_COLOR)}\n                    />\n\n                    <EndOfLevelGopher color={toColorString(finalColor!)}/>\n\n                    <ScoreHelper\n                        colorAccuracy={Math.round(colorAccuracy*10000)/100}\n                        colorScore={colorScore}\n                        fillBonus={fillBonusScore}\n                        totalScore={totalScore}\n                        timeBonus={timeBonusScore}\n                        />\n                </Modal>\n            </div>;\n        } else {\n            return <div>\n                <PreLevel title=\"Level 1\"/>\n                <Table />\n                <TimeBox time={this.state.timeLeft} />\n                <LevelBox level={this.props.level} />\n                <ColorHintLevel1\n                    name={this.DRINK_NAME}\n                    color60={this.COLORS[0]}\n                    color30={this.COLORS[1]}\n                    color10={this.COLORS[2]}\n                    colorResult={toColorString(this.TARGET_COLOR)}\n                />\n                <ColorTap active={this.props.activeButton === null ? undefined : this.props.activeButton}/>\n\n                <CocktailGlass fillPercent={this.props.fillPercent} fillColor={toColorString(this.props.fillColor)}/>\n\n                <ButtonLegend />\n\n                <Gopher reach={this.props.fillPercent > 50} speechBubble={this.speechBubble}/>\n            </div>;\n        }\n    }\n}\n\nconst mapStateToProps = (state: AppState) => {\n    return {\n        activeButton: Object.keys(state.buttons).reduce((acc, buttonKey) => {\n            return (['cyan', 'magenta', 'yellow'].includes(buttonKey) \n            && state.buttons[buttonKey] === true ? buttonKey : acc) as any;\n        }, null),\n        continue: state.buttons.continue,\n        fillColor: calculateFillColor(state.fills),\n        fillPercent: (state.fills.cyan + state.fills.magenta + state.fills.yellow)/state.settings.capacity*100,\n        fills: state.fills,\n        level: state.level,\n        settings: state.settings\n    }\n}\n\nexport default connect(mapStateToProps)(Level1);","import Level1 from './Level1';\n\nexport * from './Level1';\nexport default Level1;\n","import * as React from 'react';\nimport { connect, DispatchProp } from 'react-redux';\nimport { LoopContext } from '../../components/Loop';\n\nimport {\n    CocktailGlass,\n    ColorTap,\n    Gopher,\n    Modal,\n    SpeechBubble,\n    WaterParticle\n} from '../../components';\n\nimport { AppState } from '../../reducers';\nimport { ButtonsActionType } from '../../reducers/buttons.reducer';\nimport { FillActionType, FillState } from '../../reducers/fills.reducer';\nimport { ScoreActionType } from '../../reducers/score.reducer';\nimport { SettingsActionType } from '../../reducers/settings.reducer';\n\nimport { calcTargetColor2, calculateFillColor, colorDistanceNormalized, getShuffledColors, postLevelStats, postSpill, RGBColor, toColorString } from '../../utils';\n\nimport ButtonLegend from '../../components/ButtonLegend';\nimport { ColorHintLevel2 } from '../../components/ColorHints';\nimport EndOfLevelGopher from '../../components/EndOfLevelGopher';\nimport LevelBox from '../../components/LevelBox';\nimport PreLevel from '../../components/PreLevel';\nimport ScoreHelper from '../../components/ScoreHelper';\nimport Spilled from '../../components/Spilled';\nimport Table from '../../components/Table';\nimport TimeBox from '../../components/TimeBox/TimeBox';\nimport getRandomDrink from '../../utils/randomDrink';\n\ninterface Level2State {\n    next: boolean;\n    timeLeft: number;\n    timedMessaged: string | null;\n\n    finalFills: FillState | null;\n    finalFillPercent: number | null;\n}\n\nclass Level2 extends React.Component<any & DispatchProp, Level2State> {\n    public static contextType = LoopContext;\n    private loopId: number | null = null;\n    private scoreSubmitted = false;\n    private TARGET_COLOR: RGBColor;\n    private COLORS: string[];\n    private DRINK_NAME: string;\n\n    private intermediateScore = -1;\n\n    constructor(props: any) {\n        super(props);\n\n        this.COLORS = getShuffledColors();\n        this.TARGET_COLOR = calcTargetColor2(this.COLORS);\n        this.DRINK_NAME = getRandomDrink();\n\n        this.state = {\n            finalFillPercent: null,\n            finalFills: null,\n            next: false,\n            timeLeft: 22000,\n            timedMessaged: null,\n        }\n    }\n\n    public dispatchIntermediateScore() {\n        // calculate score\n        if (!this.state.finalFills) {\n            const finalColor = calculateFillColor(this.props.fills);\n            const colorAccuracy = 1 - colorDistanceNormalized(finalColor, this.TARGET_COLOR);\n            const fillBonus = this.props.fillPercent < 85\n                ? -(85 - this.props.fillPercent)/85*50\n                : Math.max(Math.abs(this.props.fillPercent - 90)/17*5, 0);\n\n            const timeBonus = Math.min(this.state.timeLeft/1000, 15) / 15 * 5;\n\n            const colorScore = Math.round(colorAccuracy*10000);\n            const fillBonusScore = Math.round(colorAccuracy*10000*fillBonus/100);\n            const timeBonusScore = Math.round(colorAccuracy*10000*timeBonus/100); \n\n            const totalScore = colorScore\n                            + fillBonusScore\n                            + timeBonusScore;\n\n            if (this.intermediateScore !== totalScore) {\n                const event = new CustomEvent('intermediateScore', { detail: { totalScore, level: this.props.level }});\n                window.dispatchEvent(event);\n            }\n\n            this.intermediateScore = totalScore;\n        }\n    }\n\n    public componentDidMount() {\n        this.loopId = this.context.register(this.loop);\n        this.props.dispatch({\n            payload: {\n                capacity: 250,\n                fillrate: 50\n            },\n            type: SettingsActionType.SET_SETTINGS\n        });\n    }\n\n    public componentWillUnmount() {\n        this.context.unregister(this.loopId);\n    }\n\n    public loop = (timestamp: DOMHighResTimeStamp, dt: number) => {\n        if (this.state.timeLeft > 0 && this.state.timeLeft > dt) {\n            this.setState(state => ({\n                timeLeft: state.timeLeft - dt\n            }), () => this.dispatchIntermediateScore());\n        } else {\n            this.setState({\n                timeLeft: 0\n            });\n        }\n        if (this.props.activeButton !== null) {\n            this.context.spawn(<WaterParticle fillValue={this.props.settings.fillRate*dt/1000} color={this.props.activeButton}/>)\n        }\n    }\n\n    private get speechBubble() {\n        const { fillPercent } = this.props;\n        let message;\n        if ( this.state.timedMessaged) {\n            message = this.state.timedMessaged;\n        } else if (fillPercent < 10) {\n            message = \"I'm thirsty, go pour me a drink\";\n        } else if (fillPercent < 40) {\n            message = \"Nice, keep going\";\n        } else if (fillPercent < 80) {\n            message = \"Getting there\";\n        } else if (fillPercent < 93) {\n            message = \"Almost there\";\n        } else {\n            message = \"Can i haz drink pls?\";\n        }\n        return <SpeechBubble>\n            {message}\n        </SpeechBubble>;\n    }\n\n    public componentDidUpdate(prevProps: any, prevState: Level2State) {\n        if (this.props.fillPercent > 107 && prevProps.fillPercent <= 107) {\n            this.context.spawn(<Spilled />);\n            postSpill();\n            this.props.dispatch({\n                type: FillActionType.RESET_FILL\n            });\n\n            this.setState({\n                timedMessaged: \"Oh no, you spilled over!\"\n            }, () => {\n                setTimeout(() => {\n                    this.setState({ timedMessaged: null });\n                }, 3000)\n            });\n        }\n        if (this.state.timeLeft === 0 && prevState.timeLeft > 0) {\n            this.setState({ finalFills: this.props.fills, finalFillPercent: this.props.fillPercent, next: true });\n        }\n        if (this.props.continue === true && prevProps.continue === false) {\n            if (this.props.fillPercent < 10) {\n                this.props.dispatch({\n                    payload: {\n                        key: 'continue',\n                        value: false\n                    },\n                    type: ButtonsActionType.SET_BUTTON\n                });\n                this.setState({\n                    timedMessaged: \"MORE pls!\",\n                }, () => {\n                    setTimeout(() => {\n                        this.setState({ timedMessaged: null });\n                    }, 3000)\n                });\n            } else if(this.state.next === false) {\n                this.setState({ finalFills: this.props.fills, finalFillPercent: this.props.fillPercent, next: true });\n            }\n        }\n    }\n\n    public render() {\n\n        const { next } = this.state;\n\n        if (next) {\n            this.context.unregister(this.loopId);\n\n            // calculate score\n            const finalColor = calculateFillColor(this.state.finalFills!);\n            const colorAccuracy = 1 - colorDistanceNormalized(finalColor, this.TARGET_COLOR);\n            const fillBonus = this.state.finalFillPercent! < 85\n                ? -(85 - this.state.finalFillPercent!)/85*50\n                : Math.max(Math.abs(this.state.finalFillPercent! - 90)/17*5, 0);\n\n            const timeBonus = Math.min(this.state.timeLeft/1000, 15) / 15 * 5;\n            \n            const colorScore = Math.round(colorAccuracy*10000);\n            const fillBonusScore = Math.round(colorAccuracy*10000*fillBonus/100);\n            const timeBonusScore = Math.round(colorAccuracy*10000*timeBonus/100); \n\n            const totalScore = colorScore\n                            + fillBonusScore\n                            + timeBonusScore;\n\n            if (this.scoreSubmitted === false) {\n                this.scoreSubmitted = true;\n                this.props.dispatch({\n                    payload: {\n                        level: 'level2',\n                        score: totalScore,\n                    },\n                    type: ScoreActionType.SET_SCORE\n                });\n                postLevelStats(Object.assign({}, this.state.finalFills, {\n                    level: this.props.level,\n                    points: totalScore\n                }));\n\n                const event = new CustomEvent('finalScore', { detail: { totalScore, level: this.props.level }});\n                window.dispatchEvent(event);\n            }\n            \n            return <div>\n                <Modal prompt={true}>\n                <LevelBox level={this.props.level} />\n                    <ColorHintLevel2\n                        name={this.DRINK_NAME}\n                        color9={this.COLORS[0]}\n                        color5={this.COLORS[1]}\n                        color3={this.COLORS[2]}\n                        colorResult={toColorString(this.TARGET_COLOR)}\n                    />\n\n                    <EndOfLevelGopher color={toColorString(finalColor!)}/>\n\n                    <ScoreHelper\n                        colorAccuracy={Math.round(colorAccuracy*10000)/100}\n                        colorScore={colorScore}\n                        fillBonus={fillBonusScore}\n                        totalScore={totalScore}\n                        timeBonus={timeBonusScore}\n                        />\n                </Modal>\n            </div>;\n        } else {\n            return <div>\n                <PreLevel title=\"Level 2\"/>\n                <Table />\n                <TimeBox time={this.state.timeLeft} />\n                <LevelBox level={this.props.level} />\n                <ColorHintLevel2\n                    name={this.DRINK_NAME}\n                    color9={this.COLORS[0]}\n                    color5={this.COLORS[1]}\n                    color3={this.COLORS[2]}\n                    colorResult={toColorString(this.TARGET_COLOR)}\n                />\n                <ColorTap active={this.props.activeButton === null ? undefined : this.props.activeButton}/>\n\n                <CocktailGlass isMedium={true} fillPercent={this.props.fillPercent} fillColor={toColorString(this.props.fillColor)}/>\n\n                <ButtonLegend />\n\n                <Gopher reach={this.props.fillPercent > 50} speechBubble={this.speechBubble}/>\n            </div>;\n        }\n    }\n}\n\nconst mapStateToProps = (state: AppState) => {\n    return {\n        activeButton: Object.keys(state.buttons).reduce((acc, buttonKey) => {\n            return (['cyan', 'magenta', 'yellow'].includes(buttonKey) \n            && state.buttons[buttonKey] === true ? buttonKey : acc) as any;\n        }, null),\n        continue: state.buttons.continue,\n        fillColor: calculateFillColor(state.fills),\n        fillPercent: (state.fills.cyan + state.fills.magenta + state.fills.yellow)/state.settings.capacity*100,\n        fills: state.fills,\n        level: state.level,\n        settings: state.settings\n    }\n}\n\nexport default connect(mapStateToProps)(Level2);","import Level2 from './Level2';\n\nexport * from './Level2';\nexport default Level2;\n","import * as React from 'react';\nimport { connect, DispatchProp } from 'react-redux';\nimport { LoopContext } from '../../components/Loop';\n\nimport {\n    CocktailGlass,\n    ColorTap,\n    Gopher,\n    Modal,\n    SpeechBubble,\n    WaterParticle\n} from '../../components';\n\nimport { AppState } from '../../reducers';\nimport { ButtonsActionType } from '../../reducers/buttons.reducer';\nimport { FillActionType, FillState } from '../../reducers/fills.reducer';\nimport { ScoreActionType } from '../../reducers/score.reducer';\nimport { SettingsActionType } from '../../reducers/settings.reducer';\n\nimport { calcTargetColor3, calculateFillColor, colorDistanceNormalized, getShuffledColors, postLevelStats, postSpill, RGBColor, toColorString } from '../../utils';\n\nimport ButtonLegend from '../../components/ButtonLegend';\nimport { ColorHintLevel3 } from '../../components/ColorHints';\nimport EndOfLevelGopher from '../../components/EndOfLevelGopher';\nimport LevelBox from '../../components/LevelBox';\nimport PreLevel from '../../components/PreLevel';\nimport ScoreHelper from '../../components/ScoreHelper';\nimport Spilled from '../../components/Spilled';\nimport Table from '../../components/Table';\nimport TimeBox from '../../components/TimeBox/TimeBox';\nimport getRandomDrink from '../../utils/randomDrink';\n\ninterface Level3State {\n    next: boolean;\n    timeLeft: number;\n    timedMessaged: string | null;\n\n    finalFills: FillState | null;\n    finalFillPercent: number | null;\n}\n\nclass Level3 extends React.Component<any & DispatchProp, Level3State> {\n    public static contextType = LoopContext;\n    private loopId: number | null = null;\n    private scoreSubmitted = false;\n    private TARGET_COLOR: RGBColor;\n    private COLORS: string[];\n    private DRINK_NAME: string;\n\n    private intermediateScore = -1;\n\n    constructor(props: any) {\n        super(props);\n\n        this.COLORS = getShuffledColors();\n        this.TARGET_COLOR = calcTargetColor3(this.COLORS);\n        this.DRINK_NAME = getRandomDrink();\n\n        this.state = {\n            finalFillPercent: null,\n            finalFills: null,\n            next: false,\n            timeLeft: 17000,\n            timedMessaged: null,\n        }\n    }\n\n    public dispatchIntermediateScore() {\n        // calculate score\n        if (!this.state.finalFills) {\n            const finalColor = calculateFillColor(this.props.fills);\n            const colorAccuracy = 1 - colorDistanceNormalized(finalColor, this.TARGET_COLOR);\n            const fillBonus = this.props.fillPercent < 85\n                ? -(85 - this.props.fillPercent)/85*50\n                : Math.max(Math.abs(this.props.fillPercent - 90)/17*5, 0);\n\n            const timeBonus = Math.min(this.state.timeLeft/1000, 15) / 15 * 5;\n\n            const colorScore = Math.round(colorAccuracy*10000);\n            const fillBonusScore = Math.round(colorAccuracy*10000*fillBonus/100);\n            const timeBonusScore = Math.round(colorAccuracy*10000*timeBonus/100); \n\n            const totalScore = colorScore\n                            + fillBonusScore\n                            + timeBonusScore;\n\n            if (this.intermediateScore !== totalScore) {\n                const event = new CustomEvent('intermediateScore', { detail: { totalScore, level: this.props.level }});\n                window.dispatchEvent(event);\n            }\n\n            this.intermediateScore = totalScore;\n        }\n    }\n\n    public componentDidMount() {\n        this.loopId = this.context.register(this.loop);\n        this.props.dispatch({\n            payload: {\n                capacity: 100,\n                fillrate: 50\n            },\n            type: SettingsActionType.SET_SETTINGS\n        });\n    }\n\n    public componentWillUnmount() {\n        this.context.unregister(this.loopId);\n    }\n\n    public loop = (timestamp: DOMHighResTimeStamp, dt: number) => {\n        if (this.state.timeLeft > 0 && this.state.timeLeft > dt) {\n            this.setState(state => ({\n                timeLeft: state.timeLeft - dt\n            }), () => this.dispatchIntermediateScore());\n        } else {\n            this.setState({\n                timeLeft: 0\n            });\n        }\n        if (this.props.activeButton !== null) {\n            this.context.spawn(<WaterParticle fillValue={this.props.settings.fillRate*dt/1000} color={this.props.activeButton}/>)\n        }\n    }\n\n    private get speechBubble() {\n        const { fillPercent } = this.props;\n        let message;\n        if ( this.state.timedMessaged) {\n            message = this.state.timedMessaged;\n        } else if (fillPercent < 10) {\n            message = \"I'm thirsty, go pour me a drink\";\n        } else if (fillPercent < 40) {\n            message = \"Nice, keep going\";\n        } else if (fillPercent < 80) {\n            message = \"Getting there\";\n        } else if (fillPercent < 93) {\n            message = \"Almost there\";\n        } else {\n            message = \"Can i haz drink pls?\";\n        }\n        return <SpeechBubble>\n            {message}\n        </SpeechBubble>;\n    }\n\n    public componentDidUpdate(prevProps: any, prevState: Level3State) {\n        if (this.props.fillPercent > 107 && prevProps.fillPercent <= 107) {\n            this.context.spawn(<Spilled />);\n            postSpill();\n            this.props.dispatch({\n                type: FillActionType.RESET_FILL\n            });\n\n            this.setState({\n                timedMessaged: \"Oh no, you spilled over!\"\n            }, () => {\n                setTimeout(() => {\n                    this.setState({ timedMessaged: null });\n                }, 3000)\n            });\n        }\n        if (this.state.timeLeft === 0 && prevState.timeLeft > 0) {\n            this.setState({ finalFills: this.props.fills, finalFillPercent: this.props.fillPercent, next: true });\n        }\n        if (this.props.continue === true && prevProps.continue === false) {\n            if (this.props.fillPercent < 10) {\n                this.props.dispatch({\n                    payload: {\n                        key: 'continue',\n                        value: false\n                    },\n                    type: ButtonsActionType.SET_BUTTON\n                });\n                this.setState({\n                    timedMessaged: \"MORE pls!\",\n                }, () => {\n                    setTimeout(() => {\n                        this.setState({ timedMessaged: null });\n                    }, 3000)\n                });\n            } else if(this.state.next === false) {\n                this.setState({ finalFills: this.props.fills, finalFillPercent: this.props.fillPercent, next: true });\n            }\n        }\n    }\n\n    public render() {\n        const { next } = this.state;\n\n        if (next) {\n            this.context.unregister(this.loopId);\n\n            // calculate score\n            const finalColor = calculateFillColor(this.state.finalFills!);\n            const colorAccuracy = 1 - colorDistanceNormalized(finalColor, this.TARGET_COLOR);\n            const fillBonus = this.state.finalFillPercent! < 85\n                ? -(85 - this.state.finalFillPercent!)/85*50\n                : Math.max(Math.abs(this.state.finalFillPercent! - 90)/17*5, 0);\n\n            const timeBonus = Math.min(this.state.timeLeft/1000, 15) / 15 * 5;\n            \n            const colorScore = Math.round(colorAccuracy*10000);\n            const fillBonusScore = Math.round(colorAccuracy*10000*fillBonus/100);\n            const timeBonusScore = Math.round(colorAccuracy*10000*timeBonus/100); \n\n            const totalScore = colorScore\n                            + fillBonusScore\n                            + timeBonusScore;\n\n            postLevelStats(Object.assign({}, this.state.finalFills, {\n                level: this.props.level,\n                points: totalScore\n            }));\n\n            if (this.scoreSubmitted === false) {\n                this.scoreSubmitted = true;\n                this.props.dispatch({\n                    payload: {\n                        level: 'level3',\n                        score: totalScore,\n                    },\n                    type: ScoreActionType.SET_SCORE\n                });\n                postLevelStats(Object.assign({}, this.state.finalFills, {\n                    level: this.props.level,\n                    points: totalScore\n                }));\n\n                const event = new CustomEvent('finalScore', { detail: { totalScore, level: this.props.level }});\n                window.dispatchEvent(event);\n            }\n            \n            return <div>\n                <Modal prompt={true}>\n                    <LevelBox level={this.props.level} />\n                    <ColorHintLevel3\n                        name={this.DRINK_NAME}\n                        colorResult={toColorString(this.TARGET_COLOR)}\n                    />\n\n                    <EndOfLevelGopher color={toColorString(finalColor!)}/>\n\n                    <ScoreHelper\n                        colorAccuracy={Math.round(colorAccuracy*10000)/100}\n                        colorScore={colorScore}\n                        fillBonus={fillBonusScore}\n                        totalScore={totalScore}\n                        timeBonus={timeBonusScore}\n                        />\n                </Modal>\n            </div>;\n        } else {\n            return <div>\n                <PreLevel title=\"Level 3\"/>\n                <Table />\n                <TimeBox time={this.state.timeLeft} />\n                <LevelBox level={this.props.level} />\n                <ColorHintLevel3\n                    name={this.DRINK_NAME}\n                    colorResult={toColorString(this.TARGET_COLOR)}\n                />\n                <ColorTap active={this.props.activeButton === null ? undefined : this.props.activeButton}/>\n\n                <CocktailGlass isSmall={true} fillPercent={this.props.fillPercent} fillColor={toColorString(this.props.fillColor)}/>\n\n                <ButtonLegend />\n\n                <Gopher reach={this.props.fillPercent > 50} speechBubble={this.speechBubble}/>\n            </div>;\n        }\n    }\n}\n\nconst mapStateToProps = (state: AppState) => {\n    return {\n        activeButton: Object.keys(state.buttons).reduce((acc, buttonKey) => {\n            return (['cyan', 'magenta', 'yellow'].includes(buttonKey) \n            && state.buttons[buttonKey] === true ? buttonKey : acc) as any;\n        }, null),\n        continue: state.buttons.continue,\n        fillColor: calculateFillColor(state.fills),\n        fillPercent: (state.fills.cyan + state.fills.magenta + state.fills.yellow)/state.settings.capacity*100,\n        fills: state.fills,\n        level: state.level,\n        settings: state.settings\n    }\n}\n\nexport default connect(mapStateToProps)(Level3);","import Level3 from './Level3';\n\nexport * from './Level3';\nexport default Level3;\n","import ScoreScreenHelper from './ScoreScreenHelper';\n\nexport * from './ScoreScreenHelper';\nexport default ScoreScreenHelper;","import * as React from 'react';\n\nimport './ScoreScreenHelper.css';\n\nexport const ScoreScreenHelper = (props: { score1: number, score2: number, score3: number, totalScore: number }) => <div className=\"ScoreScreenHelper\">\n    <div className=\"ScoreScreenHelper__TotalScore\">\n        <p>total score:</p>\n        <p>{props.totalScore}</p>\n    </div>\n\n    <div className=\"ScoreScreenHelper__DetailScoreWrapper\">\n        <div>\n            <p>level 1 score:</p>\n            <p>{props.score1}</p>\n        </div>\n        <div>\n            <p>level 2 score:</p>\n            <p>{props.score2}</p>\n        </div>\n        <div>\n            <p>level 3 score:</p>\n            <p>{props.score3}</p>\n        </div>\n    </div>\n</div>;\n\nexport default ScoreScreenHelper;\n","import * as React from 'react';\nimport { connect, DispatchProp } from 'react-redux';\nimport { LoopContext } from '../../components/Loop';\n\nimport ButtonLegend from '../../components/ButtonLegend';\nimport EndOfLevelGopher from '../../components/EndOfLevelGopher';\nimport ScoreScreenHelper from '../../components/ScoreScreenHelper';\n\nimport { AppState } from '../../reducers';\nimport { ButtonsActionType } from '../../reducers/buttons.reducer';\nimport { LevelActionType } from '../../reducers/level.reducer';\nimport { ScoreState } from '../../reducers/score.reducer';\n\nimport './ScoreScreen.css';\ninterface ScoreScreenProps {\n    continue: boolean;\n    score: ScoreState;\n}\n\nclass ScoreScreen extends React.Component<ScoreScreenProps & DispatchProp, any> {\n    public static contextType = LoopContext;\n    // private loopId: number;\n\n    public componentWillUnmount() {\n        this.props.dispatch({\n            payload: {\n                key: 'continue',\n                value: false\n            },\n            type: ButtonsActionType.SET_BUTTON\n        });\n    }\n\n    public componentDidUpdate(prevProps: ScoreScreenProps) {\n        if (prevProps.continue === false && this.props.continue === true) {\n            this.props.dispatch({\n                type: LevelActionType.NEXT_LEVEL\n            });\n        }\n    }\n\n    public render() {\n        const { score } = this.props;\n        const totalScore = Math.round(score.level1)\n                        + Math.round(score.level2)\n                        + Math.round(score.level3);\n\n        return <div className=\"ScoreScreen\">\n                    <EndOfLevelGopher color={\"cyan\"} finalScreen={true}/>\n                    <ScoreScreenHelper\n                        score1={Math.round(score.level1)}\n                        score2={Math.round(score.level2)}\n                        score3={Math.round(score.level3)}\n                        totalScore={totalScore}\n                    />\n\n                    <ButtonLegend continue=\"Enter Leaderboard\" reset=\"Chicken out\"/>\n        </div>;\n    }\n}\n\nconst mapStateToProps = (state: AppState) => {\n    return {\n        continue: state.buttons.continue,\n        score: state.score\n    }\n}\n\nexport default connect(mapStateToProps)(ScoreScreen);\n","import ScoreScreen from './ScoreScreen';\n\nexport * from './ScoreScreen';\nexport default ScoreScreen;\n","import * as React from 'react';\nimport { connect, DispatchProp } from 'react-redux';\n\nimport {\n    CocktailGlass,\n    ColorTap,\n    Gopher,\n    LoopContext,\n    Modal,\n    SpeechBubble,\n    WaterParticle\n} from '../../components';\n\nimport { AppState } from '../../reducers';\nimport { ButtonsActionType } from '../../reducers/buttons.reducer';\nimport { FillActionType, FillState } from '../../reducers/fills.reducer';\nimport { SettingsActionType } from '../../reducers/settings.reducer';\n\nimport { calculateFillColor, colorDistanceNormalized, postLevelStats, postSpill, RGBColor, toColorString } from '../../utils';\n\nimport ButtonLegend from '../../components/ButtonLegend';\nimport { ColorHintTutorial } from '../../components/ColorHints';\nimport ContinueButton from '../../components/ContinueButton';\nimport EndOfLevelGopher from '../../components/EndOfLevelGopher';\nimport LevelBox from '../../components/LevelBox';\nimport PreLevel from '../../components/PreLevel';\nimport ScoreHelper from '../../components/ScoreHelper';\nimport Spilled from '../../components/Spilled';\nimport Table from '../../components/Table';\nimport './Tutorial.css';\n\ninterface TutorialState {\n    next: boolean;\n    timedMessaged: string | null;\n    finalFills: FillState | null;\n    finalFillPercent: number | null;\n}\n\nconst TARGET_COLOR: RGBColor = {\n    blue: 255,\n    green: 127,\n    red: 127,\n};\n\nclass Tutorial extends React.Component<any & DispatchProp, TutorialState> {\n    public static contextType = LoopContext;\n    private loopId: number | null = null;\n    private scoreSubmitted = false;\n\n    constructor(props: any) {\n        super(props);\n        this.state = {\n            finalFillPercent: null,\n            finalFills: null,\n            next: false,\n            timedMessaged: null,\n        };\n    }\n\n    public dispatchIntermediateScore() {\n        if (this.state.finalFills === null) {\n            const finalColor = calculateFillColor(this.props.fills);\n            const colorAccuracy = 1 - colorDistanceNormalized(finalColor, TARGET_COLOR);\n            const fillBonus = this.props.fillPercent < 85\n                ? -(85 - this.props.fillPercent)/85*50\n                : Math.max(Math.abs(this.props.fillPercent - 90)/17*5, 0);\n            \n            const colorScore = Math.round(colorAccuracy*10000);\n            const fillBonusScore = Math.round(colorAccuracy*10000*fillBonus/100);\n\n            const totalScore = colorScore\n                            + fillBonusScore;\n            const event = new CustomEvent('intermediateScore', { detail: { totalScore, level: this.props.level }});\n            window.dispatchEvent(event);\n        }\n    }\n\n    public componentDidUpdate(prevProps: any) {\n        if (prevProps.fillPercent !== this.props.fillPercent) {\n            this.dispatchIntermediateScore();\n        }\n        if (this.props.fillPercent > 107 && prevProps.fillPercent <= 107) {\n            this.context.spawn(<Spilled />);\n            postSpill();\n            this.props.dispatch({\n                type: FillActionType.RESET_FILL\n            });\n\n            this.setState({\n                timedMessaged: \"Oh no, you spilled over!\"\n            }, () => {\n                setTimeout(() => {\n                    this.setState({ timedMessaged: null });\n                }, 3000)\n            });\n        }\n        if (this.props.continue === true && prevProps.continue === false) {\n            if (this.props.fillPercent < 10) {\n                this.props.dispatch({\n                    payload: {\n                        key: 'continue',\n                        value: false\n                    },\n                    type: ButtonsActionType.SET_BUTTON\n                });\n                this.setState({\n                    timedMessaged: \"MORE pls!\",\n                }, () => {\n                    setTimeout(() => {\n                        this.setState({ timedMessaged: null });\n                    }, 3000)\n                });\n            } else {\n                this.setState({ finalFills: this.props.fills, finalFillPercent: this.props.fillPercent, next: true });\n            }\n        }\n    }\n\n    public componentDidMount() {\n        this.loopId = this.context.register(this.loop);\n        this.props.dispatch({\n            payload: {\n                capacity: 400,\n                fillrate: 50\n            },\n            type: SettingsActionType.SET_SETTINGS\n        });\n    }\n\n    public componentWillUnmount() {\n        this.context.unregister(this.loopId);\n    }\n\n    public loop = (timestamp: DOMHighResTimeStamp, dt: number) => {\n        if (this.props.activeButton !== null) {\n            this.context.spawn(<WaterParticle fillValue={this.props.settings.fillRate*dt/1000} color={this.props.activeButton}/>)\n        }\n    }\n\n    private get speechBubble() {\n        const { fillPercent } = this.props;\n        let message;\n        if ( this.state.timedMessaged) {\n            message = this.state.timedMessaged;\n        } else if (fillPercent < 10) {\n            message = \"I'm thirsty, go pour me a drink\";\n        } else if (fillPercent < 40) {\n            message = \"Nice, keep going\";\n        } else if (fillPercent < 80) {\n            message = \"Getting there\";\n        } else if (fillPercent < 93) {\n            message = \"Almost there\";\n        } else {\n            message = <>Hand me the drink with <ContinueButton/></>;\n        }\n        return <SpeechBubble>\n            {message}\n        </SpeechBubble>;\n    }\n\n    public render() {\n\n        const { next } = this.state;\n\n        if (next) {\n            const finalColor = calculateFillColor(this.state.finalFills!);\n            const colorAccuracy = 1 - colorDistanceNormalized(finalColor, TARGET_COLOR);\n            const fillBonus = this.state.finalFillPercent! < 85\n                ? -(85 - this.state.finalFillPercent!)/85*50\n                : Math.max(Math.abs(this.state.finalFillPercent! - 90)/17*5, 0);\n            \n            const colorScore = Math.round(colorAccuracy*10000);\n            const fillBonusScore = Math.round(colorAccuracy*10000*fillBonus/100);\n\n            const totalScore = colorScore\n                            + fillBonusScore;\n\n            if (this.scoreSubmitted === false) {\n                this.scoreSubmitted = true;\n\n                postLevelStats(Object.assign({}, this.state.finalFills, {\n                    level: this.props.level,\n                    points: totalScore\n                }));\n\n                const event = new CustomEvent('finalScore', { detail: { totalScore, level: this.props.level }});\n                window.dispatchEvent(event);\n            }\n\n            return <div className=\"Tutorial\">\n                <Modal prompt={true}>\n                    <LevelBox level={this.props.level} />\n                    <ColorHintTutorial/>\n\n                    <EndOfLevelGopher color={toColorString(finalColor!)}/>\n\n                    <ScoreHelper\n                        colorAccuracy={Math.round(colorAccuracy*10000)/100}\n                        colorScore={colorScore}\n                        fillBonus={fillBonusScore}\n                        totalScore={totalScore}\n                        />\n\n                    <p style={{margin: 0}}>But that was just the training. Wanna play for points?</p>\n                </Modal>\n            </div>;\n        } else {\n            return <div>\n                <PreLevel title=\"Training\" training={true} />\n                <Table />\n                <LevelBox level={this.props.level} />\n                <ColorHintTutorial/>\n                <ColorTap active={this.props.activeButton === null ? undefined : this.props.activeButton}/>\n                <CocktailGlass fillPercent={this.props.fillPercent} fillColor={toColorString(this.props.fillColor)}/>\n\n                <ButtonLegend reset=\"Reset Training\"/>\n                \n                <Gopher reach={this.props.fillPercent > 50} speechBubble={this.speechBubble}/>\n            </div>;\n        }\n    }\n}\n\n\n\nconst mapStateToProps = (state: AppState) => {\n    return {\n        activeButton: Object.keys(state.buttons).reduce((acc, buttonKey) => {\n            return (['cyan', 'magenta', 'yellow'].includes(buttonKey) \n            && state.buttons[buttonKey] === true ? buttonKey : acc) as any;\n        }, null),\n        continue: state.buttons.continue,\n        fillColor: calculateFillColor(state.fills),\n        fillPercent: (state.fills.cyan + state.fills.magenta + state.fills.yellow)/state.settings.capacity*100,\n        fills: state.fills,\n        level: state.level,\n        settings: state.settings\n    }\n}\n\nexport default connect(mapStateToProps)(Tutorial);\n","import Tutorial from './Tutorial';\n\nexport * from './Tutorial';\nexport default Tutorial;\n","import ResetDialog from './ResetDialog';\n\nexport * from './ResetDialog';\nexport default ResetDialog;","import * as React from 'react';\n\nimport ContinueButton from '../ContinueButton';\nimport ResetButton from '../ResetButton';\n\nimport './ResetDialog.css';\n\nconst ResetDialog = () => {\n    return <div className=\"ResetDialog\">\n        <div className=\"ResetDialog__Wrapper\">\n            <svg width=\"530px\" height=\"388px\" viewBox=\"0 0 530 388\" version=\"1.1\">\n                <g id=\"Page-1\" stroke=\"none\" strokeWidth=\"1\" fill=\"none\" fillRule=\"evenodd\">\n                    <g id=\"Ebene_12\" transform=\"translate(1.000000, 1.000000)\">\n                        <path d=\"M525,327 L505,360 C489,384 479.84,386 461,386 L34.11,386 C15.2715672,386 0,370.728433 0,351.89 L0,73.11 C0,54.27 12,44 33,15\" id=\"Path\" stroke=\"#000000\" strokeWidth=\"2\" fill=\"#AAAAAA\" strokeLinecap=\"round\" strokeLinejoin=\"round\"/>\n                        <rect id=\"Rectangle\" stroke=\"#000000\" strokeWidth=\"2\" fill=\"#FFFFFF\" x=\"27\" y=\"0\" width=\"501\" height=\"347\" rx=\"34.11\"/>\n                        <text id=\"Do-you-realy-want-to\" fill=\"#000000\" fontFamily=\"ArialMT, Arial\" fontSize=\"26\" fontWeight=\"normal\">\n                            <tspan x=\"87.2\" y=\"83.3\">Do you really want to go back to</tspan>\n                            <tspan x=\"87.2\" y=\"114.150586\">training and abort your game?</tspan>\n                        </text>\n                        <text id=\"No,-continue-game!\" fill=\"#000000\" fontFamily=\"ArialMT, Arial\" fontSize=\"24\" fontWeight=\"normal\">\n                            <tspan x=\"217\" y=\"204.65\">No, continue game!</tspan>\n                        </text>\n                        <text id=\"Yes,-reset!\" fill=\"#000000\" fontFamily=\"ArialMT, Arial\" fontSize=\"24\" fontWeight=\"normal\">\n                            <tspan x=\"217\" y=\"270.65\">Yes, reset!</tspan>\n                        </text>\n                    </g>\n                </g>\n            </svg>\n            <div className=\"ResetDialog__Buttons\">\n                <ContinueButton />\n                <ResetButton />\n            </div>\n        </div>\n    </div>;\n};\n\nexport default ResetDialog;","import * as React from 'react';\nimport { connect, DispatchProp } from 'react-redux';\n\nimport HighscoreScreen from '../../levels/HighscoreScreen';\nimport Level1 from '../../levels/Level1';\nimport Level2 from '../../levels/Level2';\nimport Level3 from '../../levels/Level3';\nimport ScoreScreen from '../../levels/ScoreScreen';\nimport Tutorial from '../../levels/Tutorial';\n\nimport { AppState } from '../../reducers';\nimport { Level } from '../../reducers/level.reducer';\n\nimport Loop from '../Loop';\nimport ResetDialog from '../ResetDialog';\n\nimport './World.css';\n\nclass World extends React.PureComponent<{level: any, resetDialog: boolean, timestamp: string} & DispatchProp, { key: string }> {\n\n    public render() {\n        const CurrentLevel: React.ComponentClass = this.props.level;\n\n        return <div className=\"World\">\n            <Loop>\n                {this.props.resetDialog && <ResetDialog />}\n                <CurrentLevel key={this.props.timestamp}/>\n            </Loop>\n        </div>;\n    }\n}\n\nconst mapStateToProps = (state: AppState) => {\n    let level;\n    switch (state.level) {\n        case Level.Level1:\n            level = Level1;\n            break;\n        \n        case Level.Level2:\n            level = Level2;\n            break;\n\n        case Level.Level3:\n            level = Level3;\n            break;\n        \n        case Level.ScoreScreen:\n            level = ScoreScreen;\n            break;\n        \n        case Level.HighscoreScreen:\n            level = HighscoreScreen;\n            break;\n\n        default:\n            level = Tutorial;\n            break;\n    \n    }\n    return {\n        level,\n        resetDialog: state.reset,\n        timestamp: state.timestamp\n    };\n}\n\nexport default connect(mapStateToProps)(World);\n","import World from './World';\nexport * from './World';\nexport default World;\n","import * as React from 'react';\n\nimport { Provider } from 'react-redux';\nimport {  createStore } from 'redux';\n\nimport rootReducer, { initialState } from './reducers';\n\nimport ButtonBar from './components/ButtonBar';\n\nimport SocketHandler from './components/SocketHandler';\nimport World from './components/World';\n\nconst store = createStore(rootReducer, initialState);\n\nclass App extends React.Component {\n  public render() {\n    return (\n      <Provider store={store}>\n        <SocketHandler/>\n        <World/>\n        <ButtonBar/>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","import * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root') as HTMLElement\n);\n"],"sourceRoot":""}